

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Apr 28 20:27:51 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           ; Version 2.05
    36                           ; Generated 20/12/2018 GMT
    37                           ; 
    38                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F67K40 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  0005C6                     __pidataCOMRAM:
    72                           	opt callstack 0
    73                           
    74                           ;initializer for _before_DS_data
    75  0005C6  FF                 	db	255
    76  0005C7  FF                 	db	255
    77                           
    78                           ;initializer for read_ds_dual_de_gozaru@first_communication
    79  0005C8  01                 	db	1
    80                           
    81                           ;initializer for _DS_time_out
    82  0005C9  64                 	db	100
    83  0000                     _RD6PPS	set	3696
    84  0000                     _RX2PPSbits	set	3601
    85  0000                     _RD4PPS	set	3694
    86  0000                     _RX1PPSbits	set	3599
    87  0000                     _SSP2CLKPPSbits	set	3612
    88  0000                     _SSP2DATPPSbits	set	3613
    89  0000                     _RB1PPS	set	3675
    90  0000                     _RB0PPS	set	3674
    91  0000                     _RC6PPS	set	3688
    92  0000                     _SSP1CLKPPSbits	set	3609
    93  0000                     _SSP1DATPPSbits	set	3610
    94  0000                     _RC0PPS	set	3682
    95  0000                     _ODCONH	set	3775
    96  0000                     _ODCONG	set	3770
    97  0000                     _ODCONF	set	3762
    98  0000                     _ODCONE	set	3757
    99  0000                     _ODCOND	set	3749
   100  0000                     _ODCONC	set	3744
   101  0000                     _ODCONB	set	3736
   102  0000                     _ODCONA	set	3728
   103  0000                     _WPUH	set	3776
   104  0000                     _WPUG	set	3771
   105  0000                     _WPUF	set	3763
   106  0000                     _WPUE	set	3758
   107  0000                     _WPUD	set	3750
   108  0000                     _WPUC	set	3745
   109  0000                     _WPUB	set	3737
   110  0000                     _WPUA	set	3729
   111  0000                     _ANSELG	set	3772
   112  0000                     _ANSELF	set	3764
   113  0000                     _ANSELE	set	3759
   114  0000                     _ANSELD	set	3751
   115  0000                     _ANSELB	set	3738
   116  0000                     _ANSELA	set	3730
   117  0000                     _PIE4bits	set	3629
   118  0000                     _PIE3bits	set	3628
   119  0000                     _PIE5bits	set	3630
   120  0000                     _PIR5bits	set	3640
   121  0000                     _PIE0bits	set	3625
   122  0000                     _PIR0bits	set	3635
   123  0000                     _TX5REG	set	3805
   124  0000                     _TX5STAbits	set	3809
   125  0000                     _RC5REG	set	3804
   126  0000                     _BAUD5CON	set	3810
   127  0000                     _RC5STA	set	3808
   128  0000                     _TX5STA	set	3809
   129  0000                     _SP5BRGL	set	3806
   130  0000                     _SP5BRGH	set	3807
   131  0000                     _TX4REG	set	3812
   132  0000                     _TX4STAbits	set	3816
   133  0000                     _RC4REG	set	3811
   134  0000                     _BAUD4CON	set	3817
   135  0000                     _RC4STA	set	3815
   136  0000                     _TX4STA	set	3816
   137  0000                     _SP4BRGL	set	3813
   138  0000                     _SP4BRGH	set	3814
   139  0000                     _TX3REG	set	3819
   140  0000                     _TX3STAbits	set	3823
   141  0000                     _RC3REG	set	3818
   142  0000                     _PIR4bits	set	3639
   143  0000                     _BAUD3CON	set	3824
   144  0000                     _RC3STA	set	3822
   145  0000                     _TX3STA	set	3823
   146  0000                     _SP3BRGL	set	3820
   147  0000                     _SP3BRGH	set	3821
   148  0000                     _TX2REG	set	3826
   149  0000                     _TX2STAbits	set	3830
   150  0000                     _RC2REG	set	3825
   151  0000                     _BAUD2CON	set	3831
   152  0000                     _RC2STA	set	3829
   153  0000                     _TX2STA	set	3830
   154  0000                     _SP2BRGL	set	3827
   155  0000                     _SP2BRGH	set	3828
   156  0000                     _SSP2STATbits	set	3800
   157  0000                     _SSP2BUF	set	3797
   158  0000                     _PIR3bits	set	3638
   159  0000                     _SSP2CON2bits	set	3802
   160  0000                     _SSP2STAT	set	3800
   161  0000                     _SSP2ADD	set	3798
   162  0000                     _SSP2CON3	set	3803
   163  0000                     _SSP2CON1	set	3801
   164  0000                     _TMR8	set	3880
   165  0000                     _T8CONbits	set	3882
   166  0000                     _T8CON	set	3882
   167  0000                     _T8CLKCON	set	3884
   168  0000                     _T8PR	set	3881
   169  0000                     _T8HLT	set	3883
   170  0000                     _T8RST	set	3885
   171  0000                     _TMR7L	set	3886
   172  0000                     _TMR7H	set	3887
   173  0000                     _T7CONbits	set	3888
   174  0000                     _T7CON	set	3888
   175  0000                     _TMR7CLK	set	3891
   176  0000                     _T7GCON	set	3889
   177  0000                     _ADPCH	set	3935
   178  0000                     _ADACQ	set	3932
   179  0000                     _ADPRE	set	3934
   180  0000                     _ADREF	set	3928
   181  0000                     _ADCLK	set	3927
   182  0000                     _ADCON3	set	3931
   183  0000                     _ADCON2	set	3930
   184  0000                     _ADCON1	set	3929
   185  0000                     _LATDbits	set	3964
   186  0000                     _LATGbits	set	3967
   187  0000                     _LATHbits	set	3968
   188  0000                     _LATAbits	set	3961
   189  0000                     _LATEbits	set	3965
   190  0000                     _TRISH	set	3976
   191  0000                     _TRISG	set	3975
   192  0000                     _TRISF	set	3974
   193  0000                     _TRISE	set	3973
   194  0000                     _TRISD	set	3972
   195  0000                     _TRISC	set	3971
   196  0000                     _TRISB	set	3970
   197  0000                     _TRISA	set	3969
   198  0000                     _LATH	set	3968
   199  0000                     _LATG	set	3967
   200  0000                     _LATF	set	3966
   201  0000                     _LATE	set	3965
   202  0000                     _LATD	set	3964
   203  0000                     _LATC	set	3963
   204  0000                     _LATB	set	3962
   205  0000                     _LATA	set	3961
   206  0000                     _INTCONbits	set	4082
   207  0000                     _TMR6	set	4015
   208  0000                     _T6CONbits	set	4017
   209  0000                     _T6CON	set	4017
   210  0000                     _T6CLKCON	set	4019
   211  0000                     _T6PR	set	4016
   212  0000                     _T6HLT	set	4018
   213  0000                     _T6RST	set	4020
   214  0000                     _TMR4	set	4021
   215  0000                     _T4CONbits	set	4023
   216  0000                     _T4CON	set	4023
   217  0000                     _T4CLKCON	set	4025
   218  0000                     _T4PR	set	4022
   219  0000                     _T4HLT	set	4024
   220  0000                     _T4RST	set	4026
   221  0000                     _TMR2	set	4027
   222  0000                     _T2CONbits	set	4029
   223  0000                     _T2CON	set	4029
   224  0000                     _T2CLKCON	set	4031
   225  0000                     _T2PR	set	4028
   226  0000                     _T2HLT	set	4030
   227  0000                     _T2RST	set	4032
   228  0000                     _TMR5L	set	4033
   229  0000                     _TMR5H	set	4034
   230  0000                     _T5CONbits	set	4035
   231  0000                     _T5CON	set	4035
   232  0000                     _TMR5CLK	set	4038
   233  0000                     _T5GCON	set	4036
   234  0000                     _TMR3L	set	4039
   235  0000                     _TMR3H	set	4040
   236  0000                     _T3CONbits	set	4041
   237  0000                     _T3CON	set	4041
   238  0000                     _TMR3CLK	set	4044
   239  0000                     _T3GCON	set	4042
   240  0000                     _TMR1L	set	4045
   241  0000                     _TMR1H	set	4046
   242  0000                     _T1CONbits	set	4047
   243  0000                     _T1CON	set	4047
   244  0000                     _TMR1CLK	set	4050
   245  0000                     _T1GCON	set	4048
   246  0000                     _TMR0H	set	4052
   247  0000                     _TMR0L	set	4051
   248  0000                     _T0CON0	set	4053
   249  0000                     _T0CON1	set	4054
   250  0000                     _TX1REG	set	3993
   251  0000                     _TX1STAbits	set	3997
   252  0000                     _RC1REG	set	3992
   253  0000                     _BAUD1CON	set	3998
   254  0000                     _RC1STA	set	3996
   255  0000                     _TX1STA	set	3997
   256  0000                     _SP1BRGL	set	3994
   257  0000                     _SP1BRGH	set	3995
   258  0000                     _SSP1STATbits	set	3988
   259  0000                     _SSP1BUF	set	3985
   260  0000                     _SSP1CON1bits	set	3989
   261  0000                     _SSP1CON1	set	3989
   262  0000                     _SSP1STAT	set	3988
   263  0000                     _ADRESL	set	3939
   264  0000                     _ADRESH	set	3940
   265  0000                     _ADCON0bits	set	3936
   266  0000                     _ADCON0	set	3936
   267                           
   268                           ; #config settings
   269  0000                     
   270                           	psect	cinit
   271  0004AE                     __pcinit:
   272                           	opt callstack 0
   273  0004AE                     start_initialization:
   274                           	opt callstack 0
   275  0004AE                     __initialization:
   276                           	opt callstack 0
   277                           
   278                           ; Initialize objects allocated to COMRAM (4 bytes)
   279                           ; load TBLPTR registers with __pidataCOMRAM
   280  0004AE  0EC6               	movlw	low __pidataCOMRAM
   281  0004B0  6EF6               	movwf	tblptrl,c
   282  0004B2  0E05               	movlw	high __pidataCOMRAM
   283  0004B4  6EF7               	movwf	tblptrh,c
   284  0004B6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   285  0004B8  6EF8               	movwf	tblptru,c
   286  0004BA  EE00  F048         	lfsr	0,__pdataCOMRAM
   287  0004BE  EE10 F004          	lfsr	1,4
   288  0004C2                     copy_data0:
   289  0004C2  0009               	tblrd		*+
   290  0004C4  CFF5 FFEE          	movff	tablat,postinc0
   291  0004C8  50E5               	movf	postdec1,w,c
   292  0004CA  50E1               	movf	fsr1l,w,c
   293  0004CC  E1FA               	bnz	copy_data0
   294                           
   295                           ; Clear objects allocated to COMRAM (64 bytes)
   296  0004CE  EE00  F001         	lfsr	0,__pbssCOMRAM
   297  0004D2  0E40               	movlw	64
   298  0004D4                     clear_0:
   299  0004D4  6AEE               	clrf	postinc0,c
   300  0004D6  06E8               	decf	wreg,f,c
   301  0004D8  E1FD               	bnz	clear_0
   302  0004DA                     end_of_initialization:
   303                           	opt callstack 0
   304  0004DA                     __end_of__initialization:
   305                           	opt callstack 0
   306  0004DA  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   307  0004DC  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   308  0004DE  0100               	movlb	0
   309  0004E0  EF72  F002         	goto	_main	;jump to C main() function
   310                           
   311                           	psect	bssCOMRAM
   312  000001                     __pbssCOMRAM:
   313                           	opt callstack 0
   314  000001                     _DS_data:
   315                           	opt callstack 0
   316  000001                     	ds	13
   317  00000E                     _sinyounai_DS_data:
   318                           	opt callstack 0
   319  00000E                     	ds	13
   320  00001B                     _data:
   321                           	opt callstack 0
   322  00001B                     	ds	10
   323  000025                     	ds	5
   324  00002A                     	ds	3
   325  00002D                     _csv_data:
   326                           	opt callstack 0
   327  00002D                     	ds	2
   328  00002F                     CSV_timer_task@CSV_lib_count:
   329                           	opt callstack 0
   330  00002F                     	ds	2
   331  000031                     _CSV_lib_transmit_flag:
   332                           	opt callstack 0
   333  000031                     	ds	2
   334  000033                     _CSV_lib_now_time:
   335                           	opt callstack 0
   336  000033                     	ds	2
   337  000035                     _CSV_lib_cycle_time:
   338                           	opt callstack 0
   339  000035                     	ds	2
   340  000037                     _DS_communication_error_time:
   341                           	opt callstack 0
   342  000037                     	ds	2
   343  000039                     _push_DS_data:
   344                           	opt callstack 0
   345  000039                     	ds	2
   346  00003B                     _CSV_lib_enable:
   347                           	opt callstack 0
   348  00003B                     	ds	1
   349  00003C                     read_ds_dual_de_gozaru@check_sum:
   350                           	opt callstack 0
   351  00003C                     	ds	1
   352  00003D                     read_ds_dual_de_gozaru@mode:
   353                           	opt callstack 0
   354  00003D                     	ds	1
   355  00003E                     read_ds_dual_de_gozaru@read_number:
   356                           	opt callstack 0
   357  00003E                     	ds	1
   358  00003F                     _DS_read_stop:
   359                           	opt callstack 0
   360  00003F                     	ds	1
   361  000040                     _DS_uart_number:
   362                           	opt callstack 0
   363  000040                     	ds	1
   364                           
   365                           	psect	dataCOMRAM
   366  000048                     __pdataCOMRAM:
   367                           	opt callstack 0
   368  000048                     _before_DS_data:
   369                           	opt callstack 0
   370  000048                     	ds	2
   371  00004A                     read_ds_dual_de_gozaru@first_communication:
   372                           	opt callstack 0
   373  00004A                     	ds	1
   374  00004B                     _DS_time_out:
   375                           	opt callstack 0
   376  00004B                     	ds	1
   377                           
   378                           	psect	cstackCOMRAM
   379  000041                     __pcstackCOMRAM:
   380                           	opt callstack 0
   381  000041                     i2TIMER0_16bit_set_count@data:
   382                           	opt callstack 0
   383  000041                     i2TIMER1_set_count@data:
   384                           	opt callstack 0
   385                           
   386                           ; 2 bytes @ 0x0
   387  000041                     	ds	2
   388  000043                     ??_wood_isr:
   389  000043                     
   390                           ; 1 bytes @ 0x2
   391  000043                     	ds	2
   392  000045                     ??_always_de_gozaru:
   393  000045                     enable_interrupts@data:
   394                           	opt callstack 0
   395  000045                     output_LED5@num:
   396                           	opt callstack 0
   397  000045                     SPI_begin@data:
   398                           	opt callstack 0
   399  000045                     Serial1_begin@speed:
   400                           	opt callstack 0
   401  000045                     TIMER0_setup@data:
   402                           	opt callstack 0
   403  000045                     TIMER0_16bit_set_count@data:
   404                           	opt callstack 0
   405  000045                     TIMER1_setup@data:
   406                           	opt callstack 0
   407  000045                     TIMER1_set_count@data:
   408                           	opt callstack 0
   409                           
   410                           ; 2 bytes @ 0x4
   411  000045                     	ds	1
   412  000046                     
   413                           ; 1 bytes @ 0x5
   414  000046                     	ds	1
   415  000047                     Serial1_begin@data:
   416                           	opt callstack 0
   417                           
   418                           ; 1 bytes @ 0x6
   419  000047                     	ds	1
   420  000048                     
   421                           ; 1 bytes @ 0x7
   422 ;;
   423 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   424 ;;
   425 ;; *************** function _main *****************
   426 ;; Defined at:
   427 ;;		line 42 in file "MELON PAN1_main.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;		None
   432 ;; Return value:  Size  Location     Type
   433 ;;                  1    wreg      void 
   434 ;; Registers used:
   435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   436 ;; Tracked objects:
   437 ;;		On entry : 0/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   445 ;;Total ram usage:        0 bytes
   446 ;; Hardware stack levels required when called:    6
   447 ;; This function calls:
   448 ;;		_TIMER1_set_count
   449 ;;		_TIMER1_setup
   450 ;;		_enable_interrupts
   451 ;;		_pin_init
   452 ;;		_read_ds_dual_de_gozaru
   453 ;;		_read_ds_dual_init
   454 ;;		_spi_init
   455 ;; This function is called by:
   456 ;;		Startup code after reset
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           	psect	text0
   461  0004E4                     __ptext0:
   462                           	opt callstack 0
   463  0004E4                     _main:
   464                           	opt callstack 25
   465                           
   466                           ;MELON PAN1_main.c: 44: pin_init();
   467                           
   468                           ;incstack = 0
   469  0004E4  EC13  F001         	call	_pin_init	;wreg free
   470                           
   471                           ;MELON PAN1_main.c: 48: spi_init();
   472  0004E8  EC8A  F002         	call	_spi_init	;wreg free
   473                           
   474                           ;MELON PAN1_main.c: 49: read_ds_dual_init();
   475  0004EC  EC38  F002         	call	_read_ds_dual_init	;wreg free
   476                           
   477                           ;MELON PAN1_main.c: 51: TIMER1_setup(0x0100 | 0x20);
   478  0004F0  0E01               	movlw	1
   479  0004F2  6E46               	movwf	TIMER1_setup@data+1,c
   480  0004F4  0E20               	movlw	32
   481  0004F6  6E45               	movwf	TIMER1_setup@data,c
   482  0004F8  ECB3  F002         	call	_TIMER1_setup	;wreg free
   483                           
   484                           ;MELON PAN1_main.c: 52: TIMER1_set_count(25536);
   485  0004FC  0E63               	movlw	99
   486  0004FE  6E46               	movwf	TIMER1_set_count@data+1,c
   487  000500  0EC0               	movlw	192
   488  000502  6E45               	movwf	TIMER1_set_count@data,c
   489  000504  ECCC  F002         	call	_TIMER1_set_count	;wreg free
   490                           
   491                           ;MELON PAN1_main.c: 53: enable_interrupts(2);
   492  000508  0E02               	movlw	2
   493  00050A  EC2C  F000         	call	_enable_interrupts
   494  00050E                     l3456:
   495                           
   496                           ;MELON PAN1_main.c: 65: read_ds_dual_de_gozaru();
   497  00050E  ECA0  F000         	call	_read_ds_dual_de_gozaru	;wreg free
   498  000512  D7FD               	goto	l3456
   499  000514                     __end_of_main:
   500                           	opt callstack 0
   501                           
   502 ;; *************** function _spi_init *****************
   503 ;; Defined at:
   504 ;;		line 205 in file "pindef.h"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, status,2, status,0, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   522 ;;Total ram usage:        0 bytes
   523 ;; Hardware stack levels used:    1
   524 ;; Hardware stack levels required when called:    4
   525 ;; This function calls:
   526 ;;		_SPI_begin
   527 ;; This function is called by:
   528 ;;		_main
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           	psect	text1
   533  000514                     __ptext1:
   534                           	opt callstack 0
   535  000514                     _spi_init:
   536                           	opt callstack 26
   537                           
   538                           ;pindef.h: 206: SPI_begin(0x0000 | 0x01);
   539                           
   540                           ;incstack = 0
   541  000514  0E00               	movlw	0
   542  000516  6E46               	movwf	SPI_begin@data+1,c
   543  000518  0E01               	movlw	1
   544  00051A  6E45               	movwf	SPI_begin@data,c
   545  00051C  ECBB  F002         	call	_SPI_begin	;wreg free
   546                           
   547                           ;pindef.h: 207: LATAbits.LATA3=1;
   548  000520  8679               	bsf	3961,3,c	;volatile
   549                           
   550                           ;pindef.h: 208: LATAbits.LATA2=1;
   551  000522  8479               	bsf	3961,2,c	;volatile
   552                           
   553                           ;pindef.h: 209: LATAbits.LATA1=1;
   554  000524  8279               	bsf	3961,1,c	;volatile
   555                           
   556                           ;pindef.h: 210: LATAbits.LATA0=1;
   557  000526  8079               	bsf	3961,0,c	;volatile
   558                           
   559                           ;pindef.h: 211: LATHbits.LATH1=1;
   560  000528  8280               	bsf	3968,1,c	;volatile
   561                           
   562                           ;pindef.h: 212: LATHbits.LATH0=1;
   563  00052A  8080               	bsf	3968,0,c	;volatile
   564                           
   565                           ;pindef.h: 213: LATAbits.LATA5=1;
   566  00052C  8A79               	bsf	3961,5,c	;volatile
   567                           
   568                           ;pindef.h: 214: LATAbits.LATA4=1;
   569  00052E  8879               	bsf	3961,4,c	;volatile
   570                           
   571                           ;pindef.h: 215: LATGbits.LATG6=1;
   572  000530  8C7F               	bsf	3967,6,c	;volatile
   573                           
   574                           ;pindef.h: 216: LATGbits.LATG1=1;
   575  000532  827F               	bsf	3967,1,c	;volatile
   576                           
   577                           ;pindef.h: 217: LATGbits.LATG0=1;
   578  000534  807F               	bsf	3967,0,c	;volatile
   579                           
   580                           ;pindef.h: 218: LATEbits.LATE0=1;
   581  000536  807D               	bsf	3965,0,c	;volatile
   582                           
   583                           ;pindef.h: 219: LATEbits.LATE1=1;
   584  000538  827D               	bsf	3965,1,c	;volatile
   585                           
   586                           ;pindef.h: 220: LATEbits.LATE2=1;
   587  00053A  847D               	bsf	3965,2,c	;volatile
   588  00053C  0012               	return		;funcret
   589  00053E                     __end_of_spi_init:
   590                           	opt callstack 0
   591                           
   592 ;; *************** function _SPI_begin *****************
   593 ;; Defined at:
   594 ;;		line 383 in file "MELONPAN1_lib_ver1.20.h"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  data            2    4[COMRAM] unsigned int 
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, status,2, status,0
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   611 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   612 ;;Total ram usage:        2 bytes
   613 ;; Hardware stack levels used:    1
   614 ;; Hardware stack levels required when called:    3
   615 ;; This function calls:
   616 ;;		Nothing
   617 ;; This function is called by:
   618 ;;		_spi_init
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           	psect	text2
   623  000576                     __ptext2:
   624                           	opt callstack 0
   625  000576                     _SPI_begin:
   626                           	opt callstack 26
   627                           
   628                           ;MELONPAN1_lib_ver1.20.h: 384: SSP1STAT=((char)(data>>8)) | 0x00;
   629                           
   630                           ;incstack = 0
   631  000576  5046               	movf	SPI_begin@data+1,w,c
   632  000578  6E94               	movwf	3988,c	;volatile
   633                           
   634                           ;MELONPAN1_lib_ver1.20.h: 385: SSP1CON1=((char)(data & 0x00ff)) | 0x20;
   635  00057A  5045               	movf	SPI_begin@data,w,c
   636  00057C  0920               	iorlw	32
   637  00057E  6E95               	movwf	3989,c	;volatile
   638  000580  0012               	return		;funcret
   639  000582                     __end_of_SPI_begin:
   640                           	opt callstack 0
   641                           
   642 ;; *************** function _read_ds_dual_init *****************
   643 ;; Defined at:
   644 ;;		line 95 in file "ds_dual_wood.h"
   645 ;; Parameters:    Size  Location     Type
   646 ;;		None
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   662 ;;Total ram usage:        0 bytes
   663 ;; Hardware stack levels used:    1
   664 ;; Hardware stack levels required when called:    4
   665 ;; This function calls:
   666 ;;		_Serial1_begin
   667 ;;		_TIMER0_16bit_set_count
   668 ;;		_TIMER0_setup
   669 ;;		_enable_interrupts
   670 ;; This function is called by:
   671 ;;		_main
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           	psect	text3
   676  000470                     __ptext3:
   677                           	opt callstack 0
   678  000470                     _read_ds_dual_init:
   679                           	opt callstack 26
   680                           
   681                           ;ds_dual_wood.h: 97: TIMER0_setup(0x10 | 0x4000 | 0x0300);
   682                           
   683                           ;incstack = 0
   684  000470  0E43               	movlw	67
   685  000472  6E46               	movwf	TIMER0_setup@data+1,c
   686  000474  0E10               	movlw	16
   687  000476  6E45               	movwf	TIMER0_setup@data,c
   688  000478  ECC1  F002         	call	_TIMER0_setup	;wreg free
   689                           
   690                           ;ds_dual_wood.h: 98: TIMER0_16bit_set_count(25536);
   691  00047C  0E63               	movlw	99
   692  00047E  6E46               	movwf	TIMER0_16bit_set_count@data+1,c
   693  000480  0EC0               	movlw	192
   694  000482  6E45               	movwf	TIMER0_16bit_set_count@data,c
   695  000484  ECC7  F002         	call	_TIMER0_16bit_set_count	;wreg free
   696                           
   697                           ;ds_dual_wood.h: 104: Serial1_begin(57600,0x00);
   698  000488  0EE1               	movlw	225
   699  00048A  6E46               	movwf	Serial1_begin@speed+1,c
   700  00048C  0E00               	movlw	0
   701  00048E  6E45               	movwf	Serial1_begin@speed,c
   702  000490  0E00               	movlw	0
   703  000492  6E47               	movwf	Serial1_begin@data,c
   704  000494  ECC3  F001         	call	_Serial1_begin	;wreg free
   705                           
   706                           ;ds_dual_wood.h: 105: TX1STAbits.TXEN=0;
   707  000498  9A9D               	bcf	3997,5,c	;volatile
   708                           
   709                           ;ds_dual_wood.h: 107: enable_interrupts(10);
   710  00049A  0E0A               	movlw	10
   711  00049C  EC2C  F000         	call	_enable_interrupts
   712                           
   713                           ;ds_dual_wood.h: 108: enable_interrupts(1);
   714  0004A0  0E01               	movlw	1
   715  0004A2  EC2C  F000         	call	_enable_interrupts
   716                           
   717                           ;ds_dual_wood.h: 109: enable_interrupts(0);
   718  0004A6  0E00               	movlw	0
   719  0004A8  EC2C  F000         	call	_enable_interrupts
   720  0004AC  0012               	return		;funcret
   721  0004AE                     __end_of_read_ds_dual_init:
   722                           	opt callstack 0
   723                           
   724 ;; *************** function _enable_interrupts *****************
   725 ;; Defined at:
   726 ;;		line 911 in file "MELONPAN1_lib_ver1.20.h"
   727 ;; Parameters:    Size  Location     Type
   728 ;;  data            1    wreg     unsigned char 
   729 ;; Auto vars:     Size  Location     Type
   730 ;;  data            1    4[COMRAM] unsigned char 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, status,2, status,0
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   743 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   744 ;;Total ram usage:        1 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; Hardware stack levels required when called:    3
   747 ;; This function calls:
   748 ;;		Nothing
   749 ;; This function is called by:
   750 ;;		_read_ds_dual_init
   751 ;;		_main
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text4
   756  000058                     __ptext4:
   757                           	opt callstack 0
   758  000058                     _enable_interrupts:
   759                           	opt callstack 26
   760                           
   761                           ;incstack = 0
   762                           ;enable_interrupts@data stored from wreg
   763  000058  6E45               	movwf	enable_interrupts@data,c
   764                           
   765                           ;MELONPAN1_lib_ver1.20.h: 912: switch(data){
   766  00005A  D043               	goto	l2014
   767  00005C                     l743:
   768                           
   769                           ;MELONPAN1_lib_ver1.20.h: 914: INTCONbits.GIE=1;
   770  00005C  8EF2               	bsf	4082,7,c	;volatile
   771                           
   772                           ;MELONPAN1_lib_ver1.20.h: 915: break;
   773  00005E  0012               	return	
   774  000060                     l745:
   775                           
   776                           ;MELONPAN1_lib_ver1.20.h: 917: INTCONbits.PEIE=1;
   777  000060  8CF2               	bsf	4082,6,c	;volatile
   778                           
   779                           ;MELONPAN1_lib_ver1.20.h: 918: PIR0bits.TMR0IF=0;
   780  000062  010E               	movlb	14	; () banked
   781  000064  9B33               	bcf	51,5,b	;volatile
   782                           
   783                           ;MELONPAN1_lib_ver1.20.h: 919: PIE0bits.TMR0IE=1;
   784  000066  8B29               	bsf	41,5,b	;volatile
   785                           
   786                           ;MELONPAN1_lib_ver1.20.h: 920: break;
   787  000068  0012               	return	
   788  00006A                     l746:
   789                           
   790                           ;MELONPAN1_lib_ver1.20.h: 922: INTCONbits.PEIE=1;
   791  00006A  8CF2               	bsf	4082,6,c	;volatile
   792                           
   793                           ;MELONPAN1_lib_ver1.20.h: 923: PIR5bits.TMR1IF=0;
   794  00006C  010E               	movlb	14	; () banked
   795  00006E  9138               	bcf	56,0,b	;volatile
   796                           
   797                           ;MELONPAN1_lib_ver1.20.h: 924: PIE5bits.TMR1IE=1;
   798  000070  812E               	bsf	46,0,b	;volatile
   799                           
   800                           ;MELONPAN1_lib_ver1.20.h: 925: break;
   801  000072  0012               	return	
   802  000074                     l747:
   803                           
   804                           ;MELONPAN1_lib_ver1.20.h: 927: INTCONbits.PEIE=1;
   805  000074  8CF2               	bsf	4082,6,c	;volatile
   806                           
   807                           ;MELONPAN1_lib_ver1.20.h: 928: PIR5bits.TMR3IF=0;
   808  000076  010E               	movlb	14	; () banked
   809  000078  9538               	bcf	56,2,b	;volatile
   810                           
   811                           ;MELONPAN1_lib_ver1.20.h: 929: PIE5bits.TMR3IE=1;
   812  00007A  852E               	bsf	46,2,b	;volatile
   813                           
   814                           ;MELONPAN1_lib_ver1.20.h: 930: break;
   815  00007C  0012               	return	
   816  00007E                     l748:
   817                           
   818                           ;MELONPAN1_lib_ver1.20.h: 932: INTCONbits.PEIE=1;
   819  00007E  8CF2               	bsf	4082,6,c	;volatile
   820                           
   821                           ;MELONPAN1_lib_ver1.20.h: 933: PIR5bits.TMR5IF=0;
   822  000080  010E               	movlb	14	; () banked
   823  000082  9938               	bcf	56,4,b	;volatile
   824                           
   825                           ;MELONPAN1_lib_ver1.20.h: 934: PIE5bits.TMR5IE=1;
   826  000084  892E               	bsf	46,4,b	;volatile
   827                           
   828                           ;MELONPAN1_lib_ver1.20.h: 935: break;
   829  000086  0012               	return	
   830  000088                     l749:
   831                           
   832                           ;MELONPAN1_lib_ver1.20.h: 937: INTCONbits.PEIE=1;
   833  000088  8CF2               	bsf	4082,6,c	;volatile
   834                           
   835                           ;MELONPAN1_lib_ver1.20.h: 938: PIR5bits.TMR7IF=0;
   836  00008A  010E               	movlb	14	; () banked
   837  00008C  9D38               	bcf	56,6,b	;volatile
   838                           
   839                           ;MELONPAN1_lib_ver1.20.h: 939: PIE5bits.TMR7IE=1;
   840  00008E  8D2E               	bsf	46,6,b	;volatile
   841                           
   842                           ;MELONPAN1_lib_ver1.20.h: 940: break;
   843  000090  0012               	return	
   844  000092                     l750:
   845                           
   846                           ;MELONPAN1_lib_ver1.20.h: 942: INTCONbits.PEIE=1;
   847  000092  8CF2               	bsf	4082,6,c	;volatile
   848                           
   849                           ;MELONPAN1_lib_ver1.20.h: 943: PIR5bits.TMR2IF=0;
   850  000094  010E               	movlb	14	; () banked
   851  000096  9338               	bcf	56,1,b	;volatile
   852                           
   853                           ;MELONPAN1_lib_ver1.20.h: 944: PIE5bits.TMR2IE=1;
   854  000098  832E               	bsf	46,1,b	;volatile
   855                           
   856                           ;MELONPAN1_lib_ver1.20.h: 945: break;
   857  00009A  0012               	return	
   858  00009C                     l751:
   859                           
   860                           ;MELONPAN1_lib_ver1.20.h: 947: INTCONbits.PEIE=1;
   861  00009C  8CF2               	bsf	4082,6,c	;volatile
   862                           
   863                           ;MELONPAN1_lib_ver1.20.h: 948: PIR5bits.TMR4IF=0;
   864  00009E  010E               	movlb	14	; () banked
   865  0000A0  9738               	bcf	56,3,b	;volatile
   866                           
   867                           ;MELONPAN1_lib_ver1.20.h: 949: PIE5bits.TMR4IE=1;
   868  0000A2  872E               	bsf	46,3,b	;volatile
   869                           
   870                           ;MELONPAN1_lib_ver1.20.h: 950: break;
   871  0000A4  0012               	return	
   872  0000A6                     l752:
   873                           
   874                           ;MELONPAN1_lib_ver1.20.h: 952: INTCONbits.PEIE=1;
   875  0000A6  8CF2               	bsf	4082,6,c	;volatile
   876                           
   877                           ;MELONPAN1_lib_ver1.20.h: 953: PIR5bits.TMR6IF=0;
   878  0000A8  010E               	movlb	14	; () banked
   879  0000AA  9B38               	bcf	56,5,b	;volatile
   880                           
   881                           ;MELONPAN1_lib_ver1.20.h: 954: PIE5bits.TMR6IE=1;
   882  0000AC  8B2E               	bsf	46,5,b	;volatile
   883                           
   884                           ;MELONPAN1_lib_ver1.20.h: 955: break;
   885  0000AE  0012               	return	
   886  0000B0                     l753:
   887                           
   888                           ;MELONPAN1_lib_ver1.20.h: 957: INTCONbits.PEIE=1;
   889  0000B0  8CF2               	bsf	4082,6,c	;volatile
   890                           
   891                           ;MELONPAN1_lib_ver1.20.h: 958: PIR5bits.TMR8IF=0;
   892  0000B2  010E               	movlb	14	; () banked
   893  0000B4  9F38               	bcf	56,7,b	;volatile
   894                           
   895                           ;MELONPAN1_lib_ver1.20.h: 959: PIE5bits.TMR8IE=1;
   896  0000B6  8F2E               	bsf	46,7,b	;volatile
   897                           
   898                           ;MELONPAN1_lib_ver1.20.h: 960: break;
   899  0000B8  0012               	return	
   900  0000BA                     l754:
   901                           
   902                           ;MELONPAN1_lib_ver1.20.h: 962: INTCONbits.PEIE=1;
   903  0000BA  8CF2               	bsf	4082,6,c	;volatile
   904                           
   905                           ;MELONPAN1_lib_ver1.20.h: 963: PIE3bits.RC1IE=1;
   906  0000BC  010E               	movlb	14	; () banked
   907  0000BE  8B2C               	bsf	44,5,b	;volatile
   908                           
   909                           ;MELONPAN1_lib_ver1.20.h: 964: break;
   910  0000C0  0012               	return	
   911  0000C2                     l755:
   912                           
   913                           ;MELONPAN1_lib_ver1.20.h: 966: INTCONbits.PEIE=1;
   914  0000C2  8CF2               	bsf	4082,6,c	;volatile
   915                           
   916                           ;MELONPAN1_lib_ver1.20.h: 967: PIE3bits.RC2IE=1;
   917  0000C4  010E               	movlb	14	; () banked
   918  0000C6  8F2C               	bsf	44,7,b	;volatile
   919                           
   920                           ;MELONPAN1_lib_ver1.20.h: 968: break;
   921  0000C8  0012               	return	
   922  0000CA                     l756:
   923                           
   924                           ;MELONPAN1_lib_ver1.20.h: 970: INTCONbits.PEIE=1;
   925  0000CA  8CF2               	bsf	4082,6,c	;volatile
   926                           
   927                           ;MELONPAN1_lib_ver1.20.h: 971: PIE4bits.RC3IE=1;
   928  0000CC  010E               	movlb	14	; () banked
   929  0000CE  832D               	bsf	45,1,b	;volatile
   930                           
   931                           ;MELONPAN1_lib_ver1.20.h: 972: break;
   932  0000D0  0012               	return	
   933  0000D2                     l757:
   934                           
   935                           ;MELONPAN1_lib_ver1.20.h: 974: INTCONbits.PEIE=1;
   936  0000D2  8CF2               	bsf	4082,6,c	;volatile
   937                           
   938                           ;MELONPAN1_lib_ver1.20.h: 975: PIE4bits.RC4IE=1;
   939  0000D4  010E               	movlb	14	; () banked
   940  0000D6  872D               	bsf	45,3,b	;volatile
   941                           
   942                           ;MELONPAN1_lib_ver1.20.h: 976: break;
   943  0000D8  0012               	return	
   944  0000DA                     l758:
   945                           
   946                           ;MELONPAN1_lib_ver1.20.h: 978: INTCONbits.PEIE=1;
   947  0000DA  8CF2               	bsf	4082,6,c	;volatile
   948                           
   949                           ;MELONPAN1_lib_ver1.20.h: 979: PIE4bits.RC5IE=1;
   950  0000DC  010E               	movlb	14	; () banked
   951  0000DE  8B2D               	bsf	45,5,b	;volatile
   952                           
   953                           ;MELONPAN1_lib_ver1.20.h: 980: break;
   954  0000E0  0012               	return	
   955  0000E2                     l2014:
   956  0000E2  5045               	movf	enable_interrupts@data,w,c
   957                           
   958                           ; Switch size 1, requested type "simple"
   959                           ; Number of cases is 15, Range of values is 0 to 14
   960                           ; switch strategies available:
   961                           ; Name         Instructions Cycles
   962                           ; simple_byte           46    24 (average)
   963                           ;	Chosen strategy is simple_byte
   964  0000E4  0A00               	xorlw	0	; case 0
   965  0000E6  B4D8               	btfsc	status,2,c
   966  0000E8  D7B9               	goto	l743
   967  0000EA  0A01               	xorlw	1	; case 1
   968  0000EC  B4D8               	btfsc	status,2,c
   969  0000EE  D7B8               	goto	l745
   970  0000F0  0A03               	xorlw	3	; case 2
   971  0000F2  B4D8               	btfsc	status,2,c
   972  0000F4  D7BA               	goto	l746
   973  0000F6  0A01               	xorlw	1	; case 3
   974  0000F8  B4D8               	btfsc	status,2,c
   975  0000FA  D7CB               	goto	l750
   976  0000FC  0A07               	xorlw	7	; case 4
   977  0000FE  B4D8               	btfsc	status,2,c
   978  000100  D7B9               	goto	l747
   979  000102  0A01               	xorlw	1	; case 5
   980  000104  B4D8               	btfsc	status,2,c
   981  000106  D7CA               	goto	l751
   982  000108  0A03               	xorlw	3	; case 6
   983  00010A  B4D8               	btfsc	status,2,c
   984  00010C  D7B8               	goto	l748
   985  00010E  0A01               	xorlw	1	; case 7
   986  000110  B4D8               	btfsc	status,2,c
   987  000112  D7C9               	goto	l752
   988  000114  0A0F               	xorlw	15	; case 8
   989  000116  B4D8               	btfsc	status,2,c
   990  000118  D7B7               	goto	l749
   991  00011A  0A01               	xorlw	1	; case 9
   992  00011C  B4D8               	btfsc	status,2,c
   993  00011E  D7C8               	goto	l753
   994  000120  0A03               	xorlw	3	; case 10
   995  000122  B4D8               	btfsc	status,2,c
   996  000124  D7CA               	goto	l754
   997  000126  0A01               	xorlw	1	; case 11
   998  000128  B4D8               	btfsc	status,2,c
   999  00012A  D7CB               	goto	l755
  1000  00012C  0A07               	xorlw	7	; case 12
  1001  00012E  B4D8               	btfsc	status,2,c
  1002  000130  D7CC               	goto	l756
  1003  000132  0A01               	xorlw	1	; case 13
  1004  000134  B4D8               	btfsc	status,2,c
  1005  000136  D7CD               	goto	l757
  1006  000138  0A03               	xorlw	3	; case 14
  1007  00013A  A4D8               	btfss	status,2,c
  1008  00013C  0012               	return	
  1009  00013E  D7CD               	goto	l758
  1010  000140                     __end_of_enable_interrupts:
  1011                           	opt callstack 0
  1012                           
  1013 ;; *************** function _TIMER0_setup *****************
  1014 ;; Defined at:
  1015 ;;		line 708 in file "MELONPAN1_lib_ver1.20.h"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  data            2    4[COMRAM] unsigned int 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2, status,0
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1032 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1033 ;;Total ram usage:        2 bytes
  1034 ;; Hardware stack levels used:    1
  1035 ;; Hardware stack levels required when called:    3
  1036 ;; This function calls:
  1037 ;;		Nothing
  1038 ;; This function is called by:
  1039 ;;		_read_ds_dual_init
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text5
  1044  000582                     __ptext5:
  1045                           	opt callstack 0
  1046  000582                     _TIMER0_setup:
  1047                           	opt callstack 26
  1048                           
  1049                           ;MELONPAN1_lib_ver1.20.h: 709: T0CON1=(char)((data>>8) & 0xff);
  1050                           
  1051                           ;incstack = 0
  1052  000582  5046               	movf	TIMER0_setup@data+1,w,c
  1053  000584  6ED6               	movwf	4054,c	;volatile
  1054                           
  1055                           ;MELONPAN1_lib_ver1.20.h: 710: T0CON0=((char)(data & 0xff)) | 0x80;
  1056  000586  5045               	movf	TIMER0_setup@data,w,c
  1057  000588  0980               	iorlw	128
  1058  00058A  6ED5               	movwf	4053,c	;volatile
  1059  00058C  0012               	return		;funcret
  1060  00058E                     __end_of_TIMER0_setup:
  1061                           	opt callstack 0
  1062                           
  1063 ;; *************** function _TIMER0_16bit_set_count *****************
  1064 ;; Defined at:
  1065 ;;		line 721 in file "MELONPAN1_lib_ver1.20.h"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;  data            2    4[COMRAM] unsigned int 
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1083 ;;Total ram usage:        2 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; Hardware stack levels required when called:    3
  1086 ;; This function calls:
  1087 ;;		Nothing
  1088 ;; This function is called by:
  1089 ;;		_read_ds_dual_init
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text6
  1094  00058E                     __ptext6:
  1095                           	opt callstack 0
  1096  00058E                     _TIMER0_16bit_set_count:
  1097                           	opt callstack 26
  1098                           
  1099                           ;MELONPAN1_lib_ver1.20.h: 722: TMR0H=(char)(data>>8);
  1100                           
  1101                           ;incstack = 0
  1102  00058E  5046               	movf	TIMER0_16bit_set_count@data+1,w,c
  1103  000590  6ED4               	movwf	4052,c	;volatile
  1104                           
  1105                           ;MELONPAN1_lib_ver1.20.h: 723: TMR0L=(char)(data);
  1106  000592  C045  FFD3         	movff	TIMER0_16bit_set_count@data,4051	;volatile
  1107  000596  0012               	return		;funcret
  1108  000598                     __end_of_TIMER0_16bit_set_count:
  1109                           	opt callstack 0
  1110                           
  1111 ;; *************** function _Serial1_begin *****************
  1112 ;; Defined at:
  1113 ;;		line 458 in file "MELONPAN1_lib_ver1.20.h"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  speed           2    4[COMRAM] unsigned int 
  1116 ;;  data            1    6[COMRAM] unsigned char 
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, status,2, status,0
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1128 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1131 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1132 ;;Total ram usage:        3 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; Hardware stack levels required when called:    3
  1135 ;; This function calls:
  1136 ;;		Nothing
  1137 ;; This function is called by:
  1138 ;;		_read_ds_dual_init
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text7
  1143  000386                     __ptext7:
  1144                           	opt callstack 0
  1145  000386                     _Serial1_begin:
  1146                           	opt callstack 26
  1147                           
  1148                           ;MELONPAN1_lib_ver1.20.h: 459: if(speed==115200){
  1149                           
  1150                           ;incstack = 0
  1151  000386  0EE1               	movlw	225
  1152  000388  1846               	xorwf	Serial1_begin@speed+1,w,c
  1153  00038A  1045               	iorwf	Serial1_begin@speed,w,c
  1154  00038C  A4D8               	btfss	status,2,c
  1155  00038E  D004               	goto	l3340
  1156                           
  1157                           ;MELONPAN1_lib_ver1.20.h: 463: SP1BRGH=0x01;
  1158  000390  0E01               	movlw	1
  1159  000392  6E9B               	movwf	3995,c	;volatile
  1160                           
  1161                           ;MELONPAN1_lib_ver1.20.h: 464: SP1BRGL=0x15;
  1162  000394  0E15               	movlw	21
  1163  000396  D029               	goto	L4
  1164  000398                     l3340:
  1165  000398  0E4B               	movlw	75
  1166  00039A  1846               	xorwf	Serial1_begin@speed+1,w,c
  1167  00039C  1045               	iorwf	Serial1_begin@speed,w,c
  1168  00039E  A4D8               	btfss	status,2,c
  1169  0003A0  D004               	goto	l3344
  1170                           
  1171                           ;MELONPAN1_lib_ver1.20.h: 466: SP1BRGH=0x03;
  1172  0003A2  0E03               	movlw	3
  1173  0003A4  6E9B               	movwf	3995,c	;volatile
  1174                           
  1175                           ;MELONPAN1_lib_ver1.20.h: 467: SP1BRGL=0x40;
  1176  0003A6  0E40               	movlw	64
  1177  0003A8  D020               	goto	L4
  1178  0003AA                     l3344:
  1179  0003AA  0E80               	movlw	128
  1180  0003AC  1845               	xorwf	Serial1_begin@speed,w,c
  1181  0003AE  E108               	bnz	l3348
  1182  0003B0  0E25               	movlw	37
  1183  0003B2  1846               	xorwf	Serial1_begin@speed+1,w,c
  1184  0003B4  A4D8               	btfss	status,2,c
  1185  0003B6  D004               	goto	l3348
  1186                           
  1187                           ;MELONPAN1_lib_ver1.20.h: 469: SP1BRGH=0x06;
  1188  0003B8  0E06               	movlw	6
  1189  0003BA  6E9B               	movwf	3995,c	;volatile
  1190                           
  1191                           ;MELONPAN1_lib_ver1.20.h: 470: SP1BRGL=0x82;
  1192  0003BC  0E82               	movlw	130
  1193  0003BE  D015               	goto	L4
  1194  0003C0                     l3348:
  1195  0003C0  0E60               	movlw	96
  1196  0003C2  1845               	xorwf	Serial1_begin@speed,w,c
  1197  0003C4  E108               	bnz	l3352
  1198  0003C6  0E09               	movlw	9
  1199  0003C8  1846               	xorwf	Serial1_begin@speed+1,w,c
  1200  0003CA  A4D8               	btfss	status,2,c
  1201  0003CC  D004               	goto	l3352
  1202                           
  1203                           ;MELONPAN1_lib_ver1.20.h: 472: SP1BRGH=0x1A;
  1204  0003CE  0E1A               	movlw	26
  1205  0003D0  6E9B               	movwf	3995,c	;volatile
  1206                           
  1207                           ;MELONPAN1_lib_ver1.20.h: 473: SP1BRGL=0x0A;
  1208  0003D2  0E0A               	movlw	10
  1209  0003D4  D00A               	goto	L4
  1210  0003D6                     l3352:
  1211  0003D6  0EB0               	movlw	176
  1212  0003D8  1845               	xorwf	Serial1_begin@speed,w,c
  1213  0003DA  E108               	bnz	l461
  1214  0003DC  0E04               	movlw	4
  1215  0003DE  1846               	xorwf	Serial1_begin@speed+1,w,c
  1216  0003E0  A4D8               	btfss	status,2,c
  1217  0003E2  D004               	goto	l461
  1218                           
  1219                           ;MELONPAN1_lib_ver1.20.h: 475: SP1BRGH=0x34;
  1220  0003E4  0E34               	movlw	52
  1221  0003E6  6E9B               	movwf	3995,c	;volatile
  1222                           
  1223                           ;MELONPAN1_lib_ver1.20.h: 476: SP1BRGL=0x14;
  1224  0003E8  0E14               	movlw	20
  1225  0003EA                     L4:
  1226  0003EA  6E9A               	movwf	3994,c	;volatile
  1227  0003EC                     l461:
  1228                           
  1229                           ;MELONPAN1_lib_ver1.20.h: 477: };MELONPAN1_lib_ver1.20.h: 479: TX1STA=0x24;
  1230  0003EC  0E24               	movlw	36
  1231  0003EE  6E9D               	movwf	3997,c	;volatile
  1232                           
  1233                           ;MELONPAN1_lib_ver1.20.h: 480: RC1STA=0x90;
  1234  0003F0  0E90               	movlw	144
  1235  0003F2  6E9C               	movwf	3996,c	;volatile
  1236                           
  1237                           ;MELONPAN1_lib_ver1.20.h: 481: BAUD1CON=0x08 | data;
  1238  0003F4  5047               	movf	Serial1_begin@data,w,c
  1239  0003F6  0908               	iorlw	8
  1240  0003F8  6E9E               	movwf	3998,c	;volatile
  1241  0003FA  0012               	return		;funcret
  1242  0003FC                     __end_of_Serial1_begin:
  1243                           	opt callstack 0
  1244                           
  1245 ;; *************** function _read_ds_dual_de_gozaru *****************
  1246 ;; Defined at:
  1247 ;;		line 130 in file "ds_dual_wood.h"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1263 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1265 ;;Total ram usage:        1 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    5
  1268 ;; This function calls:
  1269 ;;		_BAD_de_gozaru
  1270 ;;		_GOOD_de_gozaru
  1271 ;;		_always_de_gozaru
  1272 ;; This function is called by:
  1273 ;;		_main
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           	psect	text8
  1278  000140                     __ptext8:
  1279                           	opt callstack 0
  1280  000140                     _read_ds_dual_de_gozaru:
  1281                           	opt callstack 25
  1282                           
  1283                           ;ds_dual_wood.h: 131: static char read_number;;ds_dual_wood.h: 132: static char mode=0;;
      +                          ds_dual_wood.h: 133: static char check_sum;;ds_dual_wood.h: 134: static char first_commu
      +                          nication=1;;ds_dual_wood.h: 135: if(DS_read_stop){
  1284                           
  1285                           ;incstack = 0
  1286  000140  503F               	movf	_DS_read_stop,w,c
  1287  000142  B4D8               	btfsc	status,2,c
  1288  000144  D068               	goto	l2258
  1289                           
  1290                           ;ds_dual_wood.h: 136: DS_time_out=0;
  1291  000146  0E00               	movlw	0
  1292  000148  6E4B               	movwf	_DS_time_out,c
  1293                           
  1294                           ;ds_dual_wood.h: 137: switch(mode){
  1295  00014A  D05B               	goto	l2256
  1296  00014C                     l1002:
  1297                           
  1298                           ;ds_dual_wood.h: 139: DS_data[0]=sinyounai_DS_data[0];
  1299  00014C  C00E  F001         	movff	_sinyounai_DS_data,_DS_data
  1300                           
  1301                           ;ds_dual_wood.h: 140: read_number=1;
  1302  000150  0E01               	movlw	1
  1303  000152  6E3E               	movwf	read_ds_dual_de_gozaru@read_number,c
  1304                           
  1305                           ;ds_dual_wood.h: 141: check_sum=0x0d;
  1306  000154  0E0D               	movlw	13
  1307  000156  6E3C               	movwf	read_ds_dual_de_gozaru@check_sum,c
  1308                           
  1309                           ;ds_dual_wood.h: 142: mode=1;
  1310  000158  0E01               	movlw	1
  1311  00015A  D01B               	goto	L5
  1312  00015C                     l2220:
  1313                           
  1314                           ;ds_dual_wood.h: 145: DS_data[read_number]=sinyounai_DS_data[read_number];
  1315  00015C  0E0E               	movlw	low _sinyounai_DS_data
  1316  00015E  243E               	addwf	read_ds_dual_de_gozaru@read_number,w,c
  1317  000160  6ED9               	movwf	fsr2l,c
  1318  000162  6ADA               	clrf	fsr2h,c
  1319  000164  0E00               	movlw	high _sinyounai_DS_data
  1320  000166  22DA               	addwfc	fsr2h,f,c
  1321  000168  0E01               	movlw	low _DS_data
  1322  00016A  243E               	addwf	read_ds_dual_de_gozaru@read_number,w,c
  1323  00016C  6EE1               	movwf	fsr1l,c
  1324  00016E  6AE2               	clrf	fsr1h,c
  1325  000170  0E00               	movlw	high _DS_data
  1326  000172  22E2               	addwfc	fsr1h,f,c
  1327  000174  CFDF FFE7          	movff	indf2,indf1
  1328                           
  1329                           ;ds_dual_wood.h: 146: check_sum+=DS_data[read_number];
  1330  000178  0E01               	movlw	low _DS_data
  1331  00017A  243E               	addwf	read_ds_dual_de_gozaru@read_number,w,c
  1332  00017C  6ED9               	movwf	fsr2l,c
  1333  00017E  6ADA               	clrf	fsr2h,c
  1334  000180  0E00               	movlw	high _DS_data
  1335  000182  22DA               	addwfc	fsr2h,f,c
  1336  000184  50DF               	movf	indf2,w,c
  1337  000186  263C               	addwf	read_ds_dual_de_gozaru@check_sum,f,c
  1338                           
  1339                           ;ds_dual_wood.h: 147: read_number++;
  1340  000188  2A3E               	incf	read_ds_dual_de_gozaru@read_number,f,c
  1341                           
  1342                           ;ds_dual_wood.h: 148: if(read_number>13-2){
  1343  00018A  0E0B               	movlw	11
  1344  00018C  643E               	cpfsgt	read_ds_dual_de_gozaru@read_number,c
  1345  00018E  D043               	goto	l2258
  1346                           
  1347                           ;ds_dual_wood.h: 149: mode=2;
  1348  000190  0E02               	movlw	2
  1349  000192                     L5:
  1350  000192  6E3D               	movwf	read_ds_dual_de_gozaru@mode,c
  1351  000194  D040               	goto	l2258
  1352  000196                     l2230:
  1353                           
  1354                           ;ds_dual_wood.h: 153: DS_data[read_number]=sinyounai_DS_data[read_number];
  1355  000196  0E0E               	movlw	low _sinyounai_DS_data
  1356  000198  243E               	addwf	read_ds_dual_de_gozaru@read_number,w,c
  1357  00019A  6ED9               	movwf	fsr2l,c
  1358  00019C  6ADA               	clrf	fsr2h,c
  1359  00019E  0E00               	movlw	high _sinyounai_DS_data
  1360  0001A0  22DA               	addwfc	fsr2h,f,c
  1361  0001A2  0E01               	movlw	low _DS_data
  1362  0001A4  243E               	addwf	read_ds_dual_de_gozaru@read_number,w,c
  1363  0001A6  6EE1               	movwf	fsr1l,c
  1364  0001A8  6AE2               	clrf	fsr1h,c
  1365  0001AA  0E00               	movlw	high _DS_data
  1366  0001AC  22E2               	addwfc	fsr1h,f,c
  1367  0001AE  CFDF FFE7          	movff	indf2,indf1
  1368                           
  1369                           ;ds_dual_wood.h: 154: DS_uart_number=0;
  1370  0001B2  0E00               	movlw	0
  1371  0001B4  6E40               	movwf	_DS_uart_number,c
  1372                           
  1373                           ;ds_dual_wood.h: 155: DS_read_stop=0;
  1374  0001B6  0E00               	movlw	0
  1375  0001B8  6E3F               	movwf	_DS_read_stop,c
  1376                           
  1377                           ;ds_dual_wood.h: 156: mode=0;
  1378  0001BA  0E00               	movlw	0
  1379  0001BC  6E3D               	movwf	read_ds_dual_de_gozaru@mode,c
  1380                           
  1381                           ;ds_dual_wood.h: 157: if(DS_data[read_number]==check_sum){
  1382  0001BE  0E01               	movlw	low _DS_data
  1383  0001C0  243E               	addwf	read_ds_dual_de_gozaru@read_number,w,c
  1384  0001C2  6ED9               	movwf	fsr2l,c
  1385  0001C4  6ADA               	clrf	fsr2h,c
  1386  0001C6  0E00               	movlw	high _DS_data
  1387  0001C8  22DA               	addwfc	fsr2h,f,c
  1388  0001CA  503C               	movf	read_ds_dual_de_gozaru@check_sum,w,c
  1389  0001CC  18DE               	xorwf	postinc2,w,c
  1390  0001CE  A4D8               	btfss	status,2,c
  1391  0001D0  D015               	goto	l2252
  1392                           
  1393                           ;ds_dual_wood.h: 158: push_DS_data[0]=~before_DS_data[0] & DS_data[6];
  1394  0001D2  5048               	movf	_before_DS_data,w,c
  1395  0001D4  0AFF               	xorlw	255
  1396  0001D6  1407               	andwf	_DS_data+6,w,c
  1397  0001D8  6E39               	movwf	_push_DS_data,c
  1398                           
  1399                           ;ds_dual_wood.h: 159: push_DS_data[1]=~before_DS_data[1] & DS_data[7];
  1400  0001DA  5049               	movf	_before_DS_data+1,w,c
  1401  0001DC  0AFF               	xorlw	255
  1402  0001DE  1408               	andwf	_DS_data+7,w,c
  1403  0001E0  6E3A               	movwf	_push_DS_data+1,c
  1404                           
  1405                           ;ds_dual_wood.h: 160: before_DS_data[0]=DS_data[6];
  1406  0001E2  C007  F048         	movff	_DS_data+6,_before_DS_data
  1407                           
  1408                           ;ds_dual_wood.h: 161: before_DS_data[1]=DS_data[7];
  1409  0001E6  C008  F049         	movff	_DS_data+7,_before_DS_data+1
  1410                           
  1411                           ;ds_dual_wood.h: 162: DS_communication_error_time=0;
  1412  0001EA  0E00               	movlw	0
  1413  0001EC  6E38               	movwf	_DS_communication_error_time+1,c
  1414  0001EE  0E00               	movlw	0
  1415  0001F0  6E37               	movwf	_DS_communication_error_time,c
  1416                           
  1417                           ;ds_dual_wood.h: 163: first_communication=0;
  1418  0001F2  0E00               	movlw	0
  1419  0001F4  6E4A               	movwf	read_ds_dual_de_gozaru@first_communication,c
  1420                           
  1421                           ;ds_dual_wood.h: 164: GOOD_de_gozaru();
  1422  0001F6  ECAA  F002         	call	_GOOD_de_gozaru	;wreg free
  1423                           
  1424                           ;ds_dual_wood.h: 165: }else{
  1425  0001FA  D00D               	goto	l2258
  1426  0001FC                     l2252:
  1427                           
  1428                           ;ds_dual_wood.h: 166: BAD_de_gozaru();
  1429  0001FC  ECE0  F002         	call	_BAD_de_gozaru	;wreg free
  1430  000200  D00A               	goto	l2258
  1431  000202                     l2256:
  1432  000202  503D               	movf	read_ds_dual_de_gozaru@mode,w,c
  1433                           
  1434                           ; Switch size 1, requested type "simple"
  1435                           ; Number of cases is 3, Range of values is 0 to 2
  1436                           ; switch strategies available:
  1437                           ; Name         Instructions Cycles
  1438                           ; simple_byte           10     6 (average)
  1439                           ;	Chosen strategy is simple_byte
  1440  000204  0A00               	xorlw	0	; case 0
  1441  000206  B4D8               	btfsc	status,2,c
  1442  000208  D7A1               	goto	l1002
  1443  00020A  0A01               	xorlw	1	; case 1
  1444  00020C  B4D8               	btfsc	status,2,c
  1445  00020E  D7A6               	goto	l2220
  1446  000210  0A03               	xorlw	3	; case 2
  1447  000212  B4D8               	btfsc	status,2,c
  1448  000214  D7C0               	goto	l2230
  1449  000216                     l2258:
  1450                           
  1451                           ;ds_dual_wood.h: 170: };ds_dual_wood.h: 171: if(DS_time_out>10){
  1452  000216  0E0A               	movlw	10
  1453  000218  644B               	cpfsgt	_DS_time_out,c
  1454  00021A  D002               	goto	l2262
  1455                           
  1456                           ;ds_dual_wood.h: 172: BAD_de_gozaru();
  1457  00021C  ECE0  F002         	call	_BAD_de_gozaru	;wreg free
  1458  000220                     l2262:
  1459                           
  1460                           ;ds_dual_wood.h: 173: };ds_dual_wood.h: 182: always_de_gozaru();
  1461  000220  EC9F  F002         	call	_always_de_gozaru	;wreg free
  1462  000224  0012               	return		;funcret
  1463  000226                     __end_of_read_ds_dual_de_gozaru:
  1464                           	opt callstack 0
  1465                           
  1466 ;; *************** function _always_de_gozaru *****************
  1467 ;; Defined at:
  1468 ;;		line 85 in file "MELON PAN1_main.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;		None
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;		None
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		wreg
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1484 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1485 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1486 ;;Total ram usage:        1 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    3
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_read_ds_dual_de_gozaru
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	text9
  1497  00053E                     __ptext9:
  1498                           	opt callstack 0
  1499  00053E                     _always_de_gozaru:
  1500                           	opt callstack 26
  1501                           
  1502                           ;MELON PAN1_main.c: 86: LATDbits.LATD0 = 1;
  1503                           
  1504                           ;incstack = 0
  1505  00053E  807C               	bsf	3964,0,c	;volatile
  1506                           
  1507                           ;MELON PAN1_main.c: 87: _delay((unsigned long)((5)*(64000000/4000.0)));
  1508  000540  0E68               	movlw	104
  1509  000542  6E45               	movwf	??_always_de_gozaru& (0+255),c
  1510  000544  0EE4               	movlw	228
  1511  000546                     u1467:
  1512  000546  2EE8               	decfsz	wreg,f,c
  1513  000548  D7FE               	bra	u1467
  1514  00054A  2E45               	decfsz	??_always_de_gozaru& (0+255),f,c
  1515  00054C  D7FC               	bra	u1467
  1516  00054E  D000               	nop2	
  1517                           
  1518                           ;MELON PAN1_main.c: 88: LATDbits.LATD0 = 0;
  1519  000550  907C               	bcf	3964,0,c	;volatile
  1520  000552  0012               	return		;funcret
  1521  000554                     __end_of_always_de_gozaru:
  1522                           	opt callstack 0
  1523                           
  1524 ;; *************** function _GOOD_de_gozaru *****************
  1525 ;; Defined at:
  1526 ;;		line 69 in file "MELON PAN1_main.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, status,2, status,0, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1544 ;;Total ram usage:        0 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; Hardware stack levels required when called:    4
  1547 ;; This function calls:
  1548 ;;		_output_LED5
  1549 ;; This function is called by:
  1550 ;;		_read_ds_dual_de_gozaru
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           	psect	text10
  1555  000554                     __ptext10:
  1556                           	opt callstack 0
  1557  000554                     _GOOD_de_gozaru:
  1558                           	opt callstack 25
  1559                           
  1560                           ;MELON PAN1_main.c: 72: LATDbits.LATD0=0;
  1561                           
  1562                           ;incstack = 0
  1563  000554  907C               	bcf	3964,0,c	;volatile
  1564                           
  1565                           ;MELON PAN1_main.c: 73: LATHbits.LATH2=1;
  1566  000556  8480               	bsf	3968,2,c	;volatile
  1567                           
  1568                           ;MELON PAN1_main.c: 75: if(DS_data[1]==0x00){
  1569  000558  5002               	movf	_DS_data+1,w,c
  1570  00055A  A4D8               	btfss	status,2,c
  1571  00055C  0012               	return	
  1572                           
  1573                           ;MELON PAN1_main.c: 76: output_LED5(DS_data[3]);
  1574  00055E  5004               	movf	_DS_data+3,w,c
  1575  000560  EC83  F001         	call	_output_LED5
  1576  000564  0012               	return		;funcret
  1577  000566                     __end_of_GOOD_de_gozaru:
  1578                           	opt callstack 0
  1579                           
  1580 ;; *************** function _output_LED5 *****************
  1581 ;; Defined at:
  1582 ;;		line 151 in file "pindef.h"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  num             1    wreg     unsigned char 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  num             1    4[COMRAM] unsigned char 
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		wreg, status,2, status,0
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1600 ;;Total ram usage:        1 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    3
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_GOOD_de_gozaru
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text11
  1611  000306                     __ptext11:
  1612                           	opt callstack 0
  1613  000306                     _output_LED5:
  1614                           	opt callstack 25
  1615                           
  1616                           ;incstack = 0
  1617                           ;output_LED5@num stored from wreg
  1618  000306  6E45               	movwf	output_LED5@num,c
  1619                           
  1620                           ;pindef.h: 152: switch(num){
  1621  000308  D02A               	goto	l1960
  1622  00030A                     l886:
  1623                           
  1624                           ;pindef.h: 154: LATEbits.LATE3=0;
  1625  00030A  967D               	bcf	3965,3,c	;volatile
  1626                           
  1627                           ;pindef.h: 155: LATEbits.LATE4=0;
  1628  00030C  987D               	bcf	3965,4,c	;volatile
  1629                           
  1630                           ;pindef.h: 156: LATEbits.LATE5=0;
  1631  00030E  9A7D               	bcf	3965,5,c	;volatile
  1632                           
  1633                           ;pindef.h: 157: LATEbits.LATE6=0;
  1634  000310  9C7D               	bcf	3965,6,c	;volatile
  1635                           
  1636                           ;pindef.h: 158: LATEbits.LATE7=0;
  1637  000312  9E7D               	bcf	3965,7,c	;volatile
  1638                           
  1639                           ;pindef.h: 159: break;
  1640  000314  0012               	return	
  1641  000316                     l888:
  1642                           
  1643                           ;pindef.h: 161: LATEbits.LATE3=0;
  1644  000316  967D               	bcf	3965,3,c	;volatile
  1645                           
  1646                           ;pindef.h: 162: LATEbits.LATE4=0;
  1647  000318  987D               	bcf	3965,4,c	;volatile
  1648                           
  1649                           ;pindef.h: 163: LATEbits.LATE5=0;
  1650  00031A  9A7D               	bcf	3965,5,c	;volatile
  1651                           
  1652                           ;pindef.h: 164: LATEbits.LATE6=0;
  1653  00031C  9C7D               	bcf	3965,6,c	;volatile
  1654                           
  1655                           ;pindef.h: 165: LATEbits.LATE7=1;
  1656  00031E  8E7D               	bsf	3965,7,c	;volatile
  1657                           
  1658                           ;pindef.h: 166: break;
  1659  000320  0012               	return	
  1660  000322                     l889:
  1661                           
  1662                           ;pindef.h: 168: LATEbits.LATE3=0;
  1663  000322  967D               	bcf	3965,3,c	;volatile
  1664                           
  1665                           ;pindef.h: 169: LATEbits.LATE4=0;
  1666  000324  987D               	bcf	3965,4,c	;volatile
  1667                           
  1668                           ;pindef.h: 170: LATEbits.LATE5=0;
  1669  000326  9A7D               	bcf	3965,5,c	;volatile
  1670                           
  1671                           ;pindef.h: 171: LATEbits.LATE6=1;
  1672  000328  8C7D               	bsf	3965,6,c	;volatile
  1673                           
  1674                           ;pindef.h: 172: LATEbits.LATE7=1;
  1675  00032A  8E7D               	bsf	3965,7,c	;volatile
  1676                           
  1677                           ;pindef.h: 173: break;
  1678  00032C  0012               	return	
  1679  00032E                     l890:
  1680                           
  1681                           ;pindef.h: 175: LATEbits.LATE3=0;
  1682  00032E  967D               	bcf	3965,3,c	;volatile
  1683                           
  1684                           ;pindef.h: 176: LATEbits.LATE4=0;
  1685  000330  987D               	bcf	3965,4,c	;volatile
  1686                           
  1687                           ;pindef.h: 177: LATEbits.LATE5=1;
  1688  000332  8A7D               	bsf	3965,5,c	;volatile
  1689                           
  1690                           ;pindef.h: 178: LATEbits.LATE6=1;
  1691  000334  8C7D               	bsf	3965,6,c	;volatile
  1692                           
  1693                           ;pindef.h: 179: LATEbits.LATE7=1;
  1694  000336  8E7D               	bsf	3965,7,c	;volatile
  1695                           
  1696                           ;pindef.h: 180: break;
  1697  000338  0012               	return	
  1698  00033A                     l891:
  1699                           
  1700                           ;pindef.h: 182: LATEbits.LATE3=0;
  1701  00033A  967D               	bcf	3965,3,c	;volatile
  1702                           
  1703                           ;pindef.h: 183: LATEbits.LATE4=1;
  1704  00033C  887D               	bsf	3965,4,c	;volatile
  1705                           
  1706                           ;pindef.h: 184: LATEbits.LATE5=1;
  1707  00033E  8A7D               	bsf	3965,5,c	;volatile
  1708                           
  1709                           ;pindef.h: 185: LATEbits.LATE6=1;
  1710  000340  8C7D               	bsf	3965,6,c	;volatile
  1711                           
  1712                           ;pindef.h: 186: LATEbits.LATE7=1;
  1713  000342  8E7D               	bsf	3965,7,c	;volatile
  1714                           
  1715                           ;pindef.h: 187: break;
  1716  000344  0012               	return	
  1717  000346                     l892:
  1718                           
  1719                           ;pindef.h: 189: LATEbits.LATE3=1;
  1720  000346  867D               	bsf	3965,3,c	;volatile
  1721                           
  1722                           ;pindef.h: 190: LATEbits.LATE4=1;
  1723  000348  887D               	bsf	3965,4,c	;volatile
  1724                           
  1725                           ;pindef.h: 191: LATEbits.LATE5=1;
  1726  00034A  8A7D               	bsf	3965,5,c	;volatile
  1727                           
  1728                           ;pindef.h: 192: LATEbits.LATE6=1;
  1729  00034C  8C7D               	bsf	3965,6,c	;volatile
  1730                           
  1731                           ;pindef.h: 193: LATEbits.LATE7=1;
  1732  00034E  8E7D               	bsf	3965,7,c	;volatile
  1733                           
  1734                           ;pindef.h: 194: break;
  1735  000350  0012               	return	
  1736  000352                     l893:
  1737                           
  1738                           ;pindef.h: 196: LATEbits.LATE3=0;
  1739  000352  967D               	bcf	3965,3,c	;volatile
  1740                           
  1741                           ;pindef.h: 197: LATEbits.LATE4=0;
  1742  000354  987D               	bcf	3965,4,c	;volatile
  1743                           
  1744                           ;pindef.h: 198: LATEbits.LATE5=0;
  1745  000356  9A7D               	bcf	3965,5,c	;volatile
  1746                           
  1747                           ;pindef.h: 199: LATEbits.LATE6=0;
  1748  000358  9C7D               	bcf	3965,6,c	;volatile
  1749                           
  1750                           ;pindef.h: 200: LATEbits.LATE7=0;
  1751  00035A  9E7D               	bcf	3965,7,c	;volatile
  1752                           
  1753                           ;pindef.h: 201: break;
  1754  00035C  0012               	return	
  1755  00035E                     l1960:
  1756  00035E  5045               	movf	output_LED5@num,w,c
  1757                           
  1758                           ; Switch size 1, requested type "simple"
  1759                           ; Number of cases is 6, Range of values is 0 to 5
  1760                           ; switch strategies available:
  1761                           ; Name         Instructions Cycles
  1762                           ; simple_byte           19    10 (average)
  1763                           ;	Chosen strategy is simple_byte
  1764  000360  0A00               	xorlw	0	; case 0
  1765  000362  B4D8               	btfsc	status,2,c
  1766  000364  D7D2               	goto	l886
  1767  000366  0A01               	xorlw	1	; case 1
  1768  000368  B4D8               	btfsc	status,2,c
  1769  00036A  D7D5               	goto	l888
  1770  00036C  0A03               	xorlw	3	; case 2
  1771  00036E  B4D8               	btfsc	status,2,c
  1772  000370  D7D8               	goto	l889
  1773  000372  0A01               	xorlw	1	; case 3
  1774  000374  B4D8               	btfsc	status,2,c
  1775  000376  D7DB               	goto	l890
  1776  000378  0A07               	xorlw	7	; case 4
  1777  00037A  B4D8               	btfsc	status,2,c
  1778  00037C  D7DE               	goto	l891
  1779  00037E  0A01               	xorlw	1	; case 5
  1780  000380  B4D8               	btfsc	status,2,c
  1781  000382  D7E1               	goto	l892
  1782  000384  D7E6               	goto	l893
  1783  000386                     __end_of_output_LED5:
  1784                           	opt callstack 0
  1785                           
  1786 ;; *************** function _BAD_de_gozaru *****************
  1787 ;; Defined at:
  1788 ;;		line 80 in file "MELON PAN1_main.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;		None
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;		None
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		None
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1806 ;;Total ram usage:        0 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    3
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_read_ds_dual_de_gozaru
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text12
  1817  0005C0                     __ptext12:
  1818                           	opt callstack 0
  1819  0005C0                     _BAD_de_gozaru:
  1820                           	opt callstack 26
  1821                           
  1822                           ;MELON PAN1_main.c: 81: LATHbits.LATH2=0;
  1823                           
  1824                           ;incstack = 0
  1825  0005C0  9480               	bcf	3968,2,c	;volatile
  1826                           
  1827                           ;MELON PAN1_main.c: 82: LATDbits.LATD0=1;
  1828  0005C2  807C               	bsf	3964,0,c	;volatile
  1829  0005C4  0012               	return		;funcret
  1830  0005C6                     __end_of_BAD_de_gozaru:
  1831                           	opt callstack 0
  1832                           
  1833 ;; *************** function _pin_init *****************
  1834 ;; Defined at:
  1835 ;;		line 75 in file "pindef.h"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;		None
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;		None
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      void 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1853 ;;Total ram usage:        0 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:    3
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text13
  1864  000226                     __ptext13:
  1865                           	opt callstack 0
  1866  000226                     _pin_init:
  1867                           	opt callstack 27
  1868                           
  1869                           ;pindef.h: 77: LATA = 0x00;
  1870                           
  1871                           ;incstack = 0
  1872  000226  0E00               	movlw	0
  1873  000228  6E79               	movwf	3961,c	;volatile
  1874                           
  1875                           ;pindef.h: 78: LATB = 0x00;
  1876  00022A  0E00               	movlw	0
  1877  00022C  6E7A               	movwf	3962,c	;volatile
  1878                           
  1879                           ;pindef.h: 79: LATC = 0x00;
  1880  00022E  0E00               	movlw	0
  1881  000230  6E7B               	movwf	3963,c	;volatile
  1882                           
  1883                           ;pindef.h: 80: LATD = 0x50;
  1884  000232  0E50               	movlw	80
  1885  000234  6E7C               	movwf	3964,c	;volatile
  1886                           
  1887                           ;pindef.h: 81: LATE = 0x00;
  1888  000236  0E00               	movlw	0
  1889  000238  6E7D               	movwf	3965,c	;volatile
  1890                           
  1891                           ;pindef.h: 82: LATF = 0x00;
  1892  00023A  0E00               	movlw	0
  1893  00023C  6E7E               	movwf	3966,c	;volatile
  1894                           
  1895                           ;pindef.h: 83: LATG = 0x00;
  1896  00023E  0E00               	movlw	0
  1897  000240  6E7F               	movwf	3967,c	;volatile
  1898                           
  1899                           ;pindef.h: 84: LATH = 0x00;
  1900  000242  0E00               	movlw	0
  1901  000244  6E80               	movwf	3968,c	;volatile
  1902                           
  1903                           ;pindef.h: 87: TRISA = 0b11000000;
  1904  000246  0EC0               	movlw	192
  1905  000248  6E81               	movwf	3969,c	;volatile
  1906                           
  1907                           ;pindef.h: 88: TRISB = 0b11111111;
  1908  00024A  6882               	setf	3970,c	;volatile
  1909                           
  1910                           ;pindef.h: 89: TRISC = 0b10111110;
  1911  00024C  0EBE               	movlw	190
  1912  00024E  6E83               	movwf	3971,c	;volatile
  1913                           
  1914                           ;pindef.h: 90: TRISD = 0b10101000;
  1915  000250  0EA8               	movlw	168
  1916  000252  6E84               	movwf	3972,c	;volatile
  1917                           
  1918                           ;pindef.h: 91: TRISE = 0b00000000;
  1919  000254  0E00               	movlw	0
  1920  000256  6E85               	movwf	3973,c	;volatile
  1921                           
  1922                           ;pindef.h: 92: TRISF = 0b11111111;
  1923  000258  6886               	setf	3974,c	;volatile
  1924                           
  1925                           ;pindef.h: 93: TRISG = 0b10111100;
  1926  00025A  0EBC               	movlw	188
  1927  00025C  6E87               	movwf	3975,c	;volatile
  1928                           
  1929                           ;pindef.h: 94: TRISH = 0b11110000;
  1930  00025E  0EF0               	movlw	240
  1931  000260  6E88               	movwf	3976,c	;volatile
  1932                           
  1933                           ;pindef.h: 106: ANSELA = 0x00;
  1934  000262  0E00               	movlw	0
  1935  000264  010E               	movlb	14	; () banked
  1936  000266  6F92               	movwf	146,b	;volatile
  1937                           
  1938                           ;pindef.h: 107: ANSELB = 0x00;
  1939  000268  0E00               	movlw	0
  1940  00026A  6F9A               	movwf	154,b	;volatile
  1941                           
  1942                           ;pindef.h: 108: ANSELD = 0x00;
  1943  00026C  0E00               	movlw	0
  1944  00026E  6FA7               	movwf	167,b	;volatile
  1945                           
  1946                           ;pindef.h: 109: ANSELE = 0x00;
  1947  000270  0E00               	movlw	0
  1948  000272  6FAF               	movwf	175,b	;volatile
  1949                           
  1950                           ;pindef.h: 110: ANSELF = 0x00;
  1951  000274  0E00               	movlw	0
  1952  000276  6FB4               	movwf	180,b	;volatile
  1953                           
  1954                           ;pindef.h: 111: ANSELG = 0x00;
  1955  000278  0E00               	movlw	0
  1956  00027A  6FBC               	movwf	188,b	;volatile
  1957                           
  1958                           ;pindef.h: 114: WPUA = 0x00;
  1959  00027C  0E00               	movlw	0
  1960  00027E  6F91               	movwf	145,b	;volatile
  1961                           
  1962                           ;pindef.h: 115: WPUB = 0x00;
  1963  000280  0E00               	movlw	0
  1964  000282  6F99               	movwf	153,b	;volatile
  1965                           
  1966                           ;pindef.h: 116: WPUC = 0x00;
  1967  000284  0E00               	movlw	0
  1968  000286  6FA1               	movwf	161,b	;volatile
  1969                           
  1970                           ;pindef.h: 117: WPUD = 0x00;
  1971  000288  0E00               	movlw	0
  1972  00028A  6FA6               	movwf	166,b	;volatile
  1973                           
  1974                           ;pindef.h: 118: WPUE = 0x00;
  1975  00028C  0E00               	movlw	0
  1976  00028E  6FAE               	movwf	174,b	;volatile
  1977                           
  1978                           ;pindef.h: 119: WPUF = 0x00;
  1979  000290  0E00               	movlw	0
  1980  000292  6FB3               	movwf	179,b	;volatile
  1981                           
  1982                           ;pindef.h: 120: WPUG = 0x00;
  1983  000294  0E00               	movlw	0
  1984  000296  6FBB               	movwf	187,b	;volatile
  1985                           
  1986                           ;pindef.h: 121: WPUH = 0x00;
  1987  000298  0E00               	movlw	0
  1988  00029A  6FC0               	movwf	192,b	;volatile
  1989                           
  1990                           ;pindef.h: 124: ODCONA = 0x00;
  1991  00029C  0E00               	movlw	0
  1992  00029E  6F90               	movwf	144,b	;volatile
  1993                           
  1994                           ;pindef.h: 125: ODCONB = 0x00;
  1995  0002A0  0E00               	movlw	0
  1996  0002A2  6F98               	movwf	152,b	;volatile
  1997                           
  1998                           ;pindef.h: 126: ODCONC = 0x00;
  1999  0002A4  0E00               	movlw	0
  2000  0002A6  6FA0               	movwf	160,b	;volatile
  2001                           
  2002                           ;pindef.h: 127: ODCOND = 0x00;
  2003  0002A8  0E00               	movlw	0
  2004  0002AA  6FA5               	movwf	165,b	;volatile
  2005                           
  2006                           ;pindef.h: 128: ODCONE = 0x00;
  2007  0002AC  0E00               	movlw	0
  2008  0002AE  6FAD               	movwf	173,b	;volatile
  2009                           
  2010                           ;pindef.h: 129: ODCONF = 0x00;
  2011  0002B0  0E00               	movlw	0
  2012  0002B2  6FB2               	movwf	178,b	;volatile
  2013                           
  2014                           ;pindef.h: 130: ODCONG = 0x00;
  2015  0002B4  0E00               	movlw	0
  2016  0002B6  6FBA               	movwf	186,b	;volatile
  2017                           
  2018                           ;pindef.h: 131: ODCONH = 0x00;
  2019  0002B8  0E00               	movlw	0
  2020  0002BA  6FBF               	movwf	191,b	;volatile
  2021                           
  2022                           ;pindef.h: 134: RC0PPS = 0x1A;
  2023  0002BC  0E1A               	movlw	26
  2024  0002BE  6F62               	movwf	98,b	;volatile
  2025                           
  2026                           ;pindef.h: 135: SSP1DATPPSbits.SSP1DATPPS = 0x11;
  2027  0002C0  511A               	movf	26,w,b	;volatile
  2028  0002C2  0BC0               	andlw	-64
  2029  0002C4  0911               	iorlw	17
  2030  0002C6  6F1A               	movwf	26,b	;volatile
  2031                           
  2032                           ;pindef.h: 136: SSP1CLKPPSbits.SSP1CLKPPS = 0x16;
  2033  0002C8  5119               	movf	25,w,b	;volatile
  2034  0002CA  0BC0               	andlw	-64
  2035  0002CC  0916               	iorlw	22
  2036  0002CE  6F19               	movwf	25,b	;volatile
  2037                           
  2038                           ;pindef.h: 137: RC6PPS = 0x19;
  2039  0002D0  0E19               	movlw	25
  2040  0002D2  6F68               	movwf	104,b	;volatile
  2041                           
  2042                           ;pindef.h: 139: RB0PPS = 0x1C;
  2043  0002D4  0E1C               	movlw	28
  2044  0002D6  6F5A               	movwf	90,b	;volatile
  2045                           
  2046                           ;pindef.h: 140: RB1PPS = 0x1B;
  2047  0002D8  0E1B               	movlw	27
  2048  0002DA  6F5B               	movwf	91,b	;volatile
  2049                           
  2050                           ;pindef.h: 141: SSP2DATPPSbits.SSP2DATPPS = 0x08;
  2051  0002DC  511D               	movf	29,w,b	;volatile
  2052  0002DE  0BC0               	andlw	-64
  2053  0002E0  0908               	iorlw	8
  2054  0002E2  6F1D               	movwf	29,b	;volatile
  2055                           
  2056                           ;pindef.h: 142: SSP2CLKPPSbits.SSP2CLKPPS = 0x09;
  2057  0002E4  511C               	movf	28,w,b	;volatile
  2058  0002E6  0BC0               	andlw	-64
  2059  0002E8  0909               	iorlw	9
  2060  0002EA  6F1C               	movwf	28,b	;volatile
  2061                           
  2062                           ;pindef.h: 144: RX1PPSbits.RX1PPS = 0x1B;
  2063  0002EC  510F               	movf	15,w,b	;volatile
  2064  0002EE  0BC0               	andlw	-64
  2065  0002F0  091B               	iorlw	27
  2066  0002F2  6F0F               	movwf	15,b	;volatile
  2067                           
  2068                           ;pindef.h: 145: RD4PPS = 0x0C;
  2069  0002F4  0E0C               	movlw	12
  2070  0002F6  6F6E               	movwf	110,b	;volatile
  2071                           
  2072                           ;pindef.h: 147: RX2PPSbits.RX2PPS = 0x1D;
  2073  0002F8  5111               	movf	17,w,b	;volatile
  2074  0002FA  0BC0               	andlw	-64
  2075  0002FC  091D               	iorlw	29
  2076  0002FE  6F11               	movwf	17,b	;volatile
  2077                           
  2078                           ;pindef.h: 148: RD6PPS = 0x0E;
  2079  000300  0E0E               	movlw	14
  2080  000302  6F70               	movwf	112,b	;volatile
  2081                           
  2082                           ; BSR set to: 14
  2083  000304  0012               	return		;funcret
  2084  000306                     __end_of_pin_init:
  2085                           	opt callstack 0
  2086                           
  2087 ;; *************** function _TIMER1_setup *****************
  2088 ;; Defined at:
  2089 ;;		line 735 in file "MELONPAN1_lib_ver1.20.h"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  data            2    4[COMRAM] unsigned int 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2, status,0
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2107 ;;Total ram usage:        2 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    3
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text14
  2118  000566                     __ptext14:
  2119                           	opt callstack 0
  2120  000566                     _TIMER1_setup:
  2121                           	opt callstack 27
  2122                           
  2123                           ;MELONPAN1_lib_ver1.20.h: 736: T1GCON=0;
  2124                           
  2125                           ; BSR set to: 14
  2126                           ;incstack = 0
  2127  000566  0E00               	movlw	0
  2128  000568  6ED0               	movwf	4048,c	;volatile
  2129                           
  2130                           ;MELONPAN1_lib_ver1.20.h: 737: TMR1CLK=(char)((data>>8) & 0xff);
  2131  00056A  5046               	movf	TIMER1_setup@data+1,w,c
  2132  00056C  6ED2               	movwf	4050,c	;volatile
  2133                           
  2134                           ;MELONPAN1_lib_ver1.20.h: 738: T1CON=((char)(data & 0xff)) | 0x03;
  2135  00056E  5045               	movf	TIMER1_setup@data,w,c
  2136  000570  0903               	iorlw	3
  2137  000572  6ECF               	movwf	4047,c	;volatile
  2138  000574  0012               	return		;funcret
  2139  000576                     __end_of_TIMER1_setup:
  2140                           	opt callstack 0
  2141                           
  2142 ;; *************** function _TIMER1_set_count *****************
  2143 ;; Defined at:
  2144 ;;		line 745 in file "MELONPAN1_lib_ver1.20.h"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  data            2    4[COMRAM] unsigned int 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;		None
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2162 ;;Total ram usage:        2 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    3
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_main
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text15
  2173  000598                     __ptext15:
  2174                           	opt callstack 0
  2175  000598                     _TIMER1_set_count:
  2176                           	opt callstack 27
  2177                           
  2178                           ;MELONPAN1_lib_ver1.20.h: 746: TMR1H=(char)(data>>8);
  2179                           
  2180                           ;incstack = 0
  2181  000598  5046               	movf	TIMER1_set_count@data+1,w,c
  2182  00059A  6ECE               	movwf	4046,c	;volatile
  2183                           
  2184                           ;MELONPAN1_lib_ver1.20.h: 747: TMR1L=(char)(data);
  2185  00059C  C045  FFCD         	movff	TIMER1_set_count@data,4045	;volatile
  2186  0005A0  0012               	return		;funcret
  2187  0005A2                     __end_of_TIMER1_set_count:
  2188                           	opt callstack 0
  2189                           
  2190 ;; *************** function _wood_isr *****************
  2191 ;; Defined at:
  2192 ;;		line 16 in file "MELON PAN1_main.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2208 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2209 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2210 ;;Total ram usage:        2 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    2
  2213 ;; This function calls:
  2214 ;;		_read_ds_dual_byte
  2215 ;;		i2_TIMER0_16bit_set_count
  2216 ;;		i2_TIMER1_set_count
  2217 ;; This function is called by:
  2218 ;;		Interrupt level 2
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           	psect	intcode
  2223  000008                     __pintcode:
  2224                           	opt callstack 0
  2225  000008                     _wood_isr:
  2226                           	opt callstack 25
  2227                           
  2228                           ;incstack = 0
  2229  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2230  00000A  CFD9 F043          	movff	fsr2l,??_wood_isr
  2231  00000E  CFDA F044          	movff	fsr2h,??_wood_isr+1
  2232                           
  2233                           ;MELON PAN1_main.c: 17: if(PIR3bits.RC1IF){
  2234  000012  010E               	movlb	14	; () banked
  2235  000014  BB36               	btfsc	54,5,b	;volatile
  2236                           
  2237                           ; BSR set to: 14
  2238                           ;MELON PAN1_main.c: 19: read_ds_dual_byte();
  2239  000016  ECFE  F001         	call	_read_ds_dual_byte	;wreg free
  2240                           
  2241                           ;MELON PAN1_main.c: 20: };MELON PAN1_main.c: 21: if(PIR0bits.TMR0IF){
  2242  00001A  010E               	movlb	14	; () banked
  2243  00001C  AB33               	btfss	51,5,b	;volatile
  2244  00001E  D00A               	goto	i2l3440
  2245                           
  2246                           ; BSR set to: 14
  2247                           ;MELON PAN1_main.c: 22: PIR0bits.TMR0IF=0;
  2248  000020  9B33               	bcf	51,5,b	;volatile
  2249                           
  2250                           ; BSR set to: 14
  2251                           ;MELON PAN1_main.c: 24: TIMER0_16bit_set_count(25536);
  2252  000022  0E63               	movlw	99
  2253  000024  6E42               	movwf	i2TIMER0_16bit_set_count@data+1,c
  2254  000026  0EC0               	movlw	192
  2255  000028  6E41               	movwf	i2TIMER0_16bit_set_count@data,c
  2256  00002A  ECD6  F002         	call	i2_TIMER0_16bit_set_count	;wreg free
  2257                           
  2258                           ;MELON PAN1_main.c: 26: DS_time_out++;
  2259  00002E  2A4B               	incf	_DS_time_out,f,c
  2260                           
  2261                           ;MELON PAN1_main.c: 27: DS_communication_error_time++;
  2262  000030  4A37               	infsnz	_DS_communication_error_time,f,c
  2263  000032  2A38               	incf	_DS_communication_error_time+1,f,c
  2264  000034                     i2l3440:
  2265                           
  2266                           ;MELON PAN1_main.c: 28: };MELON PAN1_main.c: 29: if(PIR5bits.TMR1IF){
  2267  000034  010E               	movlb	14	; () banked
  2268  000036  A138               	btfss	56,0,b	;volatile
  2269  000038  D007               	goto	i2l1156
  2270                           
  2271                           ; BSR set to: 14
  2272                           ;MELON PAN1_main.c: 30: PIR5bits.TMR1IF=0;
  2273  00003A  9138               	bcf	56,0,b	;volatile
  2274                           
  2275                           ; BSR set to: 14
  2276                           ;MELON PAN1_main.c: 32: TIMER1_set_count(25536);
  2277  00003C  0E63               	movlw	99
  2278  00003E  6E42               	movwf	i2TIMER1_set_count@data+1,c
  2279  000040  0EC0               	movlw	192
  2280  000042  6E41               	movwf	i2TIMER1_set_count@data,c
  2281  000044  ECD1  F002         	call	i2_TIMER1_set_count	;wreg free
  2282  000048                     i2l1156:
  2283  000048  C044  FFDA         	movff	??_wood_isr+1,fsr2h
  2284  00004C  C043  FFD9         	movff	??_wood_isr,fsr2l
  2285  000050  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2286  000052  0011               	retfie		f
  2287  000054                     __end_of_wood_isr:
  2288                           	opt callstack 0
  2289                           
  2290 ;; *************** function i2_TIMER1_set_count *****************
  2291 ;; Defined at:
  2292 ;;		line 745 in file "MELONPAN1_lib_ver1.20.h"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  data            2    0[COMRAM] unsigned int 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2309 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2310 ;;Total ram usage:        2 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; This function calls:
  2313 ;;		Nothing
  2314 ;; This function is called by:
  2315 ;;		_wood_isr
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           	psect	text17
  2320  0005A2                     __ptext17:
  2321                           	opt callstack 0
  2322  0005A2                     i2_TIMER1_set_count:
  2323                           	opt callstack 26
  2324                           
  2325                           ;MELONPAN1_lib_ver1.20.h: 746: TMR1H=(char)(data>>8);
  2326                           
  2327                           ;incstack = 0
  2328  0005A2  5042               	movf	i2TIMER1_set_count@data+1,w,c
  2329  0005A4  6ECE               	movwf	4046,c	;volatile
  2330                           
  2331                           ;MELONPAN1_lib_ver1.20.h: 747: TMR1L=(char)(data);
  2332  0005A6  C041  FFCD         	movff	i2TIMER1_set_count@data,4045	;volatile
  2333  0005AA  0012               	return		;funcret
  2334  0005AC                     __end_ofi2_TIMER1_set_count:
  2335                           	opt callstack 0
  2336                           
  2337 ;; *************** function i2_TIMER0_16bit_set_count *****************
  2338 ;; Defined at:
  2339 ;;		line 721 in file "MELONPAN1_lib_ver1.20.h"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  data            2    0[COMRAM] unsigned int 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;		None
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg, status,2
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2357 ;;Total ram usage:        2 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; This function calls:
  2360 ;;		Nothing
  2361 ;; This function is called by:
  2362 ;;		_wood_isr
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text18
  2367  0005AC                     __ptext18:
  2368                           	opt callstack 0
  2369  0005AC                     i2_TIMER0_16bit_set_count:
  2370                           	opt callstack 26
  2371                           
  2372                           ;MELONPAN1_lib_ver1.20.h: 722: TMR0H=(char)(data>>8);
  2373                           
  2374                           ;incstack = 0
  2375  0005AC  5042               	movf	i2TIMER0_16bit_set_count@data+1,w,c
  2376  0005AE  6ED4               	movwf	4052,c	;volatile
  2377                           
  2378                           ;MELONPAN1_lib_ver1.20.h: 723: TMR0L=(char)(data);
  2379  0005B0  C041  FFD3         	movff	i2TIMER0_16bit_set_count@data,4051	;volatile
  2380  0005B4  0012               	return		;funcret
  2381  0005B6                     __end_ofi2_TIMER0_16bit_set_count:
  2382                           	opt callstack 0
  2383                           
  2384 ;; *************** function _read_ds_dual_byte *****************
  2385 ;; Defined at:
  2386 ;;		line 112 in file "ds_dual_wood.h"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2402 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2404 ;;Total ram usage:        1 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    1
  2407 ;; This function calls:
  2408 ;;		_Serial1_read
  2409 ;; This function is called by:
  2410 ;;		_wood_isr
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text19
  2415  0003FC                     __ptext19:
  2416                           	opt callstack 0
  2417  0003FC                     _read_ds_dual_byte:
  2418                           	opt callstack 25
  2419                           
  2420                           ;ds_dual_wood.h: 113: if(DS_read_stop==0){
  2421                           
  2422                           ;incstack = 0
  2423  0003FC  503F               	movf	_DS_read_stop,w,c
  2424  0003FE  A4D8               	btfss	status,2,c
  2425  000400  D034               	goto	i2l2212
  2426                           
  2427                           ;ds_dual_wood.h: 114: sinyounai_DS_data[DS_uart_number]=Serial1_read();
  2428  000402  0E0E               	movlw	low _sinyounai_DS_data
  2429  000404  2440               	addwf	_DS_uart_number,w,c
  2430  000406  6ED9               	movwf	fsr2l,c
  2431  000408  6ADA               	clrf	fsr2h,c
  2432  00040A  0E00               	movlw	high _sinyounai_DS_data
  2433  00040C  22DA               	addwfc	fsr2h,f,c
  2434  00040E  ECDB  F002         	call	_Serial1_read	;wreg free
  2435  000412  6EDF               	movwf	indf2,c
  2436                           
  2437                           ;ds_dual_wood.h: 115: if(DS_uart_number==1 && sinyounai_DS_data[DS_uart_number]==0x0D){
  2438  000414  0440               	decf	_DS_uart_number,w,c
  2439  000416  A4D8               	btfss	status,2,c
  2440  000418  D00D               	goto	i2l2194
  2441  00041A  0E0E               	movlw	low _sinyounai_DS_data
  2442  00041C  2440               	addwf	_DS_uart_number,w,c
  2443  00041E  6ED9               	movwf	fsr2l,c
  2444  000420  6ADA               	clrf	fsr2h,c
  2445  000422  0E00               	movlw	high _sinyounai_DS_data
  2446  000424  22DA               	addwfc	fsr2h,f,c
  2447  000426  0E0D               	movlw	13
  2448  000428  18DE               	xorwf	postinc2,w,c
  2449  00042A  A4D8               	btfss	status,2,c
  2450  00042C  D003               	goto	i2l2194
  2451                           
  2452                           ;ds_dual_wood.h: 116: DS_uart_number=1;
  2453  00042E  0E01               	movlw	1
  2454  000430  6E40               	movwf	_DS_uart_number,c
  2455                           
  2456                           ;ds_dual_wood.h: 117: }else if((DS_uart_number==0 && sinyounai_DS_data[0]!=0x0D)||(DS_ua
      +                          rt_number==1 && sinyounai_DS_data[1]!=0x00 && sinyounai_DS_data[1]!=0xCB)){
  2457  000432  0012               	return	
  2458  000434                     i2l2194:
  2459  000434  5040               	movf	_DS_uart_number,w,c
  2460  000436  A4D8               	btfss	status,2,c
  2461  000438  D004               	goto	i2u39_40
  2462  00043A  0E0D               	movlw	13
  2463  00043C  180E               	xorwf	_sinyounai_DS_data,w,c
  2464  00043E  A4D8               	btfss	status,2,c
  2465  000440  D00A               	goto	i2u42_40
  2466  000442                     i2u39_40:
  2467  000442  0440               	decf	_DS_uart_number,w,c
  2468  000444  A4D8               	btfss	status,2,c
  2469  000446  D00A               	goto	i2l2206
  2470  000448  500F               	movf	_sinyounai_DS_data+1,w,c
  2471  00044A  B4D8               	btfsc	status,2,c
  2472  00044C  D007               	goto	i2l2206
  2473  00044E  0ECB               	movlw	203
  2474  000450  180F               	xorwf	_sinyounai_DS_data+1,w,c
  2475  000452  B4D8               	btfsc	status,2,c
  2476  000454  D003               	goto	i2l2206
  2477  000456                     i2u42_40:
  2478                           
  2479                           ;ds_dual_wood.h: 118: DS_uart_number=0;
  2480  000456  0E00               	movlw	0
  2481  000458  6E40               	movwf	_DS_uart_number,c
  2482                           
  2483                           ;ds_dual_wood.h: 119: }else{
  2484  00045A  0012               	return	
  2485  00045C                     i2l2206:
  2486                           
  2487                           ;ds_dual_wood.h: 120: DS_uart_number++;
  2488  00045C  2A40               	incf	_DS_uart_number,f,c
  2489                           
  2490                           ;ds_dual_wood.h: 121: if(DS_uart_number>(13-1)){
  2491  00045E  0E0C               	movlw	12
  2492  000460  6440               	cpfsgt	_DS_uart_number,c
  2493  000462  0012               	return	
  2494                           
  2495                           ;ds_dual_wood.h: 122: DS_read_stop=1;
  2496  000464  0E01               	movlw	1
  2497  000466  6E3F               	movwf	_DS_read_stop,c
  2498                           
  2499                           ;ds_dual_wood.h: 123: };ds_dual_wood.h: 124: };ds_dual_wood.h: 125: }else{
  2500  000468  0012               	return	
  2501  00046A                     i2l2212:
  2502                           
  2503                           ;ds_dual_wood.h: 126: Serial1_read();
  2504  00046A  ECDB  F002         	call	_Serial1_read	;wreg free
  2505  00046E  0012               	return		;funcret
  2506  000470                     __end_of_read_ds_dual_byte:
  2507                           	opt callstack 0
  2508                           
  2509 ;; *************** function _Serial1_read *****************
  2510 ;; Defined at:
  2511 ;;		line 490 in file "MELONPAN1_lib_ver1.20.h"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      unsigned char 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2529 ;;Total ram usage:        0 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_read_ds_dual_byte
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text20
  2539  0005B6                     __ptext20:
  2540                           	opt callstack 0
  2541  0005B6                     _Serial1_read:
  2542                           	opt callstack 25
  2543                           
  2544                           ;MELONPAN1_lib_ver1.20.h: 491: while(!PIR3bits.RC1IF);
  2545                           
  2546                           ;incstack = 0
  2547  0005B6  010E               	movlb	14	; () banked
  2548  0005B8  AB36               	btfss	54,5,b	;volatile
  2549  0005BA  D7FD               	goto	_Serial1_read
  2550                           
  2551                           ; BSR set to: 14
  2552                           ;MELONPAN1_lib_ver1.20.h: 492: return RC1REG;
  2553  0005BC  5098               	movf	3992,w,c	;volatile
  2554                           
  2555                           ; BSR set to: 14
  2556  0005BE  0012               	return		;funcret
  2557  0005C0                     __end_of_Serial1_read:
  2558                           	opt callstack 0
  2559  0000                     
  2560                           	psect	rparam
  2561  0000                     
  2562                           	psect	temp
  2563  00004C                     btemp:
  2564                           	opt callstack 0
  2565  00004C                     	ds	1
  2566  0000                     int$flags	set	btemp
  2567  0000                     wtemp8	set	btemp+1
  2568  0000                     ttemp5	set	btemp+1
  2569  0000                     ttemp6	set	btemp+4
  2570  0000                     ttemp7	set	btemp+8
  2571                           tosu	equ	0xFFF
  2572                           tosh	equ	0xFFE
  2573                           tosl	equ	0xFFD
  2574                           stkptr	equ	0xFFC
  2575                           pclatu	equ	0xFFB
  2576                           pclath	equ	0xFFA
  2577                           pcl	equ	0xFF9
  2578                           tblptru	equ	0xFF8
  2579                           tblptrh	equ	0xFF7
  2580                           tblptrl	equ	0xFF6
  2581                           tablat	equ	0xFF5
  2582                           prodh	equ	0xFF4
  2583                           prodl	equ	0xFF3
  2584                           indf0	equ	0xFEF
  2585                           postinc0	equ	0xFEE
  2586                           postdec0	equ	0xFED
  2587                           preinc0	equ	0xFEC
  2588                           plusw0	equ	0xFEB
  2589                           fsr0h	equ	0xFEA
  2590                           fsr0l	equ	0xFE9
  2591                           wreg	equ	0xFE8
  2592                           indf1	equ	0xFE7
  2593                           postinc1	equ	0xFE6
  2594                           postdec1	equ	0xFE5
  2595                           preinc1	equ	0xFE4
  2596                           plusw1	equ	0xFE3
  2597                           fsr1h	equ	0xFE2
  2598                           fsr1l	equ	0xFE1
  2599                           bsr	equ	0xFE0
  2600                           indf2	equ	0xFDF
  2601                           postinc2	equ	0xFDE
  2602                           postdec2	equ	0xFDD
  2603                           preinc2	equ	0xFDC
  2604                           plusw2	equ	0xFDB
  2605                           fsr2h	equ	0xFDA
  2606                           fsr2l	equ	0xFD9
  2607                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      7      75
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _spi_init->_SPI_begin
    _read_ds_dual_init->_Serial1_begin
    _read_ds_dual_de_gozaru->_always_de_gozaru
    _GOOD_de_gozaru->_output_LED5

Critical Paths under _wood_isr in COMRAM

    _wood_isr->i2_TIMER0_16bit_set_count
    _wood_isr->i2_TIMER1_set_count

Critical Paths under _main in BANK0

    None.

Critical Paths under _wood_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _wood_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _wood_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _wood_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _wood_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _wood_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _wood_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _wood_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _wood_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _wood_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _wood_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _wood_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _wood_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _wood_isr in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1029
                   _TIMER1_set_count
                       _TIMER1_setup
                  _enable_interrupts
                           _pin_init
             _read_ds_dual_de_gozaru
                  _read_ds_dual_init
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0     120
                          _SPI_begin
 ---------------------------------------------------------------------------------
 (2) _SPI_begin                                            2     0      2     120
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _read_ds_dual_init                                    0     0      0     589
                      _Serial1_begin
             _TIMER0_16bit_set_count
                       _TIMER0_setup
                  _enable_interrupts
 ---------------------------------------------------------------------------------
 (2) _enable_interrupts                                    1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TIMER0_setup                                         2     0      2     120
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TIMER0_16bit_set_count                               2     0      2     170
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Serial1_begin                                        3     0      3     284
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _read_ds_dual_de_gozaru                               1     1      0      15
                                              5 COMRAM     1     1      0
                      _BAD_de_gozaru
                     _GOOD_de_gozaru
                   _always_de_gozaru
 ---------------------------------------------------------------------------------
 (2) _always_de_gozaru                                     1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GOOD_de_gozaru                                       0     0      0      15
                        _output_LED5
 ---------------------------------------------------------------------------------
 (3) _output_LED5                                          1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BAD_de_gozaru                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TIMER1_setup                                         2     0      2     120
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TIMER1_set_count                                     2     0      2     170
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _wood_isr                                             2     2      0     140
                                              2 COMRAM     2     2      0
                  _read_ds_dual_byte
           i2_TIMER0_16bit_set_count
                 i2_TIMER1_set_count
 ---------------------------------------------------------------------------------
 (5) i2_TIMER1_set_count                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) i2_TIMER0_16bit_set_count                             2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _read_ds_dual_byte                                    1     1      0       0
                                              0 COMRAM     1     1      0
                       _Serial1_read
 ---------------------------------------------------------------------------------
 (6) _Serial1_read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TIMER1_set_count
   _TIMER1_setup
   _enable_interrupts
   _pin_init
   _read_ds_dual_de_gozaru
     _BAD_de_gozaru
     _GOOD_de_gozaru
       _output_LED5
     _always_de_gozaru
   _read_ds_dual_init
     _Serial1_begin
     _TIMER0_16bit_set_count
     _TIMER0_setup
     _enable_interrupts
   _spi_init
     _SPI_begin

 _wood_isr (ROOT)
   _read_ds_dual_byte
     _Serial1_read
   i2_TIMER0_16bit_set_count
   i2_TIMER1_set_count

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      7      4B       1       79.8%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4B       8        0.0%
DATA                 0      0      4B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Apr 28 20:27:51 2019

                              __CFG_CP$OFF 000000                                        l461 03EC  
                                      l750 0092                                        l751 009C  
                                      l743 005C                                        l752 00A6  
                                      l753 00B0                                        l745 0060  
                                      l754 00BA                                        l746 006A  
                                      l755 00C2                                        l747 0074  
                                      l756 00CA                                        l748 007E  
                                      l757 00D2                                        l749 0088  
                                      l758 00DA                                        l890 032E  
                                      l891 033A                                        l892 0346  
                                      l893 0352                                        l886 030A  
                                      l888 0316                                        l889 0322  
                             __CFG_CPD$OFF 000000                       ??i2_TIMER1_set_count 0043  
                                      wreg 000FE8  read_ds_dual_de_gozaru@first_communication 004A  
                             __CFG_LVP$OFF 000000             ten_bit_test_unsignedint@F14391 0025  
                             __CFG_ZCD$OFF 000000                                       l1002 014C  
                                     l2014 00E2                                       l2220 015C  
                                     l2230 0196                                       l2252 01FC  
                                     l2262 0220                                       l2256 0202  
                                     l2258 0216                                       l3340 0398  
                                     l3352 03D6                                       l3344 03AA  
                                     l3348 03C0                                _output_LED5 0306  
                                     l1960 035E                                       l3456 050E  
                                     _LATA 000F79                                       _LATB 000F7A  
                                     _LATC 000F7B                                       _LATD 000F7C  
                                     _LATE 000F7D                                       _LATF 000F7E  
                                     _LATG 000F7F                                       _LATH 000F80  
                                     _T2PR 000FBC                                       u1467 0546  
                                     _T4PR 000FB6                                       _T6PR 000FB0  
                                     _T8PR 000F29                      __end_of_Serial1_begin 03FC  
                                     _TMR2 000FBB                                       _TMR4 000FB5  
                                     _TMR6 000FAF                                       _TMR8 000F28  
                 ??_TIMER0_16bit_set_count 0047                                       _WPUA 000E91  
                                     _WPUB 000E99                                       _WPUC 000EA1  
                                     _WPUD 000EA6                                       _WPUE 000EAE  
                                     _WPUF 000EB3                                       _WPUG 000EBB  
                                     _WPUH 000EC0                                       _data 001B  
                                     _main 04E4                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 004C                              __CFG_BOREN$ON 000000  
                                     start 0054            __size_of_read_ds_dual_de_gozaru 00E6  
                            __CFG_CSWEN$ON 000000                               ___param_bank 000000  
                            __CFG_SCANE$ON 000000                                      _ADACQ 000F5C  
                                    ?_main 0041                                      _ADCLK 000F57  
                                    _ADPCH 000F5F                                      _ADREF 000F58  
                                    _ADPRE 000F5E                              __CFG_WDTE$OFF 000000  
                                    _T1CON 000FCF                                      _T2CON 000FBD  
                                    _T3CON 000FC9                                      _T4CON 000FB7  
                                    _T2HLT 000FBE                                      _T5CON 000FC3  
                                    _T6CON 000FB1                                      _T4HLT 000FB8  
                           __CFG_DEBUG$OFF 000000                                      _T7CON 000F30  
                                    _T8CON 000F2A                                      _T6HLT 000FB2  
                                    _T8HLT 000F2B                                      _T2RST 000FC0  
                                    _T4RST 000FBA                                      _T6RST 000FB4  
                                    _T8RST 000F2D                                      _TMR0H 000FD4  
                                    _TMR1H 000FCE                                      _TMR0L 000FD3  
                                    _TMR1L 000FCD                                      _TMR3H 000FC8  
                                    _TMR3L 000FC7                                      _TMR5H 000FC2  
                                    _TMR5L 000FC1                                      _TMR7H 000F2F  
                                    _TMR7L 000F2E                                      _TRISA 000F81  
                                    _TRISB 000F82                                      _TRISC 000F83  
                                    _TRISD 000F84                                      _TRISE 000F85  
                                    _TRISF 000F86                                      _TRISG 000F87  
                                    _TRISH 000F88                           _always_de_gozaru 053E  
                            __CFG_WRT0$OFF 000000                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                              __CFG_WRT3$OFF 000000  
                            __CFG_PWRTE$ON 000000                              __CFG_WRT4$OFF 000000  
                            __CFG_WRT5$OFF 000000                              __CFG_WRT6$OFF 000000  
                            __CFG_WRT7$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                           __CFG_EBTR4$OFF 000000                             __CFG_EBTR5$OFF 000000  
                           __CFG_EBTR6$OFF 000000                             __CFG_EBTR7$OFF 000000  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                             __CFG_EBTRB$OFF 000000  
                       __CFG_MCLRE$EXTMCLR 000000                                      tablat 000FF5  
                                    ttemp5 004D                                      ttemp6 0050  
                                    ttemp7 0054                                      status 000FD8  
                                    wtemp8 004D                         __size_of_SPI_begin 000C  
                          __initialization 04AE                          ?_TIMER1_set_count 0045  
                             __end_of_main 0514                         ??_TIMER1_set_count 0047  
                                   ??_main 0048                              __activetblptr 000003  
                   _read_ds_dual_de_gozaru 0140                                     _ADCON0 000F60  
                                   _ADCON1 000F59                                     _ADCON2 000F5A  
                                   _ADCON3 000F5B                                     _ADRESH 000F64  
                                   _ADRESL 000F63                             _GOOD_de_gozaru 0554  
                                   _ANSELA 000E92                                     _ANSELB 000E9A  
                                   _ANSELD 000EA7                                     _ANSELE 000EAF  
                                   _ANSELF 000EB4                                     _ANSELG 000EBC  
                                   _T0CON0 000FD5                                     _T0CON1 000FD6  
                                   _T1GCON 000FD0                                     _T3GCON 000FCA  
                                   _T5GCON 000FC4                                     _RC1REG 000F98  
                                   _RB0PPS 000E5A                                     _RC2REG 000EF1  
                                   _RB1PPS 000E5B                                     _T7GCON 000F31  
                                   _RC3REG 000EEA                                     _RC0PPS 000E62  
                                   _RC4REG 000EE3                                     _RC1STA 000F9C  
                                   _RC5REG 000EDC                                     _RC2STA 000EF5  
                                   _RC3STA 000EEE                                     _RC4STA 000EE7  
                                   _RC5STA 000EE0                                     _ODCONA 000E90  
                                   _ODCONB 000E98                                     _ODCONC 000EA0  
                                   _RC6PPS 000E68                                     _RD4PPS 000E6E  
                                   _ODCOND 000EA5                                     _ODCONE 000EAD  
                                   _ODCONF 000EB2                                     _ODCONG 000EBA  
                                   _ODCONH 000EBF                                     _RD6PPS 000E70  
                                   i2l2212 046A                                     i2l1156 0048  
                                   i2l2206 045C                             __CFG_WDTCCS$SC 000000  
                                   i2l2194 0434                                     i2l3440 0034  
          __size_of_TIMER0_16bit_set_count 000A                      _CSV_lib_transmit_flag 0031  
                                   _TX1REG 000F99                                     _TX2REG 000EF2  
                                   _TX3REG 000EEB                                     _TX4REG 000EE4  
                                   _TX1STA 000F9D                                     _TX5REG 000EDD  
                                   _TX2STA 000EF6                                     _TX3STA 000EEF  
                                   _TX4STA 000EE8                                     _TX5STA 000EE1  
                           __CFG_XINST$OFF 000000                             __CFG_STVREN$ON 000000  
                                   clear_0 04D4                           __end_of_pin_init 0306  
                           output_LED5@num 0045                          __end_of_SPI_begin 0582  
                             __pdataCOMRAM 0048                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                         __end_of_spi_init 053E                     __end_of_GOOD_de_gozaru 0566  
                   __size_of_BAD_de_gozaru 0006                           __end_of_wood_isr 0054  
                               __accesstop 0060                    __end_of__initialization 04DA  
                          __CFG_FEXTOSC$HS 000000                              ___rparam_used 000001  
                           __pcstackCOMRAM 0041          __size_ofi2_TIMER0_16bit_set_count 000A  
                ?i2_TIMER0_16bit_set_count 0041                     _TIMER0_16bit_set_count 058E  
                            ?_Serial1_read 0041                            ?_GOOD_de_gozaru 0041  
                             ?_output_LED5 0041                          _read_ds_dual_byte 03FC  
                        _read_ds_dual_init 0470                              ?_TIMER0_setup 0045  
                            ?_TIMER1_setup 0045                         ?_read_ds_dual_byte 0041  
                       ?_read_ds_dual_init 0041                   __end_of_always_de_gozaru 0554  
                           _SSP1DATPPSbits 000E1A                     i2TIMER1_set_count@data 0041  
                            _BAD_de_gozaru 05C0                        ??_read_ds_dual_byte 0041  
                      ??_read_ds_dual_init 0048                             _SSP2DATPPSbits 000E1D  
                           _SSP1CLKPPSbits 000E19                             ??_Serial1_read 0041  
                                  _SP1BRGH 000F9B                                    _SP1BRGL 000F9A  
              __size_ofi2_TIMER1_set_count 000A                                    _SP2BRGH 000EF4  
                                  _SP2BRGL 000EF3                                    _SP3BRGH 000EED  
                                  _SP3BRGL 000EEC                                    _SP4BRGH 000EE6  
                                  _SP4BRGL 000EE5                                    _SP5BRGH 000EDF  
                                  _SP5BRGL 000EDE                                    i2u42_40 0456  
                           _SSP2CLKPPSbits 000E1C                                    i2u39_40 0442  
                                  _TMR1CLK 000FD2                                    _DS_data 0001  
                                  _TMR3CLK 000FCC                                    _TMR5CLK 000FC6  
                                  _TMR7CLK 000F33                                    _SSP2ADD 000ED6  
                                  _SSP1BUF 000F91                                    _SSP2BUF 000ED5  
                __end_of_read_ds_dual_byte 0470                  __end_of_read_ds_dual_init 04AE  
                           ??_TIMER0_setup 0047                             ??_TIMER1_setup 0047  
                                ?_pin_init 0041                                    __Hparam 0000  
                                  __Lparam 0000                           TIMER0_setup@data 0045  
                           ?_BAD_de_gozaru 0041                                  ?_spi_init 0041  
               read_ds_dual_de_gozaru@mode 003D                                    __pcinit 04AE  
                  ?_read_ds_dual_de_gozaru 0041                                  ?_wood_isr 0041  
                                  __ramtop 0E00                     __size_of_Serial1_begin 0076  
                                  __ptext0 04E4                                    __ptext1 0514  
                                  __ptext2 0576                                    __ptext3 0470  
                                  __ptext4 0058                                    __ptext5 0582  
                                  __ptext6 058E                                    __ptext7 0386  
                                  __ptext8 0140                                    __ptext9 053E  
                                _T1CONbits 000FCF                              SPI_begin@data 0045  
                                _T2CONbits 000FBD                                  _T3CONbits 000FC9  
                                _T4CONbits 000FB7                  __size_of_TIMER1_set_count 000A  
                                _T5CONbits 000FC3                                  _T6CONbits 000FB1  
                         TIMER1_setup@data 0045                                  _T7CONbits 000F30  
                                _T8CONbits 000F2A                       end_of_initialization 04DA  
                        _sinyounai_DS_data 000E                                 ??_pin_init 0045  
                                  postdec1 000FE5                                 ??_spi_init 0047  
                                  postinc0 000FEE                                    postinc2 000FDE  
           __end_of_read_ds_dual_de_gozaru 0226                      __CFG_WDTCPS$WDTCPS_31 000000  
                               ??_wood_isr 0043                                  _SPI_begin 0576  
               __size_of_read_ds_dual_byte 0074                 __size_of_read_ds_dual_init 003E  
                            _Serial1_begin 0386                       __size_of_output_LED5 0080  
         __end_ofi2_TIMER0_16bit_set_count 05B6                             _DS_uart_number 0040  
                     __end_of_Serial1_read 05C0                         _CSV_lib_cycle_time 0035  
                          ??_BAD_de_gozaru 0045                    ?_TIMER0_16bit_set_count 0045  
              _DS_communication_error_time 0037                              __pidataCOMRAM 05C6  
                         ??_GOOD_de_gozaru 0046                       __end_of_TIMER0_setup 058E  
                        _enable_interrupts 0058                       __end_of_TIMER1_setup 0576  
                       ?_enable_interrupts 0041                        start_initialization 04AE  
                               ?_SPI_begin 0045                        ??_enable_interrupts 0045  
                           ?_Serial1_begin 0045               i2TIMER0_16bit_set_count@data 0041  
           __end_of_TIMER0_16bit_set_count 0598                           __CFG_LPBOREN$OFF 000000  
                        ?_always_de_gozaru 0041                         ??_always_de_gozaru 0045  
                __end_of_enable_interrupts 0140                                __pbssCOMRAM 0001  
                         _TIMER1_set_count 0598                 TIMER0_16bit_set_count@data 0045  
                       ten_bit_test@F14387 002A                   i2_TIMER0_16bit_set_count 05AC  
                                __pintcode 0008                          __size_of_pin_init 00E0  
                         __CFG_PPS1WAY$OFF 000000                          __size_of_spi_init 002A  
               __end_ofi2_TIMER1_set_count 05AC                                   _BAUD1CON 000F9E  
                                 _BAUD2CON 000EF7                                   _BAUD3CON 000EF0  
                                 _BAUD4CON 000EE9                                   _BAUD5CON 000EE2  
                        __size_of_wood_isr 004C                                ??_SPI_begin 0047  
                          ??_Serial1_begin 0048                                   _T2CLKCON 000FBF  
                       Serial1_begin@speed 0045                                   _T4CLKCON 000FB9  
                    __size_of_Serial1_read 000A                                   _T6CLKCON 000FB3  
                                 _T8CLKCON 000F2C                             _CSV_lib_enable 003B  
                                 _LATAbits 000F79                                   _LATDbits 000F7C  
                                 _LATEbits 000F7D                                   _LATGbits 000F7F  
                                 _LATHbits 000F80                                   _PIE0bits 000E29  
                                 _PIE3bits 000E2C                                   _PIE4bits 000E2D  
                                 _PIE5bits 000E2E                        __CFG_BORV$VBOR_2P45 000000  
                                 _PIR0bits 000E33                                   _PIR3bits 000E36  
                                 _PIR4bits 000E37                                   _PIR5bits 000E38  
                    __size_of_TIMER0_setup 000C                                   _SSP1CON1 000F95  
                                 _SSP2CON1 000ED9                                   _SSP2CON3 000EDB  
                    __size_of_TIMER1_setup 0010                       TIMER1_set_count@data 0045  
                                 _SSP1STAT 000F94                                   _SSP2STAT 000ED8  
               __size_of_enable_interrupts 00E8                                 _ADCON0bits 000F60  
                             _Serial1_read 05B6                                  copy_data0 04C2  
                             _TIMER0_setup 0582                               _TIMER1_setup 0566  
                                 __Hrparam 0000                    __CFG_RSTOSC$EXTOSC_4PLL 000000  
                                 __Lrparam 0000                                   __ptext10 0554  
                                 __ptext11 0306                                   __ptext20 05B6  
                                 __ptext12 05C0                                   __ptext13 0226  
                                 __ptext14 0566                                   __ptext15 0598  
                                 __ptext17 05A2                                   __ptext18 05AC  
                                 __ptext19 03FC                               _SSP1CON1bits 000F95  
                            ??_output_LED5 0045                               _SSP2CON2bits 000EDA  
                                 _csv_data 002D                               _DS_read_stop 003F  
                        Serial1_begin@data 0047                              __size_of_main 0030  
                     __CFG_WDTCWS$WDTCWS_7 000000                                   _pin_init 0226  
                 __end_of_TIMER1_set_count 05A2                      __end_of_BAD_de_gozaru 05C6  
                                 _spi_init 0514                                   int$flags 004C  
                    enable_interrupts@data 0045                               _SSP1STATbits 000F94  
                                 _wood_isr 0008                               _SSP2STATbits 000ED8  
                               _INTCONbits 000FF2                  __size_of_always_de_gozaru 0016  
                         _CSV_lib_now_time 0033                                   intlevel2 0000  
               ??i2_TIMER0_16bit_set_count 0043                          __CFG_CLKOUTEN$OFF 000000  
                      __end_of_output_LED5 0386                   ??_read_ds_dual_de_gozaru 0046  
                           _before_DS_data 0048                                _DS_time_out 004B  
        read_ds_dual_de_gozaru@read_number 003E                                 _RX1PPSbits 000E0F  
                               _RX2PPSbits 000E11                                 _TX1STAbits 000F9D  
                               _TX2STAbits 000EF6                                 _TX3STAbits 000EEF  
                  __size_of_GOOD_de_gozaru 0012                                 _TX4STAbits 000EE8  
                               _TX5STAbits 000EE1                         i2_TIMER1_set_count 05A2  
              CSV_timer_task@CSV_lib_count 002F                               _push_DS_data 0039  
          read_ds_dual_de_gozaru@check_sum 003C                        ?i2_TIMER1_set_count 0041  

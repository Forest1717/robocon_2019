

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Apr 28 18:19:40 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           ; Version 2.05
    37                           ; Generated 20/12/2018 GMT
    38                           ; 
    39                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F67K40 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  000634                     __pidataCOMRAM:
    73                           	opt callstack 0
    74                           
    75                           ;initializer for _before_DS_data
    76  000634  FF                 	db	255
    77  000635  FF                 	db	255
    78                           
    79                           ;initializer for read_ds_dual_de_gozaru@first_communication
    80  000636  01                 	db	1
    81                           
    82                           ;initializer for _DS_time_out
    83  000637  64                 	db	100
    84  0000                     _RD6PPS	set	3696
    85  0000                     _RX2PPSbits	set	3601
    86  0000                     _RD4PPS	set	3694
    87  0000                     _RX1PPSbits	set	3599
    88  0000                     _SSP2CLKPPSbits	set	3612
    89  0000                     _SSP2DATPPSbits	set	3613
    90  0000                     _RB1PPS	set	3675
    91  0000                     _RB0PPS	set	3674
    92  0000                     _RC6PPS	set	3688
    93  0000                     _SSP1CLKPPSbits	set	3609
    94  0000                     _SSP1DATPPSbits	set	3610
    95  0000                     _RC0PPS	set	3682
    96  0000                     _ODCONH	set	3775
    97  0000                     _ODCONG	set	3770
    98  0000                     _ODCONF	set	3762
    99  0000                     _ODCONE	set	3757
   100  0000                     _ODCOND	set	3749
   101  0000                     _ODCONC	set	3744
   102  0000                     _ODCONB	set	3736
   103  0000                     _ODCONA	set	3728
   104  0000                     _WPUH	set	3776
   105  0000                     _WPUG	set	3771
   106  0000                     _WPUF	set	3763
   107  0000                     _WPUE	set	3758
   108  0000                     _WPUD	set	3750
   109  0000                     _WPUC	set	3745
   110  0000                     _WPUB	set	3737
   111  0000                     _WPUA	set	3729
   112  0000                     _ANSELG	set	3772
   113  0000                     _ANSELF	set	3764
   114  0000                     _ANSELE	set	3759
   115  0000                     _ANSELD	set	3751
   116  0000                     _ANSELB	set	3738
   117  0000                     _ANSELA	set	3730
   118  0000                     _PIE4bits	set	3629
   119  0000                     _PIE3bits	set	3628
   120  0000                     _PIE5bits	set	3630
   121  0000                     _PIR5bits	set	3640
   122  0000                     _PIE0bits	set	3625
   123  0000                     _PIR0bits	set	3635
   124  0000                     _TX5REG	set	3805
   125  0000                     _TX5STAbits	set	3809
   126  0000                     _RC5REG	set	3804
   127  0000                     _BAUD5CON	set	3810
   128  0000                     _RC5STA	set	3808
   129  0000                     _TX5STA	set	3809
   130  0000                     _SP5BRGL	set	3806
   131  0000                     _SP5BRGH	set	3807
   132  0000                     _TX4REG	set	3812
   133  0000                     _TX4STAbits	set	3816
   134  0000                     _RC4REG	set	3811
   135  0000                     _BAUD4CON	set	3817
   136  0000                     _RC4STA	set	3815
   137  0000                     _TX4STA	set	3816
   138  0000                     _SP4BRGL	set	3813
   139  0000                     _SP4BRGH	set	3814
   140  0000                     _TX3REG	set	3819
   141  0000                     _TX3STAbits	set	3823
   142  0000                     _RC3REG	set	3818
   143  0000                     _PIR4bits	set	3639
   144  0000                     _BAUD3CON	set	3824
   145  0000                     _RC3STA	set	3822
   146  0000                     _TX3STA	set	3823
   147  0000                     _SP3BRGL	set	3820
   148  0000                     _SP3BRGH	set	3821
   149  0000                     _TX2REG	set	3826
   150  0000                     _TX2STAbits	set	3830
   151  0000                     _RC2REG	set	3825
   152  0000                     _BAUD2CON	set	3831
   153  0000                     _RC2STA	set	3829
   154  0000                     _TX2STA	set	3830
   155  0000                     _SP2BRGL	set	3827
   156  0000                     _SP2BRGH	set	3828
   157  0000                     _SSP2STATbits	set	3800
   158  0000                     _SSP2BUF	set	3797
   159  0000                     _PIR3bits	set	3638
   160  0000                     _SSP2CON2bits	set	3802
   161  0000                     _SSP2STAT	set	3800
   162  0000                     _SSP2ADD	set	3798
   163  0000                     _SSP2CON3	set	3803
   164  0000                     _SSP2CON1	set	3801
   165  0000                     _TMR8	set	3880
   166  0000                     _T8CONbits	set	3882
   167  0000                     _T8CON	set	3882
   168  0000                     _T8CLKCON	set	3884
   169  0000                     _T8PR	set	3881
   170  0000                     _T8HLT	set	3883
   171  0000                     _T8RST	set	3885
   172  0000                     _TMR7L	set	3886
   173  0000                     _TMR7H	set	3887
   174  0000                     _T7CONbits	set	3888
   175  0000                     _T7CON	set	3888
   176  0000                     _TMR7CLK	set	3891
   177  0000                     _T7GCON	set	3889
   178  0000                     _ADPCH	set	3935
   179  0000                     _ADACQ	set	3932
   180  0000                     _ADPRE	set	3934
   181  0000                     _ADREF	set	3928
   182  0000                     _ADCLK	set	3927
   183  0000                     _ADCON3	set	3931
   184  0000                     _ADCON2	set	3930
   185  0000                     _ADCON1	set	3929
   186  0000                     _LATDbits	set	3964
   187  0000                     _LATGbits	set	3967
   188  0000                     _LATHbits	set	3968
   189  0000                     _LATAbits	set	3961
   190  0000                     _LATEbits	set	3965
   191  0000                     _TRISH	set	3976
   192  0000                     _TRISG	set	3975
   193  0000                     _TRISF	set	3974
   194  0000                     _TRISE	set	3973
   195  0000                     _TRISD	set	3972
   196  0000                     _TRISC	set	3971
   197  0000                     _TRISB	set	3970
   198  0000                     _TRISA	set	3969
   199  0000                     _LATH	set	3968
   200  0000                     _LATG	set	3967
   201  0000                     _LATF	set	3966
   202  0000                     _LATE	set	3965
   203  0000                     _LATD	set	3964
   204  0000                     _LATC	set	3963
   205  0000                     _LATB	set	3962
   206  0000                     _LATA	set	3961
   207  0000                     _INTCONbits	set	4082
   208  0000                     _TMR6	set	4015
   209  0000                     _T6CONbits	set	4017
   210  0000                     _T6CON	set	4017
   211  0000                     _T6CLKCON	set	4019
   212  0000                     _T6PR	set	4016
   213  0000                     _T6HLT	set	4018
   214  0000                     _T6RST	set	4020
   215  0000                     _TMR4	set	4021
   216  0000                     _T4CONbits	set	4023
   217  0000                     _T4CON	set	4023
   218  0000                     _T4CLKCON	set	4025
   219  0000                     _T4PR	set	4022
   220  0000                     _T4HLT	set	4024
   221  0000                     _T4RST	set	4026
   222  0000                     _TMR2	set	4027
   223  0000                     _T2CONbits	set	4029
   224  0000                     _T2CON	set	4029
   225  0000                     _T2CLKCON	set	4031
   226  0000                     _T2PR	set	4028
   227  0000                     _T2HLT	set	4030
   228  0000                     _T2RST	set	4032
   229  0000                     _TMR5L	set	4033
   230  0000                     _TMR5H	set	4034
   231  0000                     _T5CONbits	set	4035
   232  0000                     _T5CON	set	4035
   233  0000                     _TMR5CLK	set	4038
   234  0000                     _T5GCON	set	4036
   235  0000                     _TMR3L	set	4039
   236  0000                     _TMR3H	set	4040
   237  0000                     _T3CONbits	set	4041
   238  0000                     _T3CON	set	4041
   239  0000                     _TMR3CLK	set	4044
   240  0000                     _T3GCON	set	4042
   241  0000                     _TMR1L	set	4045
   242  0000                     _TMR1H	set	4046
   243  0000                     _T1CONbits	set	4047
   244  0000                     _T1CON	set	4047
   245  0000                     _TMR1CLK	set	4050
   246  0000                     _T1GCON	set	4048
   247  0000                     _TMR0H	set	4052
   248  0000                     _TMR0L	set	4051
   249  0000                     _T0CON0	set	4053
   250  0000                     _T0CON1	set	4054
   251  0000                     _TX1REG	set	3993
   252  0000                     _TX1STAbits	set	3997
   253  0000                     _RC1REG	set	3992
   254  0000                     _BAUD1CON	set	3998
   255  0000                     _RC1STA	set	3996
   256  0000                     _TX1STA	set	3997
   257  0000                     _SP1BRGL	set	3994
   258  0000                     _SP1BRGH	set	3995
   259  0000                     _SSP1STATbits	set	3988
   260  0000                     _SSP1BUF	set	3985
   261  0000                     _SSP1CON1bits	set	3989
   262  0000                     _SSP1CON1	set	3989
   263  0000                     _SSP1STAT	set	3988
   264  0000                     _ADRESL	set	3939
   265  0000                     _ADRESH	set	3940
   266  0000                     _ADCON0bits	set	3936
   267  0000                     _ADCON0	set	3936
   268                           
   269                           ; #config settings
   270  0000                     
   271                           	psect	cinit
   272  00051A                     __pcinit:
   273                           	opt callstack 0
   274  00051A                     start_initialization:
   275                           	opt callstack 0
   276  00051A                     __initialization:
   277                           	opt callstack 0
   278                           
   279                           ; Initialize objects allocated to COMRAM (4 bytes)
   280                           ; load TBLPTR registers with __pidataCOMRAM
   281  00051A  0E34               	movlw	low __pidataCOMRAM
   282  00051C  6EF6               	movwf	tblptrl,c
   283  00051E  0E06               	movlw	high __pidataCOMRAM
   284  000520  6EF7               	movwf	tblptrh,c
   285  000522  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   286  000524  6EF8               	movwf	tblptru,c
   287  000526  EE00  F04C         	lfsr	0,__pdataCOMRAM
   288  00052A  EE10 F004          	lfsr	1,4
   289  00052E                     copy_data0:
   290  00052E  0009               	tblrd		*+
   291  000530  CFF5 FFEE          	movff	tablat,postinc0
   292  000534  50E5               	movf	postdec1,w,c
   293  000536  50E1               	movf	fsr1l,w,c
   294  000538  E1FA               	bnz	copy_data0
   295                           
   296                           ; Clear objects allocated to COMRAM (64 bytes)
   297  00053A  EE00  F001         	lfsr	0,__pbssCOMRAM
   298  00053E  0E40               	movlw	64
   299  000540                     clear_0:
   300  000540  6AEE               	clrf	postinc0,c
   301  000542  06E8               	decf	wreg,f,c
   302  000544  E1FD               	bnz	clear_0
   303  000546                     end_of_initialization:
   304                           	opt callstack 0
   305  000546                     __end_of__initialization:
   306                           	opt callstack 0
   307  000546  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   308  000548  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   309  00054A  0100               	movlb	0
   310  00054C  EFA8  F002         	goto	_main	;jump to C main() function
   311                           
   312                           	psect	bssCOMRAM
   313  000001                     __pbssCOMRAM:
   314                           	opt callstack 0
   315  000001                     _DS_data:
   316                           	opt callstack 0
   317  000001                     	ds	13
   318  00000E                     _sinyounai_DS_data:
   319                           	opt callstack 0
   320  00000E                     	ds	13
   321  00001B                     _data:
   322                           	opt callstack 0
   323  00001B                     	ds	10
   324  000025                     	ds	5
   325  00002A                     	ds	3
   326  00002D                     _csv_data:
   327                           	opt callstack 0
   328  00002D                     	ds	2
   329  00002F                     CSV_timer_task@CSV_lib_count:
   330                           	opt callstack 0
   331  00002F                     	ds	2
   332  000031                     _CSV_lib_transmit_flag:
   333                           	opt callstack 0
   334  000031                     	ds	2
   335  000033                     _CSV_lib_now_time:
   336                           	opt callstack 0
   337  000033                     	ds	2
   338  000035                     _CSV_lib_cycle_time:
   339                           	opt callstack 0
   340  000035                     	ds	2
   341  000037                     _DS_communication_error_time:
   342                           	opt callstack 0
   343  000037                     	ds	2
   344  000039                     _push_DS_data:
   345                           	opt callstack 0
   346  000039                     	ds	2
   347  00003B                     _CSV_lib_enable:
   348                           	opt callstack 0
   349  00003B                     	ds	1
   350  00003C                     read_ds_dual_de_gozaru@check_sum:
   351                           	opt callstack 0
   352  00003C                     	ds	1
   353  00003D                     read_ds_dual_de_gozaru@mode:
   354                           	opt callstack 0
   355  00003D                     	ds	1
   356  00003E                     read_ds_dual_de_gozaru@read_number:
   357                           	opt callstack 0
   358  00003E                     	ds	1
   359  00003F                     _DS_read_stop:
   360                           	opt callstack 0
   361  00003F                     	ds	1
   362  000040                     _DS_uart_number:
   363                           	opt callstack 0
   364  000040                     	ds	1
   365                           
   366                           	psect	dataCOMRAM
   367  00004C                     __pdataCOMRAM:
   368                           	opt callstack 0
   369  00004C                     _before_DS_data:
   370                           	opt callstack 0
   371  00004C                     	ds	2
   372  00004E                     read_ds_dual_de_gozaru@first_communication:
   373                           	opt callstack 0
   374  00004E                     	ds	1
   375  00004F                     _DS_time_out:
   376                           	opt callstack 0
   377  00004F                     	ds	1
   378                           
   379                           	psect	cstackCOMRAM
   380  000041                     __pcstackCOMRAM:
   381                           	opt callstack 0
   382  000041                     i2TIMER0_16bit_set_count@data:
   383                           	opt callstack 0
   384  000041                     i2TIMER1_set_count@data:
   385                           	opt callstack 0
   386                           
   387                           ; 2 bytes @ 0x0
   388  000041                     	ds	2
   389  000043                     ??_wood_isr:
   390  000043                     
   391                           ; 1 bytes @ 0x2
   392  000043                     	ds	2
   393  000045                     enable_interrupts@data:
   394                           	opt callstack 0
   395  000045                     bit_test@bit_place:
   396                           	opt callstack 0
   397  000045                     output_LED5@num:
   398                           	opt callstack 0
   399  000045                     SPI_begin@data:
   400                           	opt callstack 0
   401  000045                     Serial1_begin@speed:
   402                           	opt callstack 0
   403  000045                     TIMER0_setup@data:
   404                           	opt callstack 0
   405  000045                     TIMER0_16bit_set_count@data:
   406                           	opt callstack 0
   407  000045                     TIMER1_setup@data:
   408                           	opt callstack 0
   409  000045                     TIMER1_set_count@data:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x4
   413  000045                     	ds	1
   414  000046                     ??_bit_test:
   415                           
   416                           ; 1 bytes @ 0x5
   417  000046                     	ds	1
   418  000047                     Serial1_begin@data:
   419                           	opt callstack 0
   420                           
   421                           ; 1 bytes @ 0x6
   422  000047                     	ds	1
   423  000048                     bit_test@number:
   424                           	opt callstack 0
   425                           
   426                           ; 1 bytes @ 0x7
   427  000048                     	ds	1
   428  000049                     bit_test@i:
   429                           	opt callstack 0
   430                           
   431                           ; 1 bytes @ 0x8
   432  000049                     	ds	1
   433  00004A                     ??_GOOD_de_gozaru:
   434                           
   435                           ; 1 bytes @ 0x9
   436  00004A                     	ds	1
   437  00004B                     
   438                           ; 1 bytes @ 0xA
   439  00004B                     	ds	1
   440  00004C                     
   441                           ; 1 bytes @ 0xB
   442 ;;
   443 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   444 ;;
   445 ;; *************** function _main *****************
   446 ;; Defined at:
   447 ;;		line 42 in file "MELON PAN1_main.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   465 ;;Total ram usage:        0 bytes
   466 ;; Hardware stack levels required when called:    6
   467 ;; This function calls:
   468 ;;		_TIMER1_set_count
   469 ;;		_TIMER1_setup
   470 ;;		_enable_interrupts
   471 ;;		_pin_init
   472 ;;		_read_ds_dual_de_gozaru
   473 ;;		_read_ds_dual_init
   474 ;;		_spi_init
   475 ;; This function is called by:
   476 ;;		Startup code after reset
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           	psect	text0
   481  000550                     __ptext0:
   482                           	opt callstack 0
   483  000550                     _main:
   484                           	opt callstack 25
   485                           
   486                           ;MELON PAN1_main.c: 44: pin_init();
   487                           
   488                           ;incstack = 0
   489  000550  EC13  F001         	call	_pin_init	;wreg free
   490                           
   491                           ;MELON PAN1_main.c: 48: spi_init();
   492  000554  ECC0  F002         	call	_spi_init	;wreg free
   493                           
   494                           ;MELON PAN1_main.c: 49: read_ds_dual_init();
   495  000558  EC6E  F002         	call	_read_ds_dual_init	;wreg free
   496                           
   497                           ;MELON PAN1_main.c: 51: TIMER1_setup(0x0100 | 0x20);
   498  00055C  0E01               	movlw	1
   499  00055E  6E46               	movwf	TIMER1_setup@data+1,c
   500  000560  0E20               	movlw	32
   501  000562  6E45               	movwf	TIMER1_setup@data,c
   502  000564  ECEA  F002         	call	_TIMER1_setup	;wreg free
   503                           
   504                           ;MELON PAN1_main.c: 52: TIMER1_set_count(25536);
   505  000568  0E63               	movlw	99
   506  00056A  6E46               	movwf	TIMER1_set_count@data+1,c
   507  00056C  0EC0               	movlw	192
   508  00056E  6E45               	movwf	TIMER1_set_count@data,c
   509  000570  EC03  F003         	call	_TIMER1_set_count	;wreg free
   510                           
   511                           ;MELON PAN1_main.c: 53: enable_interrupts(2);
   512  000574  0E02               	movlw	2
   513  000576  EC2C  F000         	call	_enable_interrupts
   514  00057A                     l3534:
   515                           
   516                           ;MELON PAN1_main.c: 65: read_ds_dual_de_gozaru();
   517  00057A  ECA0  F000         	call	_read_ds_dual_de_gozaru	;wreg free
   518  00057E  D7FD               	goto	l3534
   519  000580                     __end_of_main:
   520                           	opt callstack 0
   521                           
   522 ;; *************** function _spi_init *****************
   523 ;; Defined at:
   524 ;;		line 205 in file "pindef.h"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   542 ;;Total ram usage:        0 bytes
   543 ;; Hardware stack levels used:    1
   544 ;; Hardware stack levels required when called:    4
   545 ;; This function calls:
   546 ;;		_SPI_begin
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text1
   553  000580                     __ptext1:
   554                           	opt callstack 0
   555  000580                     _spi_init:
   556                           	opt callstack 26
   557                           
   558                           ;pindef.h: 206: SPI_begin(0x0000 | 0x01);
   559                           
   560                           ;incstack = 0
   561  000580  0E00               	movlw	0
   562  000582  6E46               	movwf	SPI_begin@data+1,c
   563  000584  0E01               	movlw	1
   564  000586  6E45               	movwf	SPI_begin@data,c
   565  000588  ECF2  F002         	call	_SPI_begin	;wreg free
   566                           
   567                           ;pindef.h: 207: LATAbits.LATA3=1;
   568  00058C  8679               	bsf	3961,3,c	;volatile
   569                           
   570                           ;pindef.h: 208: LATAbits.LATA2=1;
   571  00058E  8479               	bsf	3961,2,c	;volatile
   572                           
   573                           ;pindef.h: 209: LATAbits.LATA1=1;
   574  000590  8279               	bsf	3961,1,c	;volatile
   575                           
   576                           ;pindef.h: 210: LATAbits.LATA0=1;
   577  000592  8079               	bsf	3961,0,c	;volatile
   578                           
   579                           ;pindef.h: 211: LATHbits.LATH1=1;
   580  000594  8280               	bsf	3968,1,c	;volatile
   581                           
   582                           ;pindef.h: 212: LATHbits.LATH0=1;
   583  000596  8080               	bsf	3968,0,c	;volatile
   584                           
   585                           ;pindef.h: 213: LATAbits.LATA5=1;
   586  000598  8A79               	bsf	3961,5,c	;volatile
   587                           
   588                           ;pindef.h: 214: LATAbits.LATA4=1;
   589  00059A  8879               	bsf	3961,4,c	;volatile
   590                           
   591                           ;pindef.h: 215: LATGbits.LATG6=1;
   592  00059C  8C7F               	bsf	3967,6,c	;volatile
   593                           
   594                           ;pindef.h: 216: LATGbits.LATG1=1;
   595  00059E  827F               	bsf	3967,1,c	;volatile
   596                           
   597                           ;pindef.h: 217: LATGbits.LATG0=1;
   598  0005A0  807F               	bsf	3967,0,c	;volatile
   599                           
   600                           ;pindef.h: 218: LATEbits.LATE0=1;
   601  0005A2  807D               	bsf	3965,0,c	;volatile
   602                           
   603                           ;pindef.h: 219: LATEbits.LATE1=1;
   604  0005A4  827D               	bsf	3965,1,c	;volatile
   605                           
   606                           ;pindef.h: 220: LATEbits.LATE2=1;
   607  0005A6  847D               	bsf	3965,2,c	;volatile
   608  0005A8  0012               	return		;funcret
   609  0005AA                     __end_of_spi_init:
   610                           	opt callstack 0
   611                           
   612 ;; *************** function _SPI_begin *****************
   613 ;; Defined at:
   614 ;;		line 383 in file "MELONPAN1_lib_ver1.20.h"
   615 ;; Parameters:    Size  Location     Type
   616 ;;  data            2    4[COMRAM] unsigned int 
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, status,2, status,0
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   632 ;;Total ram usage:        2 bytes
   633 ;; Hardware stack levels used:    1
   634 ;; Hardware stack levels required when called:    3
   635 ;; This function calls:
   636 ;;		Nothing
   637 ;; This function is called by:
   638 ;;		_spi_init
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text2
   643  0005E4                     __ptext2:
   644                           	opt callstack 0
   645  0005E4                     _SPI_begin:
   646                           	opt callstack 26
   647                           
   648                           ;MELONPAN1_lib_ver1.20.h: 384: SSP1STAT=((char)(data>>8)) | 0x00;
   649                           
   650                           ;incstack = 0
   651  0005E4  5046               	movf	SPI_begin@data+1,w,c
   652  0005E6  6E94               	movwf	3988,c	;volatile
   653                           
   654                           ;MELONPAN1_lib_ver1.20.h: 385: SSP1CON1=((char)(data & 0x00ff)) | 0x20;
   655  0005E8  5045               	movf	SPI_begin@data,w,c
   656  0005EA  0920               	iorlw	32
   657  0005EC  6E95               	movwf	3989,c	;volatile
   658  0005EE  0012               	return		;funcret
   659  0005F0                     __end_of_SPI_begin:
   660                           	opt callstack 0
   661                           
   662 ;; *************** function _read_ds_dual_init *****************
   663 ;; Defined at:
   664 ;;		line 95 in file "ds_dual_wood.h"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, status,2, status,0, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; Hardware stack levels required when called:    4
   685 ;; This function calls:
   686 ;;		_Serial1_begin
   687 ;;		_TIMER0_16bit_set_count
   688 ;;		_TIMER0_setup
   689 ;;		_enable_interrupts
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           	psect	text3
   696  0004DC                     __ptext3:
   697                           	opt callstack 0
   698  0004DC                     _read_ds_dual_init:
   699                           	opt callstack 26
   700                           
   701                           ;ds_dual_wood.h: 97: TIMER0_setup(0x10 | 0x4000 | 0x0300);
   702                           
   703                           ;incstack = 0
   704  0004DC  0E43               	movlw	67
   705  0004DE  6E46               	movwf	TIMER0_setup@data+1,c
   706  0004E0  0E10               	movlw	16
   707  0004E2  6E45               	movwf	TIMER0_setup@data,c
   708  0004E4  ECF8  F002         	call	_TIMER0_setup	;wreg free
   709                           
   710                           ;ds_dual_wood.h: 98: TIMER0_16bit_set_count(25536);
   711  0004E8  0E63               	movlw	99
   712  0004EA  6E46               	movwf	TIMER0_16bit_set_count@data+1,c
   713  0004EC  0EC0               	movlw	192
   714  0004EE  6E45               	movwf	TIMER0_16bit_set_count@data,c
   715  0004F0  ECFE  F002         	call	_TIMER0_16bit_set_count	;wreg free
   716                           
   717                           ;ds_dual_wood.h: 104: Serial1_begin(57600,0x00);
   718  0004F4  0EE1               	movlw	225
   719  0004F6  6E46               	movwf	Serial1_begin@speed+1,c
   720  0004F8  0E00               	movlw	0
   721  0004FA  6E45               	movwf	Serial1_begin@speed,c
   722  0004FC  0E00               	movlw	0
   723  0004FE  6E47               	movwf	Serial1_begin@data,c
   724  000500  ECC3  F001         	call	_Serial1_begin	;wreg free
   725                           
   726                           ;ds_dual_wood.h: 105: TX1STAbits.TXEN=0;
   727  000504  9A9D               	bcf	3997,5,c	;volatile
   728                           
   729                           ;ds_dual_wood.h: 107: enable_interrupts(10);
   730  000506  0E0A               	movlw	10
   731  000508  EC2C  F000         	call	_enable_interrupts
   732                           
   733                           ;ds_dual_wood.h: 108: enable_interrupts(1);
   734  00050C  0E01               	movlw	1
   735  00050E  EC2C  F000         	call	_enable_interrupts
   736                           
   737                           ;ds_dual_wood.h: 109: enable_interrupts(0);
   738  000512  0E00               	movlw	0
   739  000514  EC2C  F000         	call	_enable_interrupts
   740  000518  0012               	return		;funcret
   741  00051A                     __end_of_read_ds_dual_init:
   742                           	opt callstack 0
   743                           
   744 ;; *************** function _enable_interrupts *****************
   745 ;; Defined at:
   746 ;;		line 911 in file "MELONPAN1_lib_ver1.20.h"
   747 ;; Parameters:    Size  Location     Type
   748 ;;  data            1    wreg     unsigned char 
   749 ;; Auto vars:     Size  Location     Type
   750 ;;  data            1    4[COMRAM] unsigned char 
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg, status,2, status,0
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   761 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   763 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   764 ;;Total ram usage:        1 bytes
   765 ;; Hardware stack levels used:    1
   766 ;; Hardware stack levels required when called:    3
   767 ;; This function calls:
   768 ;;		Nothing
   769 ;; This function is called by:
   770 ;;		_read_ds_dual_init
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text4
   776  000058                     __ptext4:
   777                           	opt callstack 0
   778  000058                     _enable_interrupts:
   779                           	opt callstack 26
   780                           
   781                           ;incstack = 0
   782                           ;enable_interrupts@data stored from wreg
   783  000058  6E45               	movwf	enable_interrupts@data,c
   784                           
   785                           ;MELONPAN1_lib_ver1.20.h: 912: switch(data){
   786  00005A  D043               	goto	l2028
   787  00005C                     l743:
   788                           
   789                           ;MELONPAN1_lib_ver1.20.h: 914: INTCONbits.GIE=1;
   790  00005C  8EF2               	bsf	4082,7,c	;volatile
   791                           
   792                           ;MELONPAN1_lib_ver1.20.h: 915: break;
   793  00005E  0012               	return	
   794  000060                     l745:
   795                           
   796                           ;MELONPAN1_lib_ver1.20.h: 917: INTCONbits.PEIE=1;
   797  000060  8CF2               	bsf	4082,6,c	;volatile
   798                           
   799                           ;MELONPAN1_lib_ver1.20.h: 918: PIR0bits.TMR0IF=0;
   800  000062  010E               	movlb	14	; () banked
   801  000064  9B33               	bcf	51,5,b	;volatile
   802                           
   803                           ;MELONPAN1_lib_ver1.20.h: 919: PIE0bits.TMR0IE=1;
   804  000066  8B29               	bsf	41,5,b	;volatile
   805                           
   806                           ;MELONPAN1_lib_ver1.20.h: 920: break;
   807  000068  0012               	return	
   808  00006A                     l746:
   809                           
   810                           ;MELONPAN1_lib_ver1.20.h: 922: INTCONbits.PEIE=1;
   811  00006A  8CF2               	bsf	4082,6,c	;volatile
   812                           
   813                           ;MELONPAN1_lib_ver1.20.h: 923: PIR5bits.TMR1IF=0;
   814  00006C  010E               	movlb	14	; () banked
   815  00006E  9138               	bcf	56,0,b	;volatile
   816                           
   817                           ;MELONPAN1_lib_ver1.20.h: 924: PIE5bits.TMR1IE=1;
   818  000070  812E               	bsf	46,0,b	;volatile
   819                           
   820                           ;MELONPAN1_lib_ver1.20.h: 925: break;
   821  000072  0012               	return	
   822  000074                     l747:
   823                           
   824                           ;MELONPAN1_lib_ver1.20.h: 927: INTCONbits.PEIE=1;
   825  000074  8CF2               	bsf	4082,6,c	;volatile
   826                           
   827                           ;MELONPAN1_lib_ver1.20.h: 928: PIR5bits.TMR3IF=0;
   828  000076  010E               	movlb	14	; () banked
   829  000078  9538               	bcf	56,2,b	;volatile
   830                           
   831                           ;MELONPAN1_lib_ver1.20.h: 929: PIE5bits.TMR3IE=1;
   832  00007A  852E               	bsf	46,2,b	;volatile
   833                           
   834                           ;MELONPAN1_lib_ver1.20.h: 930: break;
   835  00007C  0012               	return	
   836  00007E                     l748:
   837                           
   838                           ;MELONPAN1_lib_ver1.20.h: 932: INTCONbits.PEIE=1;
   839  00007E  8CF2               	bsf	4082,6,c	;volatile
   840                           
   841                           ;MELONPAN1_lib_ver1.20.h: 933: PIR5bits.TMR5IF=0;
   842  000080  010E               	movlb	14	; () banked
   843  000082  9938               	bcf	56,4,b	;volatile
   844                           
   845                           ;MELONPAN1_lib_ver1.20.h: 934: PIE5bits.TMR5IE=1;
   846  000084  892E               	bsf	46,4,b	;volatile
   847                           
   848                           ;MELONPAN1_lib_ver1.20.h: 935: break;
   849  000086  0012               	return	
   850  000088                     l749:
   851                           
   852                           ;MELONPAN1_lib_ver1.20.h: 937: INTCONbits.PEIE=1;
   853  000088  8CF2               	bsf	4082,6,c	;volatile
   854                           
   855                           ;MELONPAN1_lib_ver1.20.h: 938: PIR5bits.TMR7IF=0;
   856  00008A  010E               	movlb	14	; () banked
   857  00008C  9D38               	bcf	56,6,b	;volatile
   858                           
   859                           ;MELONPAN1_lib_ver1.20.h: 939: PIE5bits.TMR7IE=1;
   860  00008E  8D2E               	bsf	46,6,b	;volatile
   861                           
   862                           ;MELONPAN1_lib_ver1.20.h: 940: break;
   863  000090  0012               	return	
   864  000092                     l750:
   865                           
   866                           ;MELONPAN1_lib_ver1.20.h: 942: INTCONbits.PEIE=1;
   867  000092  8CF2               	bsf	4082,6,c	;volatile
   868                           
   869                           ;MELONPAN1_lib_ver1.20.h: 943: PIR5bits.TMR2IF=0;
   870  000094  010E               	movlb	14	; () banked
   871  000096  9338               	bcf	56,1,b	;volatile
   872                           
   873                           ;MELONPAN1_lib_ver1.20.h: 944: PIE5bits.TMR2IE=1;
   874  000098  832E               	bsf	46,1,b	;volatile
   875                           
   876                           ;MELONPAN1_lib_ver1.20.h: 945: break;
   877  00009A  0012               	return	
   878  00009C                     l751:
   879                           
   880                           ;MELONPAN1_lib_ver1.20.h: 947: INTCONbits.PEIE=1;
   881  00009C  8CF2               	bsf	4082,6,c	;volatile
   882                           
   883                           ;MELONPAN1_lib_ver1.20.h: 948: PIR5bits.TMR4IF=0;
   884  00009E  010E               	movlb	14	; () banked
   885  0000A0  9738               	bcf	56,3,b	;volatile
   886                           
   887                           ;MELONPAN1_lib_ver1.20.h: 949: PIE5bits.TMR4IE=1;
   888  0000A2  872E               	bsf	46,3,b	;volatile
   889                           
   890                           ;MELONPAN1_lib_ver1.20.h: 950: break;
   891  0000A4  0012               	return	
   892  0000A6                     l752:
   893                           
   894                           ;MELONPAN1_lib_ver1.20.h: 952: INTCONbits.PEIE=1;
   895  0000A6  8CF2               	bsf	4082,6,c	;volatile
   896                           
   897                           ;MELONPAN1_lib_ver1.20.h: 953: PIR5bits.TMR6IF=0;
   898  0000A8  010E               	movlb	14	; () banked
   899  0000AA  9B38               	bcf	56,5,b	;volatile
   900                           
   901                           ;MELONPAN1_lib_ver1.20.h: 954: PIE5bits.TMR6IE=1;
   902  0000AC  8B2E               	bsf	46,5,b	;volatile
   903                           
   904                           ;MELONPAN1_lib_ver1.20.h: 955: break;
   905  0000AE  0012               	return	
   906  0000B0                     l753:
   907                           
   908                           ;MELONPAN1_lib_ver1.20.h: 957: INTCONbits.PEIE=1;
   909  0000B0  8CF2               	bsf	4082,6,c	;volatile
   910                           
   911                           ;MELONPAN1_lib_ver1.20.h: 958: PIR5bits.TMR8IF=0;
   912  0000B2  010E               	movlb	14	; () banked
   913  0000B4  9F38               	bcf	56,7,b	;volatile
   914                           
   915                           ;MELONPAN1_lib_ver1.20.h: 959: PIE5bits.TMR8IE=1;
   916  0000B6  8F2E               	bsf	46,7,b	;volatile
   917                           
   918                           ;MELONPAN1_lib_ver1.20.h: 960: break;
   919  0000B8  0012               	return	
   920  0000BA                     l754:
   921                           
   922                           ;MELONPAN1_lib_ver1.20.h: 962: INTCONbits.PEIE=1;
   923  0000BA  8CF2               	bsf	4082,6,c	;volatile
   924                           
   925                           ;MELONPAN1_lib_ver1.20.h: 963: PIE3bits.RC1IE=1;
   926  0000BC  010E               	movlb	14	; () banked
   927  0000BE  8B2C               	bsf	44,5,b	;volatile
   928                           
   929                           ;MELONPAN1_lib_ver1.20.h: 964: break;
   930  0000C0  0012               	return	
   931  0000C2                     l755:
   932                           
   933                           ;MELONPAN1_lib_ver1.20.h: 966: INTCONbits.PEIE=1;
   934  0000C2  8CF2               	bsf	4082,6,c	;volatile
   935                           
   936                           ;MELONPAN1_lib_ver1.20.h: 967: PIE3bits.RC2IE=1;
   937  0000C4  010E               	movlb	14	; () banked
   938  0000C6  8F2C               	bsf	44,7,b	;volatile
   939                           
   940                           ;MELONPAN1_lib_ver1.20.h: 968: break;
   941  0000C8  0012               	return	
   942  0000CA                     l756:
   943                           
   944                           ;MELONPAN1_lib_ver1.20.h: 970: INTCONbits.PEIE=1;
   945  0000CA  8CF2               	bsf	4082,6,c	;volatile
   946                           
   947                           ;MELONPAN1_lib_ver1.20.h: 971: PIE4bits.RC3IE=1;
   948  0000CC  010E               	movlb	14	; () banked
   949  0000CE  832D               	bsf	45,1,b	;volatile
   950                           
   951                           ;MELONPAN1_lib_ver1.20.h: 972: break;
   952  0000D0  0012               	return	
   953  0000D2                     l757:
   954                           
   955                           ;MELONPAN1_lib_ver1.20.h: 974: INTCONbits.PEIE=1;
   956  0000D2  8CF2               	bsf	4082,6,c	;volatile
   957                           
   958                           ;MELONPAN1_lib_ver1.20.h: 975: PIE4bits.RC4IE=1;
   959  0000D4  010E               	movlb	14	; () banked
   960  0000D6  872D               	bsf	45,3,b	;volatile
   961                           
   962                           ;MELONPAN1_lib_ver1.20.h: 976: break;
   963  0000D8  0012               	return	
   964  0000DA                     l758:
   965                           
   966                           ;MELONPAN1_lib_ver1.20.h: 978: INTCONbits.PEIE=1;
   967  0000DA  8CF2               	bsf	4082,6,c	;volatile
   968                           
   969                           ;MELONPAN1_lib_ver1.20.h: 979: PIE4bits.RC5IE=1;
   970  0000DC  010E               	movlb	14	; () banked
   971  0000DE  8B2D               	bsf	45,5,b	;volatile
   972                           
   973                           ;MELONPAN1_lib_ver1.20.h: 980: break;
   974  0000E0  0012               	return	
   975  0000E2                     l2028:
   976  0000E2  5045               	movf	enable_interrupts@data,w,c
   977                           
   978                           ; Switch size 1, requested type "simple"
   979                           ; Number of cases is 15, Range of values is 0 to 14
   980                           ; switch strategies available:
   981                           ; Name         Instructions Cycles
   982                           ; simple_byte           46    24 (average)
   983                           ;	Chosen strategy is simple_byte
   984  0000E4  0A00               	xorlw	0	; case 0
   985  0000E6  B4D8               	btfsc	status,2,c
   986  0000E8  D7B9               	goto	l743
   987  0000EA  0A01               	xorlw	1	; case 1
   988  0000EC  B4D8               	btfsc	status,2,c
   989  0000EE  D7B8               	goto	l745
   990  0000F0  0A03               	xorlw	3	; case 2
   991  0000F2  B4D8               	btfsc	status,2,c
   992  0000F4  D7BA               	goto	l746
   993  0000F6  0A01               	xorlw	1	; case 3
   994  0000F8  B4D8               	btfsc	status,2,c
   995  0000FA  D7CB               	goto	l750
   996  0000FC  0A07               	xorlw	7	; case 4
   997  0000FE  B4D8               	btfsc	status,2,c
   998  000100  D7B9               	goto	l747
   999  000102  0A01               	xorlw	1	; case 5
  1000  000104  B4D8               	btfsc	status,2,c
  1001  000106  D7CA               	goto	l751
  1002  000108  0A03               	xorlw	3	; case 6
  1003  00010A  B4D8               	btfsc	status,2,c
  1004  00010C  D7B8               	goto	l748
  1005  00010E  0A01               	xorlw	1	; case 7
  1006  000110  B4D8               	btfsc	status,2,c
  1007  000112  D7C9               	goto	l752
  1008  000114  0A0F               	xorlw	15	; case 8
  1009  000116  B4D8               	btfsc	status,2,c
  1010  000118  D7B7               	goto	l749
  1011  00011A  0A01               	xorlw	1	; case 9
  1012  00011C  B4D8               	btfsc	status,2,c
  1013  00011E  D7C8               	goto	l753
  1014  000120  0A03               	xorlw	3	; case 10
  1015  000122  B4D8               	btfsc	status,2,c
  1016  000124  D7CA               	goto	l754
  1017  000126  0A01               	xorlw	1	; case 11
  1018  000128  B4D8               	btfsc	status,2,c
  1019  00012A  D7CB               	goto	l755
  1020  00012C  0A07               	xorlw	7	; case 12
  1021  00012E  B4D8               	btfsc	status,2,c
  1022  000130  D7CC               	goto	l756
  1023  000132  0A01               	xorlw	1	; case 13
  1024  000134  B4D8               	btfsc	status,2,c
  1025  000136  D7CD               	goto	l757
  1026  000138  0A03               	xorlw	3	; case 14
  1027  00013A  A4D8               	btfss	status,2,c
  1028  00013C  0012               	return	
  1029  00013E  D7CD               	goto	l758
  1030  000140                     __end_of_enable_interrupts:
  1031                           	opt callstack 0
  1032                           
  1033 ;; *************** function _TIMER0_setup *****************
  1034 ;; Defined at:
  1035 ;;		line 708 in file "MELONPAN1_lib_ver1.20.h"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;  data            2    4[COMRAM] unsigned int 
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, status,2, status,0
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1052 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1053 ;;Total ram usage:        2 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    3
  1056 ;; This function calls:
  1057 ;;		Nothing
  1058 ;; This function is called by:
  1059 ;;		_read_ds_dual_init
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text5
  1064  0005F0                     __ptext5:
  1065                           	opt callstack 0
  1066  0005F0                     _TIMER0_setup:
  1067                           	opt callstack 26
  1068                           
  1069                           ;MELONPAN1_lib_ver1.20.h: 709: T0CON1=(char)((data>>8) & 0xff);
  1070                           
  1071                           ;incstack = 0
  1072  0005F0  5046               	movf	TIMER0_setup@data+1,w,c
  1073  0005F2  6ED6               	movwf	4054,c	;volatile
  1074                           
  1075                           ;MELONPAN1_lib_ver1.20.h: 710: T0CON0=((char)(data & 0xff)) | 0x80;
  1076  0005F4  5045               	movf	TIMER0_setup@data,w,c
  1077  0005F6  0980               	iorlw	128
  1078  0005F8  6ED5               	movwf	4053,c	;volatile
  1079  0005FA  0012               	return		;funcret
  1080  0005FC                     __end_of_TIMER0_setup:
  1081                           	opt callstack 0
  1082                           
  1083 ;; *************** function _TIMER0_16bit_set_count *****************
  1084 ;; Defined at:
  1085 ;;		line 721 in file "MELONPAN1_lib_ver1.20.h"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;  data            2    4[COMRAM] unsigned int 
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1099 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1102 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1103 ;;Total ram usage:        2 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    3
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_read_ds_dual_init
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text6
  1114  0005FC                     __ptext6:
  1115                           	opt callstack 0
  1116  0005FC                     _TIMER0_16bit_set_count:
  1117                           	opt callstack 26
  1118                           
  1119                           ;MELONPAN1_lib_ver1.20.h: 722: TMR0H=(char)(data>>8);
  1120                           
  1121                           ;incstack = 0
  1122  0005FC  5046               	movf	TIMER0_16bit_set_count@data+1,w,c
  1123  0005FE  6ED4               	movwf	4052,c	;volatile
  1124                           
  1125                           ;MELONPAN1_lib_ver1.20.h: 723: TMR0L=(char)(data);
  1126  000600  C045  FFD3         	movff	TIMER0_16bit_set_count@data,4051	;volatile
  1127  000604  0012               	return		;funcret
  1128  000606                     __end_of_TIMER0_16bit_set_count:
  1129                           	opt callstack 0
  1130                           
  1131 ;; *************** function _Serial1_begin *****************
  1132 ;; Defined at:
  1133 ;;		line 458 in file "MELONPAN1_lib_ver1.20.h"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  speed           2    4[COMRAM] unsigned int 
  1136 ;;  data            1    6[COMRAM] unsigned char 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;		None
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		wreg, status,2, status,0
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1148 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1151 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1152 ;;Total ram usage:        3 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    3
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_read_ds_dual_init
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text7
  1163  000386                     __ptext7:
  1164                           	opt callstack 0
  1165  000386                     _Serial1_begin:
  1166                           	opt callstack 26
  1167                           
  1168                           ;MELONPAN1_lib_ver1.20.h: 459: if(speed==115200){
  1169                           
  1170                           ;incstack = 0
  1171  000386  0EE1               	movlw	225
  1172  000388  1846               	xorwf	Serial1_begin@speed+1,w,c
  1173  00038A  1045               	iorwf	Serial1_begin@speed,w,c
  1174  00038C  A4D8               	btfss	status,2,c
  1175  00038E  D004               	goto	l3352
  1176                           
  1177                           ;MELONPAN1_lib_ver1.20.h: 463: SP1BRGH=0x01;
  1178  000390  0E01               	movlw	1
  1179  000392  6E9B               	movwf	3995,c	;volatile
  1180                           
  1181                           ;MELONPAN1_lib_ver1.20.h: 464: SP1BRGL=0x15;
  1182  000394  0E15               	movlw	21
  1183  000396  D029               	goto	L4
  1184  000398                     l3352:
  1185  000398  0E4B               	movlw	75
  1186  00039A  1846               	xorwf	Serial1_begin@speed+1,w,c
  1187  00039C  1045               	iorwf	Serial1_begin@speed,w,c
  1188  00039E  A4D8               	btfss	status,2,c
  1189  0003A0  D004               	goto	l3356
  1190                           
  1191                           ;MELONPAN1_lib_ver1.20.h: 466: SP1BRGH=0x03;
  1192  0003A2  0E03               	movlw	3
  1193  0003A4  6E9B               	movwf	3995,c	;volatile
  1194                           
  1195                           ;MELONPAN1_lib_ver1.20.h: 467: SP1BRGL=0x40;
  1196  0003A6  0E40               	movlw	64
  1197  0003A8  D020               	goto	L4
  1198  0003AA                     l3356:
  1199  0003AA  0E80               	movlw	128
  1200  0003AC  1845               	xorwf	Serial1_begin@speed,w,c
  1201  0003AE  E108               	bnz	l3360
  1202  0003B0  0E25               	movlw	37
  1203  0003B2  1846               	xorwf	Serial1_begin@speed+1,w,c
  1204  0003B4  A4D8               	btfss	status,2,c
  1205  0003B6  D004               	goto	l3360
  1206                           
  1207                           ;MELONPAN1_lib_ver1.20.h: 469: SP1BRGH=0x06;
  1208  0003B8  0E06               	movlw	6
  1209  0003BA  6E9B               	movwf	3995,c	;volatile
  1210                           
  1211                           ;MELONPAN1_lib_ver1.20.h: 470: SP1BRGL=0x82;
  1212  0003BC  0E82               	movlw	130
  1213  0003BE  D015               	goto	L4
  1214  0003C0                     l3360:
  1215  0003C0  0E60               	movlw	96
  1216  0003C2  1845               	xorwf	Serial1_begin@speed,w,c
  1217  0003C4  E108               	bnz	l3364
  1218  0003C6  0E09               	movlw	9
  1219  0003C8  1846               	xorwf	Serial1_begin@speed+1,w,c
  1220  0003CA  A4D8               	btfss	status,2,c
  1221  0003CC  D004               	goto	l3364
  1222                           
  1223                           ;MELONPAN1_lib_ver1.20.h: 472: SP1BRGH=0x1A;
  1224  0003CE  0E1A               	movlw	26
  1225  0003D0  6E9B               	movwf	3995,c	;volatile
  1226                           
  1227                           ;MELONPAN1_lib_ver1.20.h: 473: SP1BRGL=0x0A;
  1228  0003D2  0E0A               	movlw	10
  1229  0003D4  D00A               	goto	L4
  1230  0003D6                     l3364:
  1231  0003D6  0EB0               	movlw	176
  1232  0003D8  1845               	xorwf	Serial1_begin@speed,w,c
  1233  0003DA  E108               	bnz	l461
  1234  0003DC  0E04               	movlw	4
  1235  0003DE  1846               	xorwf	Serial1_begin@speed+1,w,c
  1236  0003E0  A4D8               	btfss	status,2,c
  1237  0003E2  D004               	goto	l461
  1238                           
  1239                           ;MELONPAN1_lib_ver1.20.h: 475: SP1BRGH=0x34;
  1240  0003E4  0E34               	movlw	52
  1241  0003E6  6E9B               	movwf	3995,c	;volatile
  1242                           
  1243                           ;MELONPAN1_lib_ver1.20.h: 476: SP1BRGL=0x14;
  1244  0003E8  0E14               	movlw	20
  1245  0003EA                     L4:
  1246  0003EA  6E9A               	movwf	3994,c	;volatile
  1247  0003EC                     l461:
  1248                           
  1249                           ;MELONPAN1_lib_ver1.20.h: 477: };MELONPAN1_lib_ver1.20.h: 479: TX1STA=0x24;
  1250  0003EC  0E24               	movlw	36
  1251  0003EE  6E9D               	movwf	3997,c	;volatile
  1252                           
  1253                           ;MELONPAN1_lib_ver1.20.h: 480: RC1STA=0x90;
  1254  0003F0  0E90               	movlw	144
  1255  0003F2  6E9C               	movwf	3996,c	;volatile
  1256                           
  1257                           ;MELONPAN1_lib_ver1.20.h: 481: BAUD1CON=0x08 | data;
  1258  0003F4  5047               	movf	Serial1_begin@data,w,c
  1259  0003F6  0908               	iorlw	8
  1260  0003F8  6E9E               	movwf	3998,c	;volatile
  1261  0003FA  0012               	return		;funcret
  1262  0003FC                     __end_of_Serial1_begin:
  1263                           	opt callstack 0
  1264                           
  1265 ;; *************** function _read_ds_dual_de_gozaru *****************
  1266 ;; Defined at:
  1267 ;;		line 130 in file "ds_dual_wood.h"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;		None
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1283 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1284 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1285 ;;Total ram usage:        1 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    5
  1288 ;; This function calls:
  1289 ;;		_BAD_de_gozaru
  1290 ;;		_GOOD_de_gozaru
  1291 ;;		_always_de_gozaru
  1292 ;; This function is called by:
  1293 ;;		_main
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text8
  1298  000140                     __ptext8:
  1299                           	opt callstack 0
  1300  000140                     _read_ds_dual_de_gozaru:
  1301                           	opt callstack 25
  1302                           
  1303                           ;ds_dual_wood.h: 131: static char read_number;;ds_dual_wood.h: 132: static char mode=0;;
      +                          ds_dual_wood.h: 133: static char check_sum;;ds_dual_wood.h: 134: static char first_commu
      +                          nication=1;;ds_dual_wood.h: 135: if(DS_read_stop){
  1304                           
  1305                           ;incstack = 0
  1306  000140  503F               	movf	_DS_read_stop,w,c
  1307  000142  B4D8               	btfsc	status,2,c
  1308  000144  D068               	goto	l3486
  1309                           
  1310                           ;ds_dual_wood.h: 136: DS_time_out=0;
  1311  000146  0E00               	movlw	0
  1312  000148  6E4F               	movwf	_DS_time_out,c
  1313                           
  1314                           ;ds_dual_wood.h: 137: switch(mode){
  1315  00014A  D05B               	goto	l3484
  1316  00014C                     l1002:
  1317                           
  1318                           ;ds_dual_wood.h: 139: DS_data[0]=sinyounai_DS_data[0];
  1319  00014C  C00E  F001         	movff	_sinyounai_DS_data,_DS_data
  1320                           
  1321                           ;ds_dual_wood.h: 140: read_number=1;
  1322  000150  0E01               	movlw	1
  1323  000152  6E3E               	movwf	read_ds_dual_de_gozaru@read_number,c
  1324                           
  1325                           ;ds_dual_wood.h: 141: check_sum=0x0d;
  1326  000154  0E0D               	movlw	13
  1327  000156  6E3C               	movwf	read_ds_dual_de_gozaru@check_sum,c
  1328                           
  1329                           ;ds_dual_wood.h: 142: mode=1;
  1330  000158  0E01               	movlw	1
  1331  00015A  D01B               	goto	L5
  1332  00015C                     l3448:
  1333                           
  1334                           ;ds_dual_wood.h: 145: DS_data[read_number]=sinyounai_DS_data[read_number];
  1335  00015C  0E0E               	movlw	low _sinyounai_DS_data
  1336  00015E  243E               	addwf	read_ds_dual_de_gozaru@read_number,w,c
  1337  000160  6ED9               	movwf	fsr2l,c
  1338  000162  6ADA               	clrf	fsr2h,c
  1339  000164  0E00               	movlw	high _sinyounai_DS_data
  1340  000166  22DA               	addwfc	fsr2h,f,c
  1341  000168  0E01               	movlw	low _DS_data
  1342  00016A  243E               	addwf	read_ds_dual_de_gozaru@read_number,w,c
  1343  00016C  6EE1               	movwf	fsr1l,c
  1344  00016E  6AE2               	clrf	fsr1h,c
  1345  000170  0E00               	movlw	high _DS_data
  1346  000172  22E2               	addwfc	fsr1h,f,c
  1347  000174  CFDF FFE7          	movff	indf2,indf1
  1348                           
  1349                           ;ds_dual_wood.h: 146: check_sum+=DS_data[read_number];
  1350  000178  0E01               	movlw	low _DS_data
  1351  00017A  243E               	addwf	read_ds_dual_de_gozaru@read_number,w,c
  1352  00017C  6ED9               	movwf	fsr2l,c
  1353  00017E  6ADA               	clrf	fsr2h,c
  1354  000180  0E00               	movlw	high _DS_data
  1355  000182  22DA               	addwfc	fsr2h,f,c
  1356  000184  50DF               	movf	indf2,w,c
  1357  000186  263C               	addwf	read_ds_dual_de_gozaru@check_sum,f,c
  1358                           
  1359                           ;ds_dual_wood.h: 147: read_number++;
  1360  000188  2A3E               	incf	read_ds_dual_de_gozaru@read_number,f,c
  1361                           
  1362                           ;ds_dual_wood.h: 148: if(read_number>13-2){
  1363  00018A  0E0B               	movlw	11
  1364  00018C  643E               	cpfsgt	read_ds_dual_de_gozaru@read_number,c
  1365  00018E  D043               	goto	l3486
  1366                           
  1367                           ;ds_dual_wood.h: 149: mode=2;
  1368  000190  0E02               	movlw	2
  1369  000192                     L5:
  1370  000192  6E3D               	movwf	read_ds_dual_de_gozaru@mode,c
  1371  000194  D040               	goto	l3486
  1372  000196                     l3458:
  1373                           
  1374                           ;ds_dual_wood.h: 153: DS_data[read_number]=sinyounai_DS_data[read_number];
  1375  000196  0E0E               	movlw	low _sinyounai_DS_data
  1376  000198  243E               	addwf	read_ds_dual_de_gozaru@read_number,w,c
  1377  00019A  6ED9               	movwf	fsr2l,c
  1378  00019C  6ADA               	clrf	fsr2h,c
  1379  00019E  0E00               	movlw	high _sinyounai_DS_data
  1380  0001A0  22DA               	addwfc	fsr2h,f,c
  1381  0001A2  0E01               	movlw	low _DS_data
  1382  0001A4  243E               	addwf	read_ds_dual_de_gozaru@read_number,w,c
  1383  0001A6  6EE1               	movwf	fsr1l,c
  1384  0001A8  6AE2               	clrf	fsr1h,c
  1385  0001AA  0E00               	movlw	high _DS_data
  1386  0001AC  22E2               	addwfc	fsr1h,f,c
  1387  0001AE  CFDF FFE7          	movff	indf2,indf1
  1388                           
  1389                           ;ds_dual_wood.h: 154: DS_uart_number=0;
  1390  0001B2  0E00               	movlw	0
  1391  0001B4  6E40               	movwf	_DS_uart_number,c
  1392                           
  1393                           ;ds_dual_wood.h: 155: DS_read_stop=0;
  1394  0001B6  0E00               	movlw	0
  1395  0001B8  6E3F               	movwf	_DS_read_stop,c
  1396                           
  1397                           ;ds_dual_wood.h: 156: mode=0;
  1398  0001BA  0E00               	movlw	0
  1399  0001BC  6E3D               	movwf	read_ds_dual_de_gozaru@mode,c
  1400                           
  1401                           ;ds_dual_wood.h: 157: if(DS_data[read_number]==check_sum){
  1402  0001BE  0E01               	movlw	low _DS_data
  1403  0001C0  243E               	addwf	read_ds_dual_de_gozaru@read_number,w,c
  1404  0001C2  6ED9               	movwf	fsr2l,c
  1405  0001C4  6ADA               	clrf	fsr2h,c
  1406  0001C6  0E00               	movlw	high _DS_data
  1407  0001C8  22DA               	addwfc	fsr2h,f,c
  1408  0001CA  503C               	movf	read_ds_dual_de_gozaru@check_sum,w,c
  1409  0001CC  18DE               	xorwf	postinc2,w,c
  1410  0001CE  A4D8               	btfss	status,2,c
  1411  0001D0  D015               	goto	l3480
  1412                           
  1413                           ;ds_dual_wood.h: 158: push_DS_data[0]=~before_DS_data[0] & DS_data[6];
  1414  0001D2  504C               	movf	_before_DS_data,w,c
  1415  0001D4  0AFF               	xorlw	255
  1416  0001D6  1407               	andwf	_DS_data+6,w,c
  1417  0001D8  6E39               	movwf	_push_DS_data,c
  1418                           
  1419                           ;ds_dual_wood.h: 159: push_DS_data[1]=~before_DS_data[1] & DS_data[7];
  1420  0001DA  504D               	movf	_before_DS_data+1,w,c
  1421  0001DC  0AFF               	xorlw	255
  1422  0001DE  1408               	andwf	_DS_data+7,w,c
  1423  0001E0  6E3A               	movwf	_push_DS_data+1,c
  1424                           
  1425                           ;ds_dual_wood.h: 160: before_DS_data[0]=DS_data[6];
  1426  0001E2  C007  F04C         	movff	_DS_data+6,_before_DS_data
  1427                           
  1428                           ;ds_dual_wood.h: 161: before_DS_data[1]=DS_data[7];
  1429  0001E6  C008  F04D         	movff	_DS_data+7,_before_DS_data+1
  1430                           
  1431                           ;ds_dual_wood.h: 162: DS_communication_error_time=0;
  1432  0001EA  0E00               	movlw	0
  1433  0001EC  6E38               	movwf	_DS_communication_error_time+1,c
  1434  0001EE  0E00               	movlw	0
  1435  0001F0  6E37               	movwf	_DS_communication_error_time,c
  1436                           
  1437                           ;ds_dual_wood.h: 163: first_communication=0;
  1438  0001F2  0E00               	movlw	0
  1439  0001F4  6E4E               	movwf	read_ds_dual_de_gozaru@first_communication,c
  1440                           
  1441                           ;ds_dual_wood.h: 164: GOOD_de_gozaru();
  1442  0001F6  EC38  F002         	call	_GOOD_de_gozaru	;wreg free
  1443                           
  1444                           ;ds_dual_wood.h: 165: }else{
  1445  0001FA  D00D               	goto	l3486
  1446  0001FC                     l3480:
  1447                           
  1448                           ;ds_dual_wood.h: 166: BAD_de_gozaru();
  1449  0001FC  EC17  F003         	call	_BAD_de_gozaru	;wreg free
  1450  000200  D00A               	goto	l3486
  1451  000202                     l3484:
  1452  000202  503D               	movf	read_ds_dual_de_gozaru@mode,w,c
  1453                           
  1454                           ; Switch size 1, requested type "simple"
  1455                           ; Number of cases is 3, Range of values is 0 to 2
  1456                           ; switch strategies available:
  1457                           ; Name         Instructions Cycles
  1458                           ; simple_byte           10     6 (average)
  1459                           ;	Chosen strategy is simple_byte
  1460  000204  0A00               	xorlw	0	; case 0
  1461  000206  B4D8               	btfsc	status,2,c
  1462  000208  D7A1               	goto	l1002
  1463  00020A  0A01               	xorlw	1	; case 1
  1464  00020C  B4D8               	btfsc	status,2,c
  1465  00020E  D7A6               	goto	l3448
  1466  000210  0A03               	xorlw	3	; case 2
  1467  000212  B4D8               	btfsc	status,2,c
  1468  000214  D7C0               	goto	l3458
  1469  000216                     l3486:
  1470                           
  1471                           ;ds_dual_wood.h: 170: };ds_dual_wood.h: 171: if(DS_time_out>10){
  1472  000216  0E0A               	movlw	10
  1473  000218  644F               	cpfsgt	_DS_time_out,c
  1474  00021A  D002               	goto	l1009
  1475                           
  1476                           ;ds_dual_wood.h: 172: BAD_de_gozaru();
  1477  00021C  EC17  F003         	call	_BAD_de_gozaru	;wreg free
  1478  000220                     l1009:
  1479                           
  1480                           ;ds_dual_wood.h: 173: };ds_dual_wood.h: 182: always_de_gozaru();
  1481  000220  EC1C  F003         	call	_always_de_gozaru	;wreg free
  1482  000224  0012               	return		;funcret
  1483  000226                     __end_of_read_ds_dual_de_gozaru:
  1484                           	opt callstack 0
  1485                           
  1486 ;; *************** function _always_de_gozaru *****************
  1487 ;; Defined at:
  1488 ;;		line 95 in file "MELON PAN1_main.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		None
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1506 ;;Total ram usage:        0 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; Hardware stack levels required when called:    3
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		_read_ds_dual_de_gozaru
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text9
  1517  000638                     __ptext9:
  1518                           	opt callstack 0
  1519  000638                     _always_de_gozaru:
  1520                           	opt callstack 26
  1521                           
  1522                           ;incstack = 0
  1523  000638  0012               	return		;funcret
  1524  00063A                     __end_of_always_de_gozaru:
  1525                           	opt callstack 0
  1526                           
  1527 ;; *************** function _GOOD_de_gozaru *****************
  1528 ;; Defined at:
  1529 ;;		line 69 in file "MELON PAN1_main.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2, status,0, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1545 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1546 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1547 ;;Total ram usage:        1 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    4
  1550 ;; This function calls:
  1551 ;;		_bit_test
  1552 ;;		_output_LED5
  1553 ;; This function is called by:
  1554 ;;		_read_ds_dual_de_gozaru
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text10
  1559  000470                     __ptext10:
  1560                           	opt callstack 0
  1561  000470                     _GOOD_de_gozaru:
  1562                           	opt callstack 25
  1563                           
  1564                           ;MELON PAN1_main.c: 72: LATDbits.LATD0=0;
  1565                           
  1566                           ;incstack = 0
  1567  000470  907C               	bcf	3964,0,c	;volatile
  1568                           
  1569                           ;MELON PAN1_main.c: 73: LATHbits.LATH2=1;
  1570  000472  8480               	bsf	3968,2,c	;volatile
  1571                           
  1572                           ;MELON PAN1_main.c: 75: if(DS_data[1]==0x00){
  1573  000474  5002               	movf	_DS_data+1,w,c
  1574  000476  A4D8               	btfss	status,2,c
  1575  000478  D003               	goto	l1167
  1576                           
  1577                           ;MELON PAN1_main.c: 76: output_LED5(DS_data[3]);
  1578  00047A  5004               	movf	_DS_data+3,w,c
  1579  00047C  EC83  F001         	call	_output_LED5
  1580  000480                     l1167:
  1581                           
  1582                           ;MELON PAN1_main.c: 77: };MELON PAN1_main.c: 79: if(bit_test(push_DS_data[1],5)){
  1583  000480  0E05               	movlw	5
  1584  000482  6E45               	movwf	bit_test@bit_place,c
  1585  000484  503A               	movf	_push_DS_data+1,w,c
  1586  000486  ECD5  F002         	call	_bit_test
  1587  00048A  0900               	iorlw	0
  1588  00048C  B4D8               	btfsc	status,2,c
  1589  00048E  D00F               	goto	l3386
  1590                           
  1591                           ;MELON PAN1_main.c: 80: LATHbits.LATH3=~LATHbits.LATH3;
  1592  000490  A680               	btfss	3968,3,c	;volatile
  1593  000492  D002               	goto	u1510
  1594  000494  0E01               	movlw	1
  1595  000496  D001               	goto	u1516
  1596  000498                     u1510:
  1597  000498  0E00               	movlw	0
  1598  00049A                     u1516:
  1599  00049A  0AFF               	xorlw	255
  1600  00049C  6E4A               	movwf	??_GOOD_de_gozaru& (0+255),c
  1601  00049E  464A               	rlncf	??_GOOD_de_gozaru,f,c
  1602  0004A0  464A               	rlncf	??_GOOD_de_gozaru,f,c
  1603  0004A2  464A               	rlncf	??_GOOD_de_gozaru,f,c
  1604  0004A4  5080               	movf	3968,w,c	;volatile
  1605  0004A6  184A               	xorwf	??_GOOD_de_gozaru,w,c
  1606  0004A8  0BF7               	andlw	-9
  1607  0004AA  184A               	xorwf	??_GOOD_de_gozaru,w,c
  1608  0004AC  6E80               	movwf	3968,c	;volatile
  1609  0004AE                     l3386:
  1610                           
  1611                           ;MELON PAN1_main.c: 82: };MELON PAN1_main.c: 83: if(bit_test(push_DS_data[1],6)){
  1612  0004AE  0E06               	movlw	6
  1613  0004B0  6E45               	movwf	bit_test@bit_place,c
  1614  0004B2  503A               	movf	_push_DS_data+1,w,c
  1615  0004B4  ECD5  F002         	call	_bit_test
  1616  0004B8  0900               	iorlw	0
  1617  0004BA  B4D8               	btfsc	status,2,c
  1618  0004BC  0012               	return	
  1619                           
  1620                           ;MELON PAN1_main.c: 84: LATDbits.LATD2=~LATDbits.LATD2;
  1621  0004BE  A47C               	btfss	3964,2,c	;volatile
  1622  0004C0  D002               	goto	u1530
  1623  0004C2  0E01               	movlw	1
  1624  0004C4  D001               	goto	u1536
  1625  0004C6                     u1530:
  1626  0004C6  0E00               	movlw	0
  1627  0004C8                     u1536:
  1628  0004C8  0AFF               	xorlw	255
  1629  0004CA  6E4A               	movwf	??_GOOD_de_gozaru& (0+255),c
  1630  0004CC  464A               	rlncf	??_GOOD_de_gozaru,f,c
  1631  0004CE  464A               	rlncf	??_GOOD_de_gozaru,f,c
  1632  0004D0  507C               	movf	3964,w,c	;volatile
  1633  0004D2  184A               	xorwf	??_GOOD_de_gozaru,w,c
  1634  0004D4  0BFB               	andlw	-5
  1635  0004D6  184A               	xorwf	??_GOOD_de_gozaru,w,c
  1636  0004D8  6E7C               	movwf	3964,c	;volatile
  1637  0004DA  0012               	return		;funcret
  1638  0004DC                     __end_of_GOOD_de_gozaru:
  1639                           	opt callstack 0
  1640                           
  1641 ;; *************** function _output_LED5 *****************
  1642 ;; Defined at:
  1643 ;;		line 151 in file "pindef.h"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  num             1    wreg     unsigned char 
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;  num             1    4[COMRAM] unsigned char 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      void 
  1650 ;; Registers used:
  1651 ;;		wreg, status,2, status,0
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1660 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1661 ;;Total ram usage:        1 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    3
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_GOOD_de_gozaru
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text11
  1672  000306                     __ptext11:
  1673                           	opt callstack 0
  1674  000306                     _output_LED5:
  1675                           	opt callstack 25
  1676                           
  1677                           ;incstack = 0
  1678                           ;output_LED5@num stored from wreg
  1679  000306  6E45               	movwf	output_LED5@num,c
  1680                           
  1681                           ;pindef.h: 152: switch(num){
  1682  000308  D02A               	goto	l1974
  1683  00030A                     l886:
  1684                           
  1685                           ;pindef.h: 154: LATEbits.LATE3=0;
  1686  00030A  967D               	bcf	3965,3,c	;volatile
  1687                           
  1688                           ;pindef.h: 155: LATEbits.LATE4=0;
  1689  00030C  987D               	bcf	3965,4,c	;volatile
  1690                           
  1691                           ;pindef.h: 156: LATEbits.LATE5=0;
  1692  00030E  9A7D               	bcf	3965,5,c	;volatile
  1693                           
  1694                           ;pindef.h: 157: LATEbits.LATE6=0;
  1695  000310  9C7D               	bcf	3965,6,c	;volatile
  1696                           
  1697                           ;pindef.h: 158: LATEbits.LATE7=0;
  1698  000312  9E7D               	bcf	3965,7,c	;volatile
  1699                           
  1700                           ;pindef.h: 159: break;
  1701  000314  0012               	return	
  1702  000316                     l888:
  1703                           
  1704                           ;pindef.h: 161: LATEbits.LATE3=0;
  1705  000316  967D               	bcf	3965,3,c	;volatile
  1706                           
  1707                           ;pindef.h: 162: LATEbits.LATE4=0;
  1708  000318  987D               	bcf	3965,4,c	;volatile
  1709                           
  1710                           ;pindef.h: 163: LATEbits.LATE5=0;
  1711  00031A  9A7D               	bcf	3965,5,c	;volatile
  1712                           
  1713                           ;pindef.h: 164: LATEbits.LATE6=0;
  1714  00031C  9C7D               	bcf	3965,6,c	;volatile
  1715                           
  1716                           ;pindef.h: 165: LATEbits.LATE7=1;
  1717  00031E  8E7D               	bsf	3965,7,c	;volatile
  1718                           
  1719                           ;pindef.h: 166: break;
  1720  000320  0012               	return	
  1721  000322                     l889:
  1722                           
  1723                           ;pindef.h: 168: LATEbits.LATE3=0;
  1724  000322  967D               	bcf	3965,3,c	;volatile
  1725                           
  1726                           ;pindef.h: 169: LATEbits.LATE4=0;
  1727  000324  987D               	bcf	3965,4,c	;volatile
  1728                           
  1729                           ;pindef.h: 170: LATEbits.LATE5=0;
  1730  000326  9A7D               	bcf	3965,5,c	;volatile
  1731                           
  1732                           ;pindef.h: 171: LATEbits.LATE6=1;
  1733  000328  8C7D               	bsf	3965,6,c	;volatile
  1734                           
  1735                           ;pindef.h: 172: LATEbits.LATE7=1;
  1736  00032A  8E7D               	bsf	3965,7,c	;volatile
  1737                           
  1738                           ;pindef.h: 173: break;
  1739  00032C  0012               	return	
  1740  00032E                     l890:
  1741                           
  1742                           ;pindef.h: 175: LATEbits.LATE3=0;
  1743  00032E  967D               	bcf	3965,3,c	;volatile
  1744                           
  1745                           ;pindef.h: 176: LATEbits.LATE4=0;
  1746  000330  987D               	bcf	3965,4,c	;volatile
  1747                           
  1748                           ;pindef.h: 177: LATEbits.LATE5=1;
  1749  000332  8A7D               	bsf	3965,5,c	;volatile
  1750                           
  1751                           ;pindef.h: 178: LATEbits.LATE6=1;
  1752  000334  8C7D               	bsf	3965,6,c	;volatile
  1753                           
  1754                           ;pindef.h: 179: LATEbits.LATE7=1;
  1755  000336  8E7D               	bsf	3965,7,c	;volatile
  1756                           
  1757                           ;pindef.h: 180: break;
  1758  000338  0012               	return	
  1759  00033A                     l891:
  1760                           
  1761                           ;pindef.h: 182: LATEbits.LATE3=0;
  1762  00033A  967D               	bcf	3965,3,c	;volatile
  1763                           
  1764                           ;pindef.h: 183: LATEbits.LATE4=1;
  1765  00033C  887D               	bsf	3965,4,c	;volatile
  1766                           
  1767                           ;pindef.h: 184: LATEbits.LATE5=1;
  1768  00033E  8A7D               	bsf	3965,5,c	;volatile
  1769                           
  1770                           ;pindef.h: 185: LATEbits.LATE6=1;
  1771  000340  8C7D               	bsf	3965,6,c	;volatile
  1772                           
  1773                           ;pindef.h: 186: LATEbits.LATE7=1;
  1774  000342  8E7D               	bsf	3965,7,c	;volatile
  1775                           
  1776                           ;pindef.h: 187: break;
  1777  000344  0012               	return	
  1778  000346                     l892:
  1779                           
  1780                           ;pindef.h: 189: LATEbits.LATE3=1;
  1781  000346  867D               	bsf	3965,3,c	;volatile
  1782                           
  1783                           ;pindef.h: 190: LATEbits.LATE4=1;
  1784  000348  887D               	bsf	3965,4,c	;volatile
  1785                           
  1786                           ;pindef.h: 191: LATEbits.LATE5=1;
  1787  00034A  8A7D               	bsf	3965,5,c	;volatile
  1788                           
  1789                           ;pindef.h: 192: LATEbits.LATE6=1;
  1790  00034C  8C7D               	bsf	3965,6,c	;volatile
  1791                           
  1792                           ;pindef.h: 193: LATEbits.LATE7=1;
  1793  00034E  8E7D               	bsf	3965,7,c	;volatile
  1794                           
  1795                           ;pindef.h: 194: break;
  1796  000350  0012               	return	
  1797  000352                     l893:
  1798                           
  1799                           ;pindef.h: 196: LATEbits.LATE3=0;
  1800  000352  967D               	bcf	3965,3,c	;volatile
  1801                           
  1802                           ;pindef.h: 197: LATEbits.LATE4=0;
  1803  000354  987D               	bcf	3965,4,c	;volatile
  1804                           
  1805                           ;pindef.h: 198: LATEbits.LATE5=0;
  1806  000356  9A7D               	bcf	3965,5,c	;volatile
  1807                           
  1808                           ;pindef.h: 199: LATEbits.LATE6=0;
  1809  000358  9C7D               	bcf	3965,6,c	;volatile
  1810                           
  1811                           ;pindef.h: 200: LATEbits.LATE7=0;
  1812  00035A  9E7D               	bcf	3965,7,c	;volatile
  1813                           
  1814                           ;pindef.h: 201: break;
  1815  00035C  0012               	return	
  1816  00035E                     l1974:
  1817  00035E  5045               	movf	output_LED5@num,w,c
  1818                           
  1819                           ; Switch size 1, requested type "simple"
  1820                           ; Number of cases is 6, Range of values is 0 to 5
  1821                           ; switch strategies available:
  1822                           ; Name         Instructions Cycles
  1823                           ; simple_byte           19    10 (average)
  1824                           ;	Chosen strategy is simple_byte
  1825  000360  0A00               	xorlw	0	; case 0
  1826  000362  B4D8               	btfsc	status,2,c
  1827  000364  D7D2               	goto	l886
  1828  000366  0A01               	xorlw	1	; case 1
  1829  000368  B4D8               	btfsc	status,2,c
  1830  00036A  D7D5               	goto	l888
  1831  00036C  0A03               	xorlw	3	; case 2
  1832  00036E  B4D8               	btfsc	status,2,c
  1833  000370  D7D8               	goto	l889
  1834  000372  0A01               	xorlw	1	; case 3
  1835  000374  B4D8               	btfsc	status,2,c
  1836  000376  D7DB               	goto	l890
  1837  000378  0A07               	xorlw	7	; case 4
  1838  00037A  B4D8               	btfsc	status,2,c
  1839  00037C  D7DE               	goto	l891
  1840  00037E  0A01               	xorlw	1	; case 5
  1841  000380  B4D8               	btfsc	status,2,c
  1842  000382  D7E1               	goto	l892
  1843  000384  D7E6               	goto	l893
  1844  000386                     __end_of_output_LED5:
  1845                           	opt callstack 0
  1846                           
  1847 ;; *************** function _bit_test *****************
  1848 ;; Defined at:
  1849 ;;		line 1191 in file "MELONPAN1_lib_ver1.20.h"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  number          1    wreg     unsigned char 
  1852 ;;  bit_place       1    4[COMRAM] unsigned char 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  number          1    7[COMRAM] unsigned char 
  1855 ;;  i               1    8[COMRAM] unsigned char 
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      unsigned char 
  1858 ;; Registers used:
  1859 ;;		wreg, status,2, status,0
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1865 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1866 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1867 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1868 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1869 ;;Total ram usage:        5 bytes
  1870 ;; Hardware stack levels used:    1
  1871 ;; Hardware stack levels required when called:    3
  1872 ;; This function calls:
  1873 ;;		Nothing
  1874 ;; This function is called by:
  1875 ;;		_GOOD_de_gozaru
  1876 ;;		_bit_clear
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text12
  1881  0005AA                     __ptext12:
  1882                           	opt callstack 0
  1883  0005AA                     _bit_test:
  1884                           	opt callstack 25
  1885                           
  1886                           ;incstack = 0
  1887                           ;bit_test@number stored from wreg
  1888  0005AA  6E48               	movwf	bit_test@number,c
  1889                           
  1890                           ;MELONPAN1_lib_ver1.20.h: 1192: char i;;MELONPAN1_lib_ver1.20.h: 1193: i=number & (0b000
      +                          00001<<bit_place);
  1891  0005AC  C045  F046         	movff	bit_test@bit_place,??_bit_test
  1892  0005B0  0E01               	movlw	1
  1893  0005B2  6E47               	movwf	(??_bit_test+1)& (0+255),c
  1894  0005B4  2A46               	incf	??_bit_test,f,c
  1895  0005B6  D002               	goto	u1424
  1896  0005B8                     u1425:
  1897  0005B8  90D8               	bcf	status,0,c
  1898  0005BA  3647               	rlcf	??_bit_test+1,f,c
  1899  0005BC                     u1424:
  1900  0005BC  2E46               	decfsz	??_bit_test,f,c
  1901  0005BE  D7FC               	goto	u1425
  1902  0005C0  5047               	movf	??_bit_test+1,w,c
  1903  0005C2  1448               	andwf	bit_test@number,w,c
  1904  0005C4  6E49               	movwf	bit_test@i,c
  1905                           
  1906                           ;MELONPAN1_lib_ver1.20.h: 1194: if(i>0){
  1907  0005C6  5049               	movf	bit_test@i,w,c
  1908  0005C8  B4D8               	btfsc	status,2,c
  1909  0005CA  D002               	goto	l3336
  1910                           
  1911                           ;MELONPAN1_lib_ver1.20.h: 1195: return 1;
  1912  0005CC  0E01               	movlw	1
  1913  0005CE  0012               	return	
  1914  0005D0                     l3336:
  1915                           
  1916                           ;MELONPAN1_lib_ver1.20.h: 1196: };MELONPAN1_lib_ver1.20.h: 1197: return 0;
  1917  0005D0  0E00               	movlw	0
  1918  0005D2  0012               	return		;funcret
  1919  0005D4                     __end_of_bit_test:
  1920                           	opt callstack 0
  1921                           
  1922 ;; *************** function _BAD_de_gozaru *****************
  1923 ;; Defined at:
  1924 ;;		line 90 in file "MELON PAN1_main.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;		None
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		None
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1942 ;;Total ram usage:        0 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    3
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_read_ds_dual_de_gozaru
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text13
  1953  00062E                     __ptext13:
  1954                           	opt callstack 0
  1955  00062E                     _BAD_de_gozaru:
  1956                           	opt callstack 26
  1957                           
  1958                           ;MELON PAN1_main.c: 91: LATHbits.LATH2=0;
  1959                           
  1960                           ;incstack = 0
  1961  00062E  9480               	bcf	3968,2,c	;volatile
  1962                           
  1963                           ;MELON PAN1_main.c: 92: LATDbits.LATD0=1;
  1964  000630  807C               	bsf	3964,0,c	;volatile
  1965  000632  0012               	return		;funcret
  1966  000634                     __end_of_BAD_de_gozaru:
  1967                           	opt callstack 0
  1968                           
  1969 ;; *************** function _pin_init *****************
  1970 ;; Defined at:
  1971 ;;		line 75 in file "pindef.h"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;		None
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;		None
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		wreg, status,2
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1989 ;;Total ram usage:        0 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    3
  1992 ;; This function calls:
  1993 ;;		Nothing
  1994 ;; This function is called by:
  1995 ;;		_main
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text14
  2000  000226                     __ptext14:
  2001                           	opt callstack 0
  2002  000226                     _pin_init:
  2003                           	opt callstack 27
  2004                           
  2005                           ;pindef.h: 77: LATA = 0x00;
  2006                           
  2007                           ;incstack = 0
  2008  000226  0E00               	movlw	0
  2009  000228  6E79               	movwf	3961,c	;volatile
  2010                           
  2011                           ;pindef.h: 78: LATB = 0x00;
  2012  00022A  0E00               	movlw	0
  2013  00022C  6E7A               	movwf	3962,c	;volatile
  2014                           
  2015                           ;pindef.h: 79: LATC = 0x00;
  2016  00022E  0E00               	movlw	0
  2017  000230  6E7B               	movwf	3963,c	;volatile
  2018                           
  2019                           ;pindef.h: 80: LATD = 0x50;
  2020  000232  0E50               	movlw	80
  2021  000234  6E7C               	movwf	3964,c	;volatile
  2022                           
  2023                           ;pindef.h: 81: LATE = 0x00;
  2024  000236  0E00               	movlw	0
  2025  000238  6E7D               	movwf	3965,c	;volatile
  2026                           
  2027                           ;pindef.h: 82: LATF = 0x00;
  2028  00023A  0E00               	movlw	0
  2029  00023C  6E7E               	movwf	3966,c	;volatile
  2030                           
  2031                           ;pindef.h: 83: LATG = 0x00;
  2032  00023E  0E00               	movlw	0
  2033  000240  6E7F               	movwf	3967,c	;volatile
  2034                           
  2035                           ;pindef.h: 84: LATH = 0x00;
  2036  000242  0E00               	movlw	0
  2037  000244  6E80               	movwf	3968,c	;volatile
  2038                           
  2039                           ;pindef.h: 87: TRISA = 0b11000000;
  2040  000246  0EC0               	movlw	192
  2041  000248  6E81               	movwf	3969,c	;volatile
  2042                           
  2043                           ;pindef.h: 88: TRISB = 0b11111111;
  2044  00024A  6882               	setf	3970,c	;volatile
  2045                           
  2046                           ;pindef.h: 89: TRISC = 0b10111110;
  2047  00024C  0EBE               	movlw	190
  2048  00024E  6E83               	movwf	3971,c	;volatile
  2049                           
  2050                           ;pindef.h: 90: TRISD = 0b10101000;
  2051  000250  0EA8               	movlw	168
  2052  000252  6E84               	movwf	3972,c	;volatile
  2053                           
  2054                           ;pindef.h: 91: TRISE = 0b00000000;
  2055  000254  0E00               	movlw	0
  2056  000256  6E85               	movwf	3973,c	;volatile
  2057                           
  2058                           ;pindef.h: 92: TRISF = 0b11111111;
  2059  000258  6886               	setf	3974,c	;volatile
  2060                           
  2061                           ;pindef.h: 93: TRISG = 0b10111100;
  2062  00025A  0EBC               	movlw	188
  2063  00025C  6E87               	movwf	3975,c	;volatile
  2064                           
  2065                           ;pindef.h: 94: TRISH = 0b11110000;
  2066  00025E  0EF0               	movlw	240
  2067  000260  6E88               	movwf	3976,c	;volatile
  2068                           
  2069                           ;pindef.h: 106: ANSELA = 0x00;
  2070  000262  0E00               	movlw	0
  2071  000264  010E               	movlb	14	; () banked
  2072  000266  6F92               	movwf	146,b	;volatile
  2073                           
  2074                           ;pindef.h: 107: ANSELB = 0x00;
  2075  000268  0E00               	movlw	0
  2076  00026A  6F9A               	movwf	154,b	;volatile
  2077                           
  2078                           ;pindef.h: 108: ANSELD = 0x00;
  2079  00026C  0E00               	movlw	0
  2080  00026E  6FA7               	movwf	167,b	;volatile
  2081                           
  2082                           ;pindef.h: 109: ANSELE = 0x00;
  2083  000270  0E00               	movlw	0
  2084  000272  6FAF               	movwf	175,b	;volatile
  2085                           
  2086                           ;pindef.h: 110: ANSELF = 0x00;
  2087  000274  0E00               	movlw	0
  2088  000276  6FB4               	movwf	180,b	;volatile
  2089                           
  2090                           ;pindef.h: 111: ANSELG = 0x00;
  2091  000278  0E00               	movlw	0
  2092  00027A  6FBC               	movwf	188,b	;volatile
  2093                           
  2094                           ;pindef.h: 114: WPUA = 0x00;
  2095  00027C  0E00               	movlw	0
  2096  00027E  6F91               	movwf	145,b	;volatile
  2097                           
  2098                           ;pindef.h: 115: WPUB = 0x00;
  2099  000280  0E00               	movlw	0
  2100  000282  6F99               	movwf	153,b	;volatile
  2101                           
  2102                           ;pindef.h: 116: WPUC = 0x00;
  2103  000284  0E00               	movlw	0
  2104  000286  6FA1               	movwf	161,b	;volatile
  2105                           
  2106                           ;pindef.h: 117: WPUD = 0x00;
  2107  000288  0E00               	movlw	0
  2108  00028A  6FA6               	movwf	166,b	;volatile
  2109                           
  2110                           ;pindef.h: 118: WPUE = 0x00;
  2111  00028C  0E00               	movlw	0
  2112  00028E  6FAE               	movwf	174,b	;volatile
  2113                           
  2114                           ;pindef.h: 119: WPUF = 0x00;
  2115  000290  0E00               	movlw	0
  2116  000292  6FB3               	movwf	179,b	;volatile
  2117                           
  2118                           ;pindef.h: 120: WPUG = 0x00;
  2119  000294  0E00               	movlw	0
  2120  000296  6FBB               	movwf	187,b	;volatile
  2121                           
  2122                           ;pindef.h: 121: WPUH = 0x00;
  2123  000298  0E00               	movlw	0
  2124  00029A  6FC0               	movwf	192,b	;volatile
  2125                           
  2126                           ;pindef.h: 124: ODCONA = 0x00;
  2127  00029C  0E00               	movlw	0
  2128  00029E  6F90               	movwf	144,b	;volatile
  2129                           
  2130                           ;pindef.h: 125: ODCONB = 0x00;
  2131  0002A0  0E00               	movlw	0
  2132  0002A2  6F98               	movwf	152,b	;volatile
  2133                           
  2134                           ;pindef.h: 126: ODCONC = 0x00;
  2135  0002A4  0E00               	movlw	0
  2136  0002A6  6FA0               	movwf	160,b	;volatile
  2137                           
  2138                           ;pindef.h: 127: ODCOND = 0x00;
  2139  0002A8  0E00               	movlw	0
  2140  0002AA  6FA5               	movwf	165,b	;volatile
  2141                           
  2142                           ;pindef.h: 128: ODCONE = 0x00;
  2143  0002AC  0E00               	movlw	0
  2144  0002AE  6FAD               	movwf	173,b	;volatile
  2145                           
  2146                           ;pindef.h: 129: ODCONF = 0x00;
  2147  0002B0  0E00               	movlw	0
  2148  0002B2  6FB2               	movwf	178,b	;volatile
  2149                           
  2150                           ;pindef.h: 130: ODCONG = 0x00;
  2151  0002B4  0E00               	movlw	0
  2152  0002B6  6FBA               	movwf	186,b	;volatile
  2153                           
  2154                           ;pindef.h: 131: ODCONH = 0x00;
  2155  0002B8  0E00               	movlw	0
  2156  0002BA  6FBF               	movwf	191,b	;volatile
  2157                           
  2158                           ;pindef.h: 134: RC0PPS = 0x1A;
  2159  0002BC  0E1A               	movlw	26
  2160  0002BE  6F62               	movwf	98,b	;volatile
  2161                           
  2162                           ;pindef.h: 135: SSP1DATPPSbits.SSP1DATPPS = 0x11;
  2163  0002C0  511A               	movf	26,w,b	;volatile
  2164  0002C2  0BC0               	andlw	-64
  2165  0002C4  0911               	iorlw	17
  2166  0002C6  6F1A               	movwf	26,b	;volatile
  2167                           
  2168                           ;pindef.h: 136: SSP1CLKPPSbits.SSP1CLKPPS = 0x16;
  2169  0002C8  5119               	movf	25,w,b	;volatile
  2170  0002CA  0BC0               	andlw	-64
  2171  0002CC  0916               	iorlw	22
  2172  0002CE  6F19               	movwf	25,b	;volatile
  2173                           
  2174                           ;pindef.h: 137: RC6PPS = 0x19;
  2175  0002D0  0E19               	movlw	25
  2176  0002D2  6F68               	movwf	104,b	;volatile
  2177                           
  2178                           ;pindef.h: 139: RB0PPS = 0x1C;
  2179  0002D4  0E1C               	movlw	28
  2180  0002D6  6F5A               	movwf	90,b	;volatile
  2181                           
  2182                           ;pindef.h: 140: RB1PPS = 0x1B;
  2183  0002D8  0E1B               	movlw	27
  2184  0002DA  6F5B               	movwf	91,b	;volatile
  2185                           
  2186                           ;pindef.h: 141: SSP2DATPPSbits.SSP2DATPPS = 0x08;
  2187  0002DC  511D               	movf	29,w,b	;volatile
  2188  0002DE  0BC0               	andlw	-64
  2189  0002E0  0908               	iorlw	8
  2190  0002E2  6F1D               	movwf	29,b	;volatile
  2191                           
  2192                           ;pindef.h: 142: SSP2CLKPPSbits.SSP2CLKPPS = 0x09;
  2193  0002E4  511C               	movf	28,w,b	;volatile
  2194  0002E6  0BC0               	andlw	-64
  2195  0002E8  0909               	iorlw	9
  2196  0002EA  6F1C               	movwf	28,b	;volatile
  2197                           
  2198                           ;pindef.h: 144: RX1PPSbits.RX1PPS = 0x1B;
  2199  0002EC  510F               	movf	15,w,b	;volatile
  2200  0002EE  0BC0               	andlw	-64
  2201  0002F0  091B               	iorlw	27
  2202  0002F2  6F0F               	movwf	15,b	;volatile
  2203                           
  2204                           ;pindef.h: 145: RD4PPS = 0x0C;
  2205  0002F4  0E0C               	movlw	12
  2206  0002F6  6F6E               	movwf	110,b	;volatile
  2207                           
  2208                           ;pindef.h: 147: RX2PPSbits.RX2PPS = 0x1D;
  2209  0002F8  5111               	movf	17,w,b	;volatile
  2210  0002FA  0BC0               	andlw	-64
  2211  0002FC  091D               	iorlw	29
  2212  0002FE  6F11               	movwf	17,b	;volatile
  2213                           
  2214                           ;pindef.h: 148: RD6PPS = 0x0E;
  2215  000300  0E0E               	movlw	14
  2216  000302  6F70               	movwf	112,b	;volatile
  2217                           
  2218                           ; BSR set to: 14
  2219  000304  0012               	return		;funcret
  2220  000306                     __end_of_pin_init:
  2221                           	opt callstack 0
  2222                           
  2223 ;; *************** function _TIMER1_setup *****************
  2224 ;; Defined at:
  2225 ;;		line 735 in file "MELONPAN1_lib_ver1.20.h"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;  data            2    4[COMRAM] unsigned int 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;		None
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  1    wreg      void 
  2232 ;; Registers used:
  2233 ;;		wreg, status,2, status,0
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2242 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2243 ;;Total ram usage:        2 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:    3
  2246 ;; This function calls:
  2247 ;;		Nothing
  2248 ;; This function is called by:
  2249 ;;		_main
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text15
  2254  0005D4                     __ptext15:
  2255                           	opt callstack 0
  2256  0005D4                     _TIMER1_setup:
  2257                           	opt callstack 27
  2258                           
  2259                           ;MELONPAN1_lib_ver1.20.h: 736: T1GCON=0;
  2260                           
  2261                           ; BSR set to: 14
  2262                           ;incstack = 0
  2263  0005D4  0E00               	movlw	0
  2264  0005D6  6ED0               	movwf	4048,c	;volatile
  2265                           
  2266                           ;MELONPAN1_lib_ver1.20.h: 737: TMR1CLK=(char)((data>>8) & 0xff);
  2267  0005D8  5046               	movf	TIMER1_setup@data+1,w,c
  2268  0005DA  6ED2               	movwf	4050,c	;volatile
  2269                           
  2270                           ;MELONPAN1_lib_ver1.20.h: 738: T1CON=((char)(data & 0xff)) | 0x03;
  2271  0005DC  5045               	movf	TIMER1_setup@data,w,c
  2272  0005DE  0903               	iorlw	3
  2273  0005E0  6ECF               	movwf	4047,c	;volatile
  2274  0005E2  0012               	return		;funcret
  2275  0005E4                     __end_of_TIMER1_setup:
  2276                           	opt callstack 0
  2277                           
  2278 ;; *************** function _TIMER1_set_count *****************
  2279 ;; Defined at:
  2280 ;;		line 745 in file "MELONPAN1_lib_ver1.20.h"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  data            2    4[COMRAM] unsigned int 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, status,2
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2298 ;;Total ram usage:        2 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; Hardware stack levels required when called:    3
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_main
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text16
  2309  000606                     __ptext16:
  2310                           	opt callstack 0
  2311  000606                     _TIMER1_set_count:
  2312                           	opt callstack 27
  2313                           
  2314                           ;MELONPAN1_lib_ver1.20.h: 746: TMR1H=(char)(data>>8);
  2315                           
  2316                           ;incstack = 0
  2317  000606  5046               	movf	TIMER1_set_count@data+1,w,c
  2318  000608  6ECE               	movwf	4046,c	;volatile
  2319                           
  2320                           ;MELONPAN1_lib_ver1.20.h: 747: TMR1L=(char)(data);
  2321  00060A  C045  FFCD         	movff	TIMER1_set_count@data,4045	;volatile
  2322  00060E  0012               	return		;funcret
  2323  000610                     __end_of_TIMER1_set_count:
  2324                           	opt callstack 0
  2325                           
  2326 ;; *************** function _wood_isr *****************
  2327 ;; Defined at:
  2328 ;;		line 16 in file "MELON PAN1_main.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;		None
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;		None
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2344 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2345 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2346 ;;Total ram usage:        2 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    2
  2349 ;; This function calls:
  2350 ;;		_read_ds_dual_byte
  2351 ;;		i2_TIMER0_16bit_set_count
  2352 ;;		i2_TIMER1_set_count
  2353 ;; This function is called by:
  2354 ;;		Interrupt level 2
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	intcode
  2359  000008                     __pintcode:
  2360                           	opt callstack 0
  2361  000008                     _wood_isr:
  2362                           	opt callstack 25
  2363                           
  2364                           ;incstack = 0
  2365  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2366  00000A  CFD9 F043          	movff	fsr2l,??_wood_isr
  2367  00000E  CFDA F044          	movff	fsr2h,??_wood_isr+1
  2368                           
  2369                           ;MELON PAN1_main.c: 17: if(PIR3bits.RC1IF){
  2370  000012  010E               	movlb	14	; () banked
  2371  000014  BB36               	btfsc	54,5,b	;volatile
  2372                           
  2373                           ; BSR set to: 14
  2374                           ;MELON PAN1_main.c: 19: read_ds_dual_byte();
  2375  000016  ECFE  F001         	call	_read_ds_dual_byte	;wreg free
  2376                           
  2377                           ;MELON PAN1_main.c: 20: };MELON PAN1_main.c: 21: if(PIR0bits.TMR0IF){
  2378  00001A  010E               	movlb	14	; () banked
  2379  00001C  AB33               	btfss	51,5,b	;volatile
  2380  00001E  D00A               	goto	i2l3518
  2381                           
  2382                           ; BSR set to: 14
  2383                           ;MELON PAN1_main.c: 22: PIR0bits.TMR0IF=0;
  2384  000020  9B33               	bcf	51,5,b	;volatile
  2385                           
  2386                           ; BSR set to: 14
  2387                           ;MELON PAN1_main.c: 24: TIMER0_16bit_set_count(25536);
  2388  000022  0E63               	movlw	99
  2389  000024  6E42               	movwf	i2TIMER0_16bit_set_count@data+1,c
  2390  000026  0EC0               	movlw	192
  2391  000028  6E41               	movwf	i2TIMER0_16bit_set_count@data,c
  2392  00002A  EC0D  F003         	call	i2_TIMER0_16bit_set_count	;wreg free
  2393                           
  2394                           ;MELON PAN1_main.c: 26: DS_time_out++;
  2395  00002E  2A4F               	incf	_DS_time_out,f,c
  2396                           
  2397                           ;MELON PAN1_main.c: 27: DS_communication_error_time++;
  2398  000030  4A37               	infsnz	_DS_communication_error_time,f,c
  2399  000032  2A38               	incf	_DS_communication_error_time+1,f,c
  2400  000034                     i2l3518:
  2401                           
  2402                           ;MELON PAN1_main.c: 28: };MELON PAN1_main.c: 29: if(PIR5bits.TMR1IF){
  2403  000034  010E               	movlb	14	; () banked
  2404  000036  A138               	btfss	56,0,b	;volatile
  2405  000038  D007               	goto	i2l1156
  2406                           
  2407                           ; BSR set to: 14
  2408                           ;MELON PAN1_main.c: 30: PIR5bits.TMR1IF=0;
  2409  00003A  9138               	bcf	56,0,b	;volatile
  2410                           
  2411                           ; BSR set to: 14
  2412                           ;MELON PAN1_main.c: 32: TIMER1_set_count(25536);
  2413  00003C  0E63               	movlw	99
  2414  00003E  6E42               	movwf	i2TIMER1_set_count@data+1,c
  2415  000040  0EC0               	movlw	192
  2416  000042  6E41               	movwf	i2TIMER1_set_count@data,c
  2417  000044  EC08  F003         	call	i2_TIMER1_set_count	;wreg free
  2418  000048                     i2l1156:
  2419  000048  C044  FFDA         	movff	??_wood_isr+1,fsr2h
  2420  00004C  C043  FFD9         	movff	??_wood_isr,fsr2l
  2421  000050  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2422  000052  0011               	retfie		f
  2423  000054                     __end_of_wood_isr:
  2424                           	opt callstack 0
  2425                           
  2426 ;; *************** function i2_TIMER1_set_count *****************
  2427 ;; Defined at:
  2428 ;;		line 745 in file "MELONPAN1_lib_ver1.20.h"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  data            2    0[COMRAM] unsigned int 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2445 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2446 ;;Total ram usage:        2 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; This function calls:
  2449 ;;		Nothing
  2450 ;; This function is called by:
  2451 ;;		_wood_isr
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text18
  2456  000610                     __ptext18:
  2457                           	opt callstack 0
  2458  000610                     i2_TIMER1_set_count:
  2459                           	opt callstack 26
  2460                           
  2461                           ;MELONPAN1_lib_ver1.20.h: 746: TMR1H=(char)(data>>8);
  2462                           
  2463                           ;incstack = 0
  2464  000610  5042               	movf	i2TIMER1_set_count@data+1,w,c
  2465  000612  6ECE               	movwf	4046,c	;volatile
  2466                           
  2467                           ;MELONPAN1_lib_ver1.20.h: 747: TMR1L=(char)(data);
  2468  000614  C041  FFCD         	movff	i2TIMER1_set_count@data,4045	;volatile
  2469  000618  0012               	return		;funcret
  2470  00061A                     __end_ofi2_TIMER1_set_count:
  2471                           	opt callstack 0
  2472                           
  2473 ;; *************** function i2_TIMER0_16bit_set_count *****************
  2474 ;; Defined at:
  2475 ;;		line 721 in file "MELONPAN1_lib_ver1.20.h"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  data            2    0[COMRAM] unsigned int 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		wreg, status,2
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2492 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2493 ;;Total ram usage:        2 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; This function calls:
  2496 ;;		Nothing
  2497 ;; This function is called by:
  2498 ;;		_wood_isr
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           	psect	text19
  2503  00061A                     __ptext19:
  2504                           	opt callstack 0
  2505  00061A                     i2_TIMER0_16bit_set_count:
  2506                           	opt callstack 26
  2507                           
  2508                           ;MELONPAN1_lib_ver1.20.h: 722: TMR0H=(char)(data>>8);
  2509                           
  2510                           ;incstack = 0
  2511  00061A  5042               	movf	i2TIMER0_16bit_set_count@data+1,w,c
  2512  00061C  6ED4               	movwf	4052,c	;volatile
  2513                           
  2514                           ;MELONPAN1_lib_ver1.20.h: 723: TMR0L=(char)(data);
  2515  00061E  C041  FFD3         	movff	i2TIMER0_16bit_set_count@data,4051	;volatile
  2516  000622  0012               	return		;funcret
  2517  000624                     __end_ofi2_TIMER0_16bit_set_count:
  2518                           	opt callstack 0
  2519                           
  2520 ;; *************** function _read_ds_dual_byte *****************
  2521 ;; Defined at:
  2522 ;;		line 112 in file "ds_dual_wood.h"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;		None
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2538 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2540 ;;Total ram usage:        1 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; Hardware stack levels required when called:    1
  2543 ;; This function calls:
  2544 ;;		_Serial1_read
  2545 ;; This function is called by:
  2546 ;;		_wood_isr
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text20
  2551  0003FC                     __ptext20:
  2552                           	opt callstack 0
  2553  0003FC                     _read_ds_dual_byte:
  2554                           	opt callstack 25
  2555                           
  2556                           ;ds_dual_wood.h: 113: if(DS_read_stop==0){
  2557                           
  2558                           ;incstack = 0
  2559  0003FC  503F               	movf	_DS_read_stop,w,c
  2560  0003FE  A4D8               	btfss	status,2,c
  2561  000400  D034               	goto	i2l2226
  2562                           
  2563                           ;ds_dual_wood.h: 114: sinyounai_DS_data[DS_uart_number]=Serial1_read();
  2564  000402  0E0E               	movlw	low _sinyounai_DS_data
  2565  000404  2440               	addwf	_DS_uart_number,w,c
  2566  000406  6ED9               	movwf	fsr2l,c
  2567  000408  6ADA               	clrf	fsr2h,c
  2568  00040A  0E00               	movlw	high _sinyounai_DS_data
  2569  00040C  22DA               	addwfc	fsr2h,f,c
  2570  00040E  EC12  F003         	call	_Serial1_read	;wreg free
  2571  000412  6EDF               	movwf	indf2,c
  2572                           
  2573                           ;ds_dual_wood.h: 115: if(DS_uart_number==1 && sinyounai_DS_data[DS_uart_number]==0x0D){
  2574  000414  0440               	decf	_DS_uart_number,w,c
  2575  000416  A4D8               	btfss	status,2,c
  2576  000418  D00D               	goto	i2l2208
  2577  00041A  0E0E               	movlw	low _sinyounai_DS_data
  2578  00041C  2440               	addwf	_DS_uart_number,w,c
  2579  00041E  6ED9               	movwf	fsr2l,c
  2580  000420  6ADA               	clrf	fsr2h,c
  2581  000422  0E00               	movlw	high _sinyounai_DS_data
  2582  000424  22DA               	addwfc	fsr2h,f,c
  2583  000426  0E0D               	movlw	13
  2584  000428  18DE               	xorwf	postinc2,w,c
  2585  00042A  A4D8               	btfss	status,2,c
  2586  00042C  D003               	goto	i2l2208
  2587                           
  2588                           ;ds_dual_wood.h: 116: DS_uart_number=1;
  2589  00042E  0E01               	movlw	1
  2590  000430  6E40               	movwf	_DS_uart_number,c
  2591                           
  2592                           ;ds_dual_wood.h: 117: }else if((DS_uart_number==0 && sinyounai_DS_data[0]!=0x0D)||(DS_ua
      +                          rt_number==1 && sinyounai_DS_data[1]!=0x00 && sinyounai_DS_data[1]!=0xCB)){
  2593  000432  0012               	return	
  2594  000434                     i2l2208:
  2595  000434  5040               	movf	_DS_uart_number,w,c
  2596  000436  A4D8               	btfss	status,2,c
  2597  000438  D004               	goto	i2u45_40
  2598  00043A  0E0D               	movlw	13
  2599  00043C  180E               	xorwf	_sinyounai_DS_data,w,c
  2600  00043E  A4D8               	btfss	status,2,c
  2601  000440  D00A               	goto	i2u48_40
  2602  000442                     i2u45_40:
  2603  000442  0440               	decf	_DS_uart_number,w,c
  2604  000444  A4D8               	btfss	status,2,c
  2605  000446  D00A               	goto	i2l2220
  2606  000448  500F               	movf	_sinyounai_DS_data+1,w,c
  2607  00044A  B4D8               	btfsc	status,2,c
  2608  00044C  D007               	goto	i2l2220
  2609  00044E  0ECB               	movlw	203
  2610  000450  180F               	xorwf	_sinyounai_DS_data+1,w,c
  2611  000452  B4D8               	btfsc	status,2,c
  2612  000454  D003               	goto	i2l2220
  2613  000456                     i2u48_40:
  2614                           
  2615                           ;ds_dual_wood.h: 118: DS_uart_number=0;
  2616  000456  0E00               	movlw	0
  2617  000458  6E40               	movwf	_DS_uart_number,c
  2618                           
  2619                           ;ds_dual_wood.h: 119: }else{
  2620  00045A  0012               	return	
  2621  00045C                     i2l2220:
  2622                           
  2623                           ;ds_dual_wood.h: 120: DS_uart_number++;
  2624  00045C  2A40               	incf	_DS_uart_number,f,c
  2625                           
  2626                           ;ds_dual_wood.h: 121: if(DS_uart_number>(13-1)){
  2627  00045E  0E0C               	movlw	12
  2628  000460  6440               	cpfsgt	_DS_uart_number,c
  2629  000462  0012               	return	
  2630                           
  2631                           ;ds_dual_wood.h: 122: DS_read_stop=1;
  2632  000464  0E01               	movlw	1
  2633  000466  6E3F               	movwf	_DS_read_stop,c
  2634                           
  2635                           ;ds_dual_wood.h: 123: };ds_dual_wood.h: 124: };ds_dual_wood.h: 125: }else{
  2636  000468  0012               	return	
  2637  00046A                     i2l2226:
  2638                           
  2639                           ;ds_dual_wood.h: 126: Serial1_read();
  2640  00046A  EC12  F003         	call	_Serial1_read	;wreg free
  2641  00046E  0012               	return		;funcret
  2642  000470                     __end_of_read_ds_dual_byte:
  2643                           	opt callstack 0
  2644                           
  2645 ;; *************** function _Serial1_read *****************
  2646 ;; Defined at:
  2647 ;;		line 490 in file "MELONPAN1_lib_ver1.20.h"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      unsigned char 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2665 ;;Total ram usage:        0 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_read_ds_dual_byte
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text21
  2675  000624                     __ptext21:
  2676                           	opt callstack 0
  2677  000624                     _Serial1_read:
  2678                           	opt callstack 25
  2679                           
  2680                           ;MELONPAN1_lib_ver1.20.h: 491: while(!PIR3bits.RC1IF);
  2681                           
  2682                           ;incstack = 0
  2683  000624  010E               	movlb	14	; () banked
  2684  000626  AB36               	btfss	54,5,b	;volatile
  2685  000628  D7FD               	goto	_Serial1_read
  2686                           
  2687                           ; BSR set to: 14
  2688                           ;MELONPAN1_lib_ver1.20.h: 492: return RC1REG;
  2689  00062A  5098               	movf	3992,w,c	;volatile
  2690                           
  2691                           ; BSR set to: 14
  2692  00062C  0012               	return		;funcret
  2693  00062E                     __end_of_Serial1_read:
  2694                           	opt callstack 0
  2695  0000                     
  2696                           	psect	rparam
  2697  0000                     
  2698                           	psect	temp
  2699  000050                     btemp:
  2700                           	opt callstack 0
  2701  000050                     	ds	1
  2702  0000                     int$flags	set	btemp
  2703  0000                     wtemp8	set	btemp+1
  2704  0000                     ttemp5	set	btemp+1
  2705  0000                     ttemp6	set	btemp+4
  2706  0000                     ttemp7	set	btemp+8
  2707                           tosu	equ	0xFFF
  2708                           tosh	equ	0xFFE
  2709                           tosl	equ	0xFFD
  2710                           stkptr	equ	0xFFC
  2711                           pclatu	equ	0xFFB
  2712                           pclath	equ	0xFFA
  2713                           pcl	equ	0xFF9
  2714                           tblptru	equ	0xFF8
  2715                           tblptrh	equ	0xFF7
  2716                           tblptrl	equ	0xFF6
  2717                           tablat	equ	0xFF5
  2718                           prodh	equ	0xFF4
  2719                           prodl	equ	0xFF3
  2720                           indf0	equ	0xFEF
  2721                           postinc0	equ	0xFEE
  2722                           postdec0	equ	0xFED
  2723                           preinc0	equ	0xFEC
  2724                           plusw0	equ	0xFEB
  2725                           fsr0h	equ	0xFEA
  2726                           fsr0l	equ	0xFE9
  2727                           wreg	equ	0xFE8
  2728                           indf1	equ	0xFE7
  2729                           postinc1	equ	0xFE6
  2730                           postdec1	equ	0xFE5
  2731                           preinc1	equ	0xFE4
  2732                           plusw1	equ	0xFE3
  2733                           fsr1h	equ	0xFE2
  2734                           fsr1l	equ	0xFE1
  2735                           bsr	equ	0xFE0
  2736                           indf2	equ	0xFDF
  2737                           postinc2	equ	0xFDE
  2738                           postdec2	equ	0xFDD
  2739                           preinc2	equ	0xFDC
  2740                           plusw2	equ	0xFDB
  2741                           fsr2h	equ	0xFDA
  2742                           fsr2l	equ	0xFD9
  2743                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     11      79
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_read_ds_dual_de_gozaru
    _spi_init->_SPI_begin
    _read_ds_dual_init->_Serial1_begin
    _read_ds_dual_de_gozaru->_GOOD_de_gozaru
    _GOOD_de_gozaru->_bit_test

Critical Paths under _wood_isr in COMRAM

    _wood_isr->i2_TIMER0_16bit_set_count
    _wood_isr->i2_TIMER1_set_count

Critical Paths under _main in BANK0

    None.

Critical Paths under _wood_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _wood_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _wood_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _wood_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _wood_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _wood_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _wood_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _wood_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _wood_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _wood_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _wood_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _wood_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _wood_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _wood_isr in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1324
                   _TIMER1_set_count
                       _TIMER1_setup
                  _enable_interrupts
                           _pin_init
             _read_ds_dual_de_gozaru
                  _read_ds_dual_init
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0     120
                          _SPI_begin
 ---------------------------------------------------------------------------------
 (2) _SPI_begin                                            2     0      2     120
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _read_ds_dual_init                                    0     0      0     589
                      _Serial1_begin
             _TIMER0_16bit_set_count
                       _TIMER0_setup
                  _enable_interrupts
 ---------------------------------------------------------------------------------
 (2) _enable_interrupts                                    1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TIMER0_setup                                         2     0      2     120
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TIMER0_16bit_set_count                               2     0      2     170
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Serial1_begin                                        3     0      3     284
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _read_ds_dual_de_gozaru                               1     1      0     310
                                             10 COMRAM     1     1      0
                      _BAD_de_gozaru
                     _GOOD_de_gozaru
                   _always_de_gozaru
 ---------------------------------------------------------------------------------
 (2) _always_de_gozaru                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GOOD_de_gozaru                                       1     1      0     310
                                              9 COMRAM     1     1      0
                           _bit_test
                        _output_LED5
 ---------------------------------------------------------------------------------
 (3) _output_LED5                                          1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bit_test                                             5     4      1     295
                                              4 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _BAD_de_gozaru                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TIMER1_setup                                         2     0      2     120
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TIMER1_set_count                                     2     0      2     170
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _wood_isr                                             2     2      0     140
                                              2 COMRAM     2     2      0
                  _read_ds_dual_byte
           i2_TIMER0_16bit_set_count
                 i2_TIMER1_set_count
 ---------------------------------------------------------------------------------
 (5) i2_TIMER1_set_count                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) i2_TIMER0_16bit_set_count                             2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _read_ds_dual_byte                                    1     1      0       0
                                              0 COMRAM     1     1      0
                       _Serial1_read
 ---------------------------------------------------------------------------------
 (6) _Serial1_read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TIMER1_set_count
   _TIMER1_setup
   _enable_interrupts
   _pin_init
   _read_ds_dual_de_gozaru
     _BAD_de_gozaru
     _GOOD_de_gozaru
       _bit_test
       _output_LED5
     _always_de_gozaru
   _read_ds_dual_init
     _Serial1_begin
     _TIMER0_16bit_set_count
     _TIMER0_setup
     _enable_interrupts
   _spi_init
     _SPI_begin

 _wood_isr (ROOT)
   _read_ds_dual_byte
     _Serial1_read
   i2_TIMER0_16bit_set_count
   i2_TIMER1_set_count

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      B      4F       1       84.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F       8        0.0%
DATA                 0      0      4F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Apr 28 18:19:40 2019

                              __CFG_CP$OFF 000000                                        l461 03EC  
                                      l750 0092                                        l751 009C  
                                      l743 005C                                        l752 00A6  
                                      l753 00B0                                        l745 0060  
                                      l754 00BA                                        l746 006A  
                                      l755 00C2                                        l747 0074  
                                      l756 00CA                                        l748 007E  
                                      l757 00D2                                        l749 0088  
                                      l758 00DA                                        l890 032E  
                                      l891 033A                                        l892 0346  
                                      l893 0352                                        l886 030A  
                                      l888 0316                                        l889 0322  
                             __CFG_CPD$OFF 000000                       ??i2_TIMER1_set_count 0043  
                                      wreg 000FE8  read_ds_dual_de_gozaru@first_communication 004E  
                             __CFG_LVP$OFF 000000             ten_bit_test_unsignedint@F14391 0025  
                             __CFG_ZCD$OFF 000000                                       l1002 014C  
                                     l1009 0220                                       l2028 00E2  
                                     l1167 0480                                       l3336 05D0  
                                     l3360 03C0                                       l3352 0398  
                                     l3364 03D6                                       l3356 03AA  
                                     l3534 057A                                _output_LED5 0306  
                                     l3480 01FC                                       l3448 015C  
                                     l3386 04AE                                       l3458 0196  
                                     l3484 0202                                       l1974 035E  
                                     l3486 0216                                       _LATA 000F79  
                                     u1510 0498                                       _LATB 000F7A  
                                     _LATC 000F7B                                       u1424 05BC  
                                     _LATD 000F7C                                       u1425 05B8  
                                     _LATE 000F7D                                       u1530 04C6  
                                     _LATF 000F7E                                       _LATG 000F7F  
                                     u1516 049A                                       _LATH 000F80  
                                     u1536 04C8                                       _T2PR 000FBC  
                                     _T4PR 000FB6                                       _T6PR 000FB0  
                                     _T8PR 000F29                      __end_of_Serial1_begin 03FC  
                                     _TMR2 000FBB                                       _TMR4 000FB5  
                                     _TMR6 000FAF                                       _TMR8 000F28  
                 ??_TIMER0_16bit_set_count 0047                                       _WPUA 000E91  
                                     _WPUB 000E99                                       _WPUC 000EA1  
                                     _WPUD 000EA6                                       _WPUE 000EAE  
                                     _WPUF 000EB3                                       _WPUG 000EBB  
                                     _WPUH 000EC0                                       _data 001B  
                                     _main 0550                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 0050                              __CFG_BOREN$ON 000000  
                                     start 0054            __size_of_read_ds_dual_de_gozaru 00E6  
                            __CFG_CSWEN$ON 000000                               ___param_bank 000000  
                            __CFG_SCANE$ON 000000                                      _ADACQ 000F5C  
                                    ?_main 0041                                      _ADCLK 000F57  
                                    _ADPCH 000F5F                                      _ADREF 000F58  
                                    _ADPRE 000F5E                              __CFG_WDTE$OFF 000000  
                                    _T1CON 000FCF                                      _T2CON 000FBD  
                                    _T3CON 000FC9                                      _T4CON 000FB7  
                                    _T2HLT 000FBE                                      _T5CON 000FC3  
                                    _T6CON 000FB1                                      _T4HLT 000FB8  
                           __CFG_DEBUG$OFF 000000                                      _T7CON 000F30  
                                    _T8CON 000F2A                                      _T6HLT 000FB2  
                                    _T8HLT 000F2B                                      _T2RST 000FC0  
                                    _T4RST 000FBA                                      _T6RST 000FB4  
                                    _T8RST 000F2D                                      _TMR0H 000FD4  
                                    _TMR1H 000FCE                                      _TMR0L 000FD3  
                                    _TMR1L 000FCD                                      _TMR3H 000FC8  
                                    _TMR3L 000FC7                                      _TMR5H 000FC2  
                                    _TMR5L 000FC1                                      _TMR7H 000F2F  
                                    _TMR7L 000F2E                                      _TRISA 000F81  
                                    _TRISB 000F82                                      _TRISC 000F83  
                                    _TRISD 000F84                                      _TRISE 000F85  
                                    _TRISF 000F86                                      _TRISG 000F87  
                                    _TRISH 000F88                           _always_de_gozaru 0638  
                            __CFG_WRT0$OFF 000000                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                              __CFG_WRT3$OFF 000000  
                            __CFG_PWRTE$ON 000000                              __CFG_WRT4$OFF 000000  
                            __CFG_WRT5$OFF 000000                              __CFG_WRT6$OFF 000000  
                            __CFG_WRT7$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                           __CFG_EBTR4$OFF 000000                             __CFG_EBTR5$OFF 000000  
                           __CFG_EBTR6$OFF 000000                             __CFG_EBTR7$OFF 000000  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                             __CFG_EBTRB$OFF 000000  
                       __CFG_MCLRE$EXTMCLR 000000                                      tablat 000FF5  
                                    ttemp5 0051                                      ttemp6 0054  
                                    ttemp7 0058                                      status 000FD8  
                                    wtemp8 0051                         __size_of_SPI_begin 000C  
                          __initialization 051A                          ?_TIMER1_set_count 0045  
                             __end_of_main 0580                         ??_TIMER1_set_count 0047  
                                   ??_main 004C                              __activetblptr 000003  
                   _read_ds_dual_de_gozaru 0140                                     _ADCON0 000F60  
                                   _ADCON1 000F59                                     _ADCON2 000F5A  
                                   _ADCON3 000F5B                                     _ADRESH 000F64  
                                   _ADRESL 000F63                             _GOOD_de_gozaru 0470  
                                   _ANSELA 000E92                                     _ANSELB 000E9A  
                                   _ANSELD 000EA7                                     _ANSELE 000EAF  
                                   _ANSELF 000EB4                                     _ANSELG 000EBC  
                                   _T0CON0 000FD5                                     _T0CON1 000FD6  
                                   _T1GCON 000FD0                                     _T3GCON 000FCA  
                                   _T5GCON 000FC4                                     _RC1REG 000F98  
                                   _RB0PPS 000E5A                                     _RC2REG 000EF1  
                                   _RB1PPS 000E5B                                     _T7GCON 000F31  
                                   _RC3REG 000EEA                                     _RC0PPS 000E62  
                                   _RC4REG 000EE3                                     _RC1STA 000F9C  
                                   _RC5REG 000EDC                                     _RC2STA 000EF5  
                                   _RC3STA 000EEE                                     _RC4STA 000EE7  
                                   _RC5STA 000EE0                                     _ODCONA 000E90  
                                   _ODCONB 000E98                                     _ODCONC 000EA0  
                                   _RC6PPS 000E68                                     _RD4PPS 000E6E  
                                   _ODCOND 000EA5                                     _ODCONE 000EAD  
                                   _ODCONF 000EB2                                     _ODCONG 000EBA  
                                   _ODCONH 000EBF                                     _RD6PPS 000E70  
                                   i2l2220 045C                                     i2l1156 0048  
                                   i2l2208 0434                             __CFG_WDTCCS$SC 000000  
                                   i2l2226 046A                                     i2l3518 0034  
          __size_of_TIMER0_16bit_set_count 000A                      _CSV_lib_transmit_flag 0031  
                                   _TX1REG 000F99                                     _TX2REG 000EF2  
                                   _TX3REG 000EEB                                     _TX4REG 000EE4  
                                   _TX1STA 000F9D                                     _TX5REG 000EDD  
                                   _TX2STA 000EF6                                     _TX3STA 000EEF  
                                   _TX4STA 000EE8                                     _TX5STA 000EE1  
                         __end_of_bit_test 05D4                             __CFG_XINST$OFF 000000  
                           __CFG_STVREN$ON 000000                                     clear_0 0540  
                         __end_of_pin_init 0306                             output_LED5@num 0045  
                        __end_of_SPI_begin 05F0                               __pdataCOMRAM 004C  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                           __end_of_spi_init 05AA  
                   __end_of_GOOD_de_gozaru 04DC                     __size_of_BAD_de_gozaru 0006  
                         __end_of_wood_isr 0054                                 __accesstop 0060  
                  __end_of__initialization 0546                            __CFG_FEXTOSC$HS 000000  
                            ___rparam_used 000001                             __pcstackCOMRAM 0041  
        __size_ofi2_TIMER0_16bit_set_count 000A                  ?i2_TIMER0_16bit_set_count 0041  
                   _TIMER0_16bit_set_count 05FC                              ?_Serial1_read 0041  
                          ?_GOOD_de_gozaru 0041                               ?_output_LED5 0041  
                        _read_ds_dual_byte 03FC                          _read_ds_dual_init 04DC  
                            ?_TIMER0_setup 0045                              ?_TIMER1_setup 0045  
                       ?_read_ds_dual_byte 0041                         ?_read_ds_dual_init 0041  
                 __end_of_always_de_gozaru 063A                             _SSP1DATPPSbits 000E1A  
                   i2TIMER1_set_count@data 0041                              _BAD_de_gozaru 062E  
                      ??_read_ds_dual_byte 0041                        ??_read_ds_dual_init 0048  
                           _SSP2DATPPSbits 000E1D                             _SSP1CLKPPSbits 000E19  
                           ??_Serial1_read 0041                                    _SP1BRGH 000F9B  
                                  _SP1BRGL 000F9A                __size_ofi2_TIMER1_set_count 000A  
                                  _SP2BRGH 000EF4                                    _SP2BRGL 000EF3  
                                  _SP3BRGH 000EED                                    _SP3BRGL 000EEC  
                                  _SP4BRGH 000EE6                                    _SP4BRGL 000EE5  
                                  _SP5BRGH 000EDF                                    _SP5BRGL 000EDE  
                                  i2u45_40 0442                             _SSP2CLKPPSbits 000E1C  
                                  i2u48_40 0456                                    _TMR1CLK 000FD2  
                                  _DS_data 0001                                    _TMR3CLK 000FCC  
                                  _TMR5CLK 000FC6                                    _TMR7CLK 000F33  
                                ?_bit_test 0045                                    _SSP2ADD 000ED6  
                                  _SSP1BUF 000F91                                    _SSP2BUF 000ED5  
                __end_of_read_ds_dual_byte 0470                  __end_of_read_ds_dual_init 051A  
                           ??_TIMER0_setup 0047                             ??_TIMER1_setup 0047  
                                ?_pin_init 0041                                    __Hparam 0000  
                                  __Lparam 0000                           TIMER0_setup@data 0045  
                           ?_BAD_de_gozaru 0041                                  ?_spi_init 0041  
               read_ds_dual_de_gozaru@mode 003D                                    __pcinit 051A  
                  ?_read_ds_dual_de_gozaru 0041                                  ?_wood_isr 0041  
                                  __ramtop 0E00                     __size_of_Serial1_begin 0076  
                                  __ptext0 0550                                    __ptext1 0580  
                                  __ptext2 05E4                                    __ptext3 04DC  
                                  __ptext4 0058                                    __ptext5 05F0  
                                  __ptext6 05FC                                    __ptext7 0386  
                                  __ptext8 0140                                    __ptext9 0638  
                                _T1CONbits 000FCF                              SPI_begin@data 0045  
                                _T2CONbits 000FBD                                  _T3CONbits 000FC9  
                                _T4CONbits 000FB7                  __size_of_TIMER1_set_count 000A  
                                _T5CONbits 000FC3                                  _T6CONbits 000FB1  
                               ??_bit_test 0046                           TIMER1_setup@data 0045  
                                _T7CONbits 000F30                                  _T8CONbits 000F2A  
                     end_of_initialization 0546                          _sinyounai_DS_data 000E  
                               ??_pin_init 0045                          bit_test@bit_place 0045  
                                  postdec1 000FE5                                 ??_spi_init 0047  
                                  postinc0 000FEE                                    postinc2 000FDE  
           __end_of_read_ds_dual_de_gozaru 0226                      __CFG_WDTCPS$WDTCPS_31 000000  
                               ??_wood_isr 0043                                  _SPI_begin 05E4  
               __size_of_read_ds_dual_byte 0074                 __size_of_read_ds_dual_init 003E  
                            _Serial1_begin 0386                       __size_of_output_LED5 0080  
         __end_ofi2_TIMER0_16bit_set_count 0624                             _DS_uart_number 0040  
                     __end_of_Serial1_read 062E                         _CSV_lib_cycle_time 0035  
                          ??_BAD_de_gozaru 0045                    ?_TIMER0_16bit_set_count 0045  
              _DS_communication_error_time 0037                              __pidataCOMRAM 0634  
                         ??_GOOD_de_gozaru 004A                       __end_of_TIMER0_setup 05FC  
                        _enable_interrupts 0058                       __end_of_TIMER1_setup 05E4  
                       ?_enable_interrupts 0041                        start_initialization 051A  
                           bit_test@number 0048                                 ?_SPI_begin 0045  
                      ??_enable_interrupts 0045                             ?_Serial1_begin 0045  
             i2TIMER0_16bit_set_count@data 0041             __end_of_TIMER0_16bit_set_count 0606  
                         __CFG_LPBOREN$OFF 000000                          ?_always_de_gozaru 0041  
                       ??_always_de_gozaru 0045                  __end_of_enable_interrupts 0140  
                              __pbssCOMRAM 0001                           _TIMER1_set_count 0606  
                        __size_of_bit_test 002A                 TIMER0_16bit_set_count@data 0045  
                       ten_bit_test@F14387 002A                   i2_TIMER0_16bit_set_count 061A  
                                __pintcode 0008                          __size_of_pin_init 00E0  
                         __CFG_PPS1WAY$OFF 000000                          __size_of_spi_init 002A  
               __end_ofi2_TIMER1_set_count 061A                                   _BAUD1CON 000F9E  
                                 _BAUD2CON 000EF7                                   _BAUD3CON 000EF0  
                                 _BAUD4CON 000EE9                                   _BAUD5CON 000EE2  
                        __size_of_wood_isr 004C                                ??_SPI_begin 0047  
                          ??_Serial1_begin 0048                                   _T2CLKCON 000FBF  
                       Serial1_begin@speed 0045                                   _T4CLKCON 000FB9  
                    __size_of_Serial1_read 000A                                   _T6CLKCON 000FB3  
                                 _T8CLKCON 000F2C                             _CSV_lib_enable 003B  
                                 _LATAbits 000F79                                   _LATDbits 000F7C  
                                 _LATEbits 000F7D                                   _LATGbits 000F7F  
                                 _LATHbits 000F80                                   _PIE0bits 000E29  
                                 _PIE3bits 000E2C                                   _PIE4bits 000E2D  
                                 _PIE5bits 000E2E                        __CFG_BORV$VBOR_2P45 000000  
                                 _PIR0bits 000E33                                   _PIR3bits 000E36  
                                 _PIR4bits 000E37                                   _PIR5bits 000E38  
                                bit_test@i 0049                      __size_of_TIMER0_setup 000C  
                                 _SSP1CON1 000F95                                   _SSP2CON1 000ED9  
                                 _SSP2CON3 000EDB                      __size_of_TIMER1_setup 0010  
                     TIMER1_set_count@data 0045                                   _SSP1STAT 000F94  
                                 _SSP2STAT 000ED8                 __size_of_enable_interrupts 00E8  
                               _ADCON0bits 000F60                               _Serial1_read 0624  
                                copy_data0 052E                               _TIMER0_setup 05F0  
                             _TIMER1_setup 05D4                                   __Hrparam 0000  
                  __CFG_RSTOSC$EXTOSC_4PLL 000000                                   __Lrparam 0000  
                                 _bit_test 05AA                                   __ptext10 0470  
                                 __ptext11 0306                                   __ptext20 03FC  
                                 __ptext12 05AA                                   __ptext21 0624  
                                 __ptext13 062E                                   __ptext14 0226  
                                 __ptext15 05D4                                   __ptext16 0606  
                                 __ptext18 0610                                   __ptext19 061A  
                             _SSP1CON1bits 000F95                              ??_output_LED5 0045  
                             _SSP2CON2bits 000EDA                                   _csv_data 002D  
                             _DS_read_stop 003F                          Serial1_begin@data 0047  
                            __size_of_main 0030                       __CFG_WDTCWS$WDTCWS_7 000000  
                                 _pin_init 0226                   __end_of_TIMER1_set_count 0610  
                    __end_of_BAD_de_gozaru 0634                                   _spi_init 0580  
                                 int$flags 0050                      enable_interrupts@data 0045  
                             _SSP1STATbits 000F94                                   _wood_isr 0008  
                             _SSP2STATbits 000ED8                                 _INTCONbits 000FF2  
                __size_of_always_de_gozaru 0002                           _CSV_lib_now_time 0033  
                                 intlevel2 0000                 ??i2_TIMER0_16bit_set_count 0043  
                        __CFG_CLKOUTEN$OFF 000000                        __end_of_output_LED5 0386  
                 ??_read_ds_dual_de_gozaru 004B                             _before_DS_data 004C  
                              _DS_time_out 004F          read_ds_dual_de_gozaru@read_number 003E  
                               _RX1PPSbits 000E0F                                 _RX2PPSbits 000E11  
                               _TX1STAbits 000F9D                                 _TX2STAbits 000EF6  
                               _TX3STAbits 000EEF                    __size_of_GOOD_de_gozaru 006C  
                               _TX4STAbits 000EE8                                 _TX5STAbits 000EE1  
                       i2_TIMER1_set_count 0610                CSV_timer_task@CSV_lib_count 002F  
                             _push_DS_data 0039            read_ds_dual_de_gozaru@check_sum 003C  
                      ?i2_TIMER1_set_count 0041  
